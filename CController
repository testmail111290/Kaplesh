
$(document).ready(function () {
    $('#divModifier').hide();
    $('#divModifierName').hide();
    $('#lblWatermark').text("Enter any CAS Control Line");
    $("#txtControlText").removeAttr("readonly", "readonly");
    $("#txtControlText").focus();

    var MHIModifiersReqrClmNbr = ["LCDF", "TOT"];
    var ErrMsgModiferReqrClmNbr = " MODIFIER REQUIRES CLAIM NO       MULT SUFFIX SSN* MULT OOP/DED*";
    var cstmMhiErr = false;
    var UpdateScreensInFM = ["PDU", "CFC", "CFA", "CFU", "SNA", "SNU", "PXU", "RGU", "RGA", "MCU"];
    var ValidScreensInFM = ["PDI", "PDN", "ELI", "ELN", "ELP", "EDI", "ESI", "ESN", "ESP", "ETI", "ETN", "ETP", "EOI", "CSI", "CSN", "CNI", "CNN", "CNP", "IPI", "IPN", "IPP", "ISI", "ISN", "ISP", "PSI", "PAI", "PAN", "GNI", "GNP", "GNN", "CPI", "CPN", "DGI", "DGN", "DGP", "RGI", "RGA", "RGN", "RGU", "RGM", "RGP", "PDU", "CFI", "CFN", "CFC", "CFU", "CFA", "SNI", "SNA", "SNU", "SNP", "SNN", "PXI", "PXN", "PXU", "ESU", "PMDI", "BCOP", "PMDN", "PMD3", "PMD4", "PMCI", "PMCN", "PMC3", "PMC4", "PMFI", "PMFN", "PMF3", "PMF4", "S5PI", "PMEI", "PME3", "PME4", "PME5", "UF6I", "PMEN", "UF7I", "S6PI", "ZIPI", "PMDU", "PMCU", "PMFU", "PMEU", "S6PU", "S5PU", "UF6U", "UF7U", "ZIPU", "EXC", "MCI", "MCP", "MCN", "MCU", "BYBY", "EXIT"];
    var invalidFMScrnGenErrMsg = "UPDATES NOT ACCEPTED-SELECT FILE MAINTENANCE FROM MAIN MENU TO APPLY UPDATES";
    var validUMIDscreens = ["MYI", "MZI", "MQI", "MJI", "MXI", "MPI", "MEI", "MKI", "MDI", "MHI", "MRI", "MSI", "CRI", "CWI", "PCI", "PRI", "CMI", "RFI", "RSI"];
    var invalidFMScrnErrMsg = "INVALID CONTROL TYPE";
    var invalidFMScrnErrMsgXCI = "TRANSACTION INVALID FOR THIS DDE SELECTIN";
    var ELIClaimNo = "";
    var ESIClaimNo = "";
    var ETIClaimNo = "";
    var SNINo = "";
    var PrevSniCntrlTyp = ""
    var PXINo = "";
    var MRINo = "";
    var PDIClaimNo = "";
    var ESCNEXT = "";
    var IPINo = "";
    var CFINo = "";
    var CRINo = "";
    var CWINo = "";
    var PCINo = "";
    var RGINo = "";
    var PRINo = "";
    var DGINo = "";
    var RSINo = "";
    var ELINo = "";
    var DMIClaimNo = "";
    var CPINo = "";
    var MHISuffixVal = null;
    var MHIcntLine = null;
    var CNINo = "";
    var CSINo = "";
    var MHINo = "";
    var PAINo = "";
    var ASINo = "";
    var ISINo = "";
    var RFINo = "";
    var XCINo = "";
    var isMSSRequired = "False";
    var RSIToRFINo = "";
    var GNITOGNP = "";
    var iSITOISP = "";
    var GNINo = "";
    var MDINo = "";
    var MGINo = "";
    var MAINo = "";
    var MTINo = "";
    var MSINo = "";
    var oldCntrlLine = "";
    var MCIClaimNo = "";
    var checkdropdownEnter = "";
    var $lastFocus;
    var previousRss = "";
    var CMINo = "";
    var isSuffixReq = false;

    $('[data-toggle="tooltip"]').tooltip();

    $("#txtControlText").addClass("lightText")
    // set default value
.val("Enter any CAS Control Line")
    // onfocus action
.focus(function () {
    if ($(this).val() == "Enter any CAS Control Line") {
        $(this).removeClass("lightText").val("");
    }
    // focus lost action
}).blur(function () {
    if ($(this).val() == "") {
        $(this).val("Enter any CAS Control Line").addClass("lightText");
    }
});

    $("#txtControlText").keyup(function (e) {
        GetWaterMark();
    });

    $("#txtControlText").focusin(function (e) {
        GetWaterMark();
    });

    function GetWaterMark() {

        var enterCheck = $('#hdnEnterKeyFlag').val();
        if (!enterCheck)
            $('#hdnEnterKeyFlag').val("true");
        var controlList = $.trim($("#txtControlText").val().toUpperCase());
        // $("#txtControlText").val(controlList);
        var arrList = controlList.split(",");
        if (controlList.length > 0) {
            switch (arrList[0]) {
                case "CFI":
                    $('#lblWatermark').text("CFI,Provider Number,Indicator,\<Provider Suffix\>,<\LOB\>");
                    break;
                case "CSI":
                    $('#lblWatermark').text(arrList[0] + ",Provider Number,Indicator,\<Provider Suffix\>");
                    break;
                case "ELI":
                    $('#lblWatermark').text("ELI,Claim Number,\<Member ID\>");
                    break;
                case "EDI":
                    $('#lblWatermark').text("EDI,Claim Number,\<Member ID\>");
                    break;
                case "ESI":
                    $('#lblWatermark').text("ESI,Provider/Member ID/Claim,P/D/H/N/S/C,<YYMM/YYMMDD>");
                    break;
                case "EOI":
                    $('#lblWatermark').text("EOI,Claim Number,Member ID,<Suffix>");
                    break;
                case "ETI":
                    $('#lblWatermark').text("ETI,Claim Number,\<Member ID\>");
                    break;
                case "EBI":
                    $('#lblWatermark').text("EBI,Member ID,Suffix,FirstName,Rel");
                    break;
                case "RDI":
                    $('#lblWatermark').text("RDI,Member ID,Suffix,FirstName,Rel");
                    break;
                case "API":
                    $('#lblWatermark').text("API,Member ID,Suffix,FirstName,Rel");
                    break;
                case "LTI":
                    $('#lblWatermark').text("LTI,Member ID,Suffix,FirstName,Rel");
                    break;
                case "LTS":
                    $('#lblWatermark').text("LTS,Member ID,Suffix,FirstName,Rel");
                    break;
                case "SDI":
                    $('#lblWatermark').text(arrList[0] + ",Member ID,Suffix,FirstName,Rel");
                    break;
                case "DGI":
                    $('#lblWatermark').text("DGI,\<Diagcode\/Proc\-code\>,\<9\/10\>,\<D\/P\>");
                    break;
                case "DMI":
                    $('#lblWatermark').text("DMI,Member ID,FirstName,RelCode,HCPCS");
                    break;
                case "MHI":
                    $('#lblWatermark').text("MHI,Member ID,Suffix,FirstName,Rel,\<ClaimNbr\>,\<Modifier\>");//default water Mark For MHI
                    if (typeof toggles != 'undefined' && toggles.UMIDFeature == 'true') {
                        if (/^H/.test(arrList[1])) {
                           
                            if (arrList.length == 2 && arrList.length <3) {
                                $('#lblWatermark').text("MHI,UMID");
                                break;
                            }
                            else if (arrList.length >= 3 && arrList[1].length>1) {
                                $('#lblWatermark').text(arrList[0]+",UMID,Suffix,FirstName,Rel,\<ClaimNbr\>,\<Modifier\>");
                                break;
                            }

                        }
                    }

                    $('#lblWatermark').text(arrList[0] + ",Member ID,Suffix,FirstName,Rel,\<ClaimNbr\>,\<Modifier\>");

                    break;
                case "MRI":
                    if (typeof toggles != 'undefined' && toggles.UMIDFeature == 'true') {
                        if (/^H/.test(arrList[1])) {
                            if (arrList.length == 2 && arrList.length < 3) {
                                $('#lblWatermark').text("MRI,UMID");
                                break;
                            }
                            else if (arrList.length >= 3 && arrList[1].length>1) {
                                $('#lblWatermark').text("MRI,UMID,\<Suffix\>,\<Modifier\>");
                                break;
                            }
                        }
                    }
                    $('#lblWatermark').text("MRI,Member ID,\<Suffix\>,\<Modifier\>");
                    break;
                case "PDI":
                    $('#lblWatermark').text("PDI,Provider Number,Indicator,<Suffix>");
                    break;
                case "CWI":
                    if (typeof toggles != 'undefined' && toggles.UMIDFeature == 'true') {
                        if (/^H/.test(arrList[1])) {
                            if (arrList.length == 2 && arrList.length < 3) {
                                $('#lblWatermark').text("CWI,UMID");
                                break;
                            }
                            if (arrList.length >= 3 && arrList[1].length > 1) {
                                $('#lblWatermark').text("CWI,UMID,Suffix,First Name,Rel");
                                break;
                            }
                        }
                    }
                    $('#lblWatermark').text("CWI,Member ID,Suffix,First Name,Rel");

                    break;
                case "CWA":
                    $('#lblWatermark').text("CWA,Member ID,Suffix,First Name,Rel");
                    break;
                case "ASI":
                    $('#lblWatermark').text("ASI,Last Name,<First Name>,<State>");
                    break;
                case "PSI":
                    $('#lblWatermark').text("PSI,LastName FirstName,\<Indicator\>,\<State Abbreviation\>");
                    break;
                case "MDI":
                    if (typeof toggles != 'undefined' && toggles.UMIDFeature == 'true') {
                        if (/^H/.test(arrList[1])) {
                            if (arrList.length == 2 && arrList.length < 3) {
                                $('#lblWatermark').text("MDI,UMID");
                                break;
                            }
                            if (arrList.length >=3 && arrList[1].length > 1) {
                                $('#lblWatermark').text("MDI,UMID,Suffix,First Name,Rel,(MMYY/Claim Number),<C>");
                                break;
                            }
                        }
                    }

                    $('#lblWatermark').text("MDI,Member ID,Suffix,First Name,Rel,(MMYY/Claim Number),<C>");

                    break;
                case "RFI":
                    if (typeof toggles != 'undefined' && toggles.UMIDFeature == 'true') {
                        if (/^H/.test(arrList[1])) {
                            if (arrList.length == 2 && arrList.length < 3) {
                                $('#lblWatermark').text("RFI,UMID");
                                break;
                            }
                            if (arrList.length >= 3 && arrList[1].length >1 ) {
                                $('#lblWatermark').text("RFI,UMID,<Suffix>,FirstName,Relationship, <Modifier>");
                                break;
                            }
                        }
                    }

                    $('#lblWatermark').text("RFI,MemberID,<Suffix>,FirstName,Relationship, <Modifier>");

                    break;
                case "CLI":
                    $('#lblWatermark').text("CLI,Member ID,Suffix");
                    break;

                case "RGI":
                    $('#lblWatermark').text("RGI,Client,<Line of Business>,<Consol Mkt>,<Base Mkt>,<Group/Customer>,<Grouper Nbr>,<Pcp ID>,<Effective Date>");
                    break;
                case "RMI":
                    $('#lblWatermark').text("RMI,Member ID,Suffix");
                    break;
                case "SNI":
                    $('#lblWatermark').text("SNI,Network Number");
                    break;
                case "MPI":
                case "MQI":
                case "MJI":
                case "MYI":
                case "MZI":
                case "MXI":
                case "MEI":
                case "MKI":
                    if (typeof toggles != 'undefined' && toggles.UMIDFeature == 'true') {
                        if (/^H/.test(arrList[1])) {
                            if (arrList.length == 2 && arrList.length < 3) {
                                $('#lblWatermark').text(arrList[0] + ",UMID");
                                break;
                            }
                            if (arrList.length >= 3 && arrList[1].length >1) {
                                $('#lblWatermark').text(arrList[0] + ",UMID,<Suffix>,First Name,Rel,<ClaimNbr>");
                                break;
                            }
                        }
                    }

                    $('#lblWatermark').text(arrList[0] + ",Member ID,<Suffix>,First Name,Rel,ClaimNbr");

                    break;
                case "GNI":
                    $('#lblWatermark').text("GNI,Network Number");
                    break;
                case "IPI":
                    $('#lblWatermark').text("IPI,Name");
                    break;
                case "CRI":
                    if (typeof toggles != 'undefined' && toggles.UMIDFeature == 'true') {
                        if (/^H/.test(arrList[1])) {
                            if (arrList.length == 2 && arrList.length < 3) {
                                $('#lblWatermark').text("CRI,UMID");
                                break;
                            }
                            if (arrList.length >= 3 && arrList[1].length > 1) {
                                $('#lblWatermark').text("CRI,UMID, Suffix, First Name, REL");
                                break;
                            }
                        }
                    }

                    $('#lblWatermark').text("CRI,Member ID, Suffix, First Name, REL");

                    break;
                case "PRI":
                    if (typeof toggles != 'undefined' && toggles.UMIDFeature == 'true') {
                        if (/^H/.test(arrList[1])) {
                            if (arrList.length == 2 && arrList.length < 3) {
                                $('#lblWatermark').text("PRI,UMID");
                                break;
                                }
                            if (arrList.length >= 3 && arrList.length >1) {
                                $('#lblWatermark').text("PRI,UMID,<Suffix>, First Name, Relationship, <Claim Number> ");
                                break;
                            }
                        }
                    }

                    $('#lblWatermark').text("PRI,Member ID,<Suffix>, First Name, Relationship, <Claim Number> ");

                    break;
                case "CNI":
                    $('#lblWatermark').text("CNI,Network Number");
                    break;
                case "RSI":
                    if (typeof toggles != 'undefined' && toggles.UMIDFeature == 'true') {
                        if (/^H/.test(arrList[1])) {
                            if (arrList.length == 2 && arrList.length < 3) {
                                $('#lblWatermark').text("RSI,UMID");
                                break;
                            }
                            if (arrList.length >=3 && arrList[1].length > 1) {
                                $('#lblWatermark').text("RSI,UMID,<Suffix>,FirstName,Relationship");
                                break;
                            }
                        }
                    }

                    $('#lblWatermark').text("RSI,MemberID,<Suffix>,FirstName,Relationship");

                    break;
                case "PCI":
                    if (typeof toggles != 'undefined' && toggles.UMIDFeature == 'true') {
                        if (/^H/.test(arrList[1])) {
                            if (arrList.length == 2 && arrList.length < 3) {
                                $('#lblWatermark').text("PCI,UMID");
                                break;
                            }
                            if (arrList.length >= 3 && arrList[1].length > 1) {
                                $('#lblWatermark').text("PCI,UMID,<Suffix>,First Name,Relationship,<Claim Number>");
                                break;
                            }
                        }
                    }

                    $('#lblWatermark').text("PCI,Member ID,<Suffix>,First Name,Relationship,<Claim Number>");

                    break;
                case "PAI":
                    $('#lblWatermark').text("PAI,Provider Number,Suffix");
                    break;
                case "RMI":
                    $('#lblWatermark').text("RMI,Member ID,Suffix");
                    break;
                case "PXI":
                    $('#lblWatermark').text("PXI,Provider Number,Suffix");
                    break;
                case "SNI":
                    $('#lblWatermark').text("SNI,Network Number");
                    break;
                case "MAI":
                    $('#lblWatermark').text(arrList[0] +",Member ID,<Suffix>,First Name, Relationship,MMYY");
                    break;
                case "MGI":
                    $('#lblWatermark').text(arrList[0] +",Member ID,<Suffix>,First Name, Relationship,MMYY");
                    break;
                case "MTI":
                    $('#lblWatermark').text(arrList[0] +",Member ID,<Suffix>,First Name, Relationship,MMYY");
                    break;
                case "ISI":
                    $('#lblWatermark').text("ISI,Provider ID");
                    break;
                case "JJI":
                    $('#lblWatermark').text("JJI,Member ID,Suffix");
                    break;
                case "MSI":
                    if (typeof toggles != 'undefined' && toggles.UMIDFeature == 'true') {
                        if (/^H/.test(arrList[1])) {
                            if (arrList.length == 2 && arrList.length < 3) {
                                $('#lblWatermark').text(arrList[0] +",UMID");
                                break;
                            }
                            if (arrList.length >= 3 && arrList[1].length >1) {
                                $('#lblWatermark').text(arrList[0] +",UMID,<Suffix>,First Name or First Initial,Relationship,<Claim Number>");
                                break;
                            }
                        }
                    }

                    $('#lblWatermark').text(arrList[0] +",Member ID,<Suffix>,First Name or First Initial,Relationship,<Claim Number>");

                    break;
                case "ESC":
                    $('#lblWatermark').text("ESC,Client No. Region");
                    break;
                case "CPI":
                    $('#lblWatermark').text("CPI,PROCEDURE NAME OR PROCEDURE CODE");
                    break;
                case "XCI": case "XRI": case "XHI":
                    if (arrList.length > 5) {
                        $('#lblWatermark').text(arrList[0] + ",Group Number,,Member ID,<Member suffix>,First Name,Relationship code,Claim Number");
                    }
                    else if (arrList.length >= 3) {
                        if (arrList[3] === "C") {
                            $('#lblWatermark').text(arrList[0] + ",Group Number,,C,Claim Number");
                        }
                        else if (arrList[3] === "S") {
                            $('#lblWatermark').text(arrList[0] + ",Group Number,,S,Member ID,<member suffix>");
                        }
                        else if (arrList[3] === "P") {
                            $('#lblWatermark').text(arrList[0] + ",Group Number,,P,Provider tax ID,<Provider suffix>");
                        }
                        else if (arrList[3] === "D") {
                            $('#lblWatermark').text(arrList[0] + ",Group Number,,D,Suspense Date");
                        }
                        else {
                            $('#lblWatermark').text(arrList[0] + ",Group Number,,C/S/P/D,Claim Number/Member ID/Provider tax ID/Suspense Date");
                        }
                    }
                    else {
                        $('#lblWatermark').text(arrList[0] + ",Group Number");
                    }
                    break;
                default:
                    $('#lblWatermark').text("Enter any CAS Control Line");
                    break;
                case "PMDI":
                    $('#lblWatermark').text("PMDI,Group ID,Subgroup ID,<Modifier>");
                    break;
                case "PMFI":
                    $('#lblWatermark').text("PMFI,Group ID,Subgroup ID,<Modifier>");
                    break;
                case "PMD3":
                    $('#lblWatermark').text("PMD3");
                    break;
                case "PMD4":
                    $('#lblWatermark').text("PMD4");
                    break;
                case "PMF3":
                    $('#lblWatermark').text("PMF3");
                    break;
                case "PMF4":
                    $('#lblWatermark').text("PMF4");
                    break;
                case "PME3":
                    $('#lblWatermark').text("PME3");
                    break;
                case "PME4":
                    $('#lblWatermark').text("PME4");
                    break;
                case "PMCI":
                    $('#lblWatermark').text("PMCI,Group ID,Subgroup ID,<Modifier>");
                    break;
                case "ZIPI":
                    $('#lblWatermark').text("ZIPI,Record pointer,Provider’s UC ZIP code,");
                    break;
                case "S6PI":
                    $('#lblWatermark').text("S6PI,FEE SCHEDULE,GEOGRAPHICAL CODE,Procedure CODE,");
                    break;
                case "S5PI":
                    $('#lblWatermark').text("S5PI,FEE SCHEDULE,GEOGRAPHICAL CODE,Procedure CODE,");
                    break;
                case "UF6I":
                    $('#lblWatermark').text("UF6I,FEE SCHEDULE,GEOGRAPHICAL CODE,Procedure CODE,");
                    break;
                case "UF7I":
                    $('#lblWatermark').text("UF7I,CPT IV schedule,000,CPT Code,");
                    break;
                case "BCOP":
                    $('#lblWatermark').text("BCOP");
                    break;
                case "PMEI":
                    $('#lblWatermark').text("PMEI,Group ID,Subgroup ID,<Modifier>");
                    break;
                case "OSI":
                    $('#lblWatermark').text("OSI, Member ID,<Suffix>,First Name or First Initial, Relationship");
                    break;
                case "MCI":
                    {
                        var MCIWaterMark = arrList[0] + ",TIN,Indicator,<Suffix>,<Medicaid-Id>";
                        $('#lblWatermark').text(MCIWaterMark);
                    }
                    break;
                case "EXC":
                    $('#lblWatermark').text("EXC,Client,<Line of Business>,<Consol Mkt>,<Base Mkt>,<Group/Customer>,<Grouper Nbr>,<Pcp ID>,<Effective Date>");
                    break;
                case "AHI":
                    $('#lblWatermark').text("AHI,Member ID,Suffix,FirstName,Rel");
                    break;
                case "CMI":
                    if (typeof toggles != 'undefined' && toggles.UMIDFeature == 'true') {
                        if (/^H/.test(arrList[1])) {
                            if (arrList.length == 2 && arrList.length < 3) {
                                $('#lblWatermark').text("CMI,UMID");
                                break;
                            }
                            if (arrList.length >= 3 && arrList[1].length > 1) {
                                var cntrl = "CMI,UMID,Suffix,FirstName,Rel,\<ClaimNbr\>";
                                if (arrList.length >= 6) {
                                    if (($.isNumeric(arrList[5]) && arrList[6] === "S") || arrList[5] === "S") {
                                        cntrl = cntrl + "\<S\>"
                                    }
                                }
                                $('#lblWatermark').text(cntrl);
                                break;
                            }
                        }

                    }

                    var cntrl = "CMI,Member ID,Suffix,FirstName,Rel,\<ClaimNbr\>";
                    if (arrList.length >= 6) {
                        if (($.isNumeric(arrList[5]) && arrList[6] === "S") || arrList[5] === "S") {
                            cntrl = cntrl + "\<S\>"
                        }
                    }
                    $('#lblWatermark').text(cntrl);

                    break;
                case "CBI":
                    var cntrl = arrList[0] + ", Member ID, Suffix, FirstName, Rel";
                    $('#lblWatermark').text(cntrl);
                    break;
            }
        }
    }

    $("#txtFunction").keydown(function (e) {
        
        var controlList = $.trim($("#txtControlText").val().toUpperCase());
        var arrList = controlList.split(",");
        if (e.which == 13 && (arrList[0] == "S5PI")) {
            $('#lblerrormsg').html("");
            e.preventDefault();
            loadPartialViewS5PI_Update(controlList, null);
        }
    });
    $(document).ajaxStart(function () {
        $('#hdnPageLoaded').val("false"); //added by Vibhav for Macro Pageload check
        console.log("in ajaxStart hdnPageLoaded = false");
    });
    $(document).ajaxStop(function () {
        $('#hdnPageLoaded').val("true"); //added by Vibhav for Macro Pageload check
        console.log("in ajaxStop hdnPageLoaded = true");
        HideMessage(); //added by Vibhav to Hide pop-up message if it is displayed (for copy paste service lines)

        //commented code to set Cursor at current position when window tabs
        // remove text highlight and set cursor position to zero position
        // for layout controlline textbox
        //$("#txtControlText").get(0).setSelectionRange(0, 0);
        //$("#txtControlText").focus(function () {
        //    $(this).get(0).setSelectionRange(0, 0);
        //});
        if (document.activeElement != null) {
            var focusedElement = document.activeElement.id;
            var selvalue = document.activeElement.value
            if (focusedElement == "txtControlText" && selvalue.length > 0) {
                $("#txtControlText").get(0).setSelectionRange(0, 0);
            }
        }
        //if ($("#txtControlText").val().length > 0 && ("#txtControlText").is(":focus")){
        //    $(this).get(0).setSelectionRange(0, 0);
        //}

        //commented the script to autofocus of functionkey on S6PI and S5PI screens
        //as per document update
        //VXK8568-04/09/2018
        //if ($("#txtControlText").val().indexOf("S6PI") >= 0 && $("#S6PIDto_pifunco").length > 0) {
        //    $("#S6PIDto_pifunco").focus();
        //}
        //if ($("#txtControlText").val().indexOf("S5PI") >= 0 && $("#S5PIDto_pifunco").length > 0) {
        //    $("#S5PIDto_pifunco").focus();
        //}

        //commented code to set Cursor at current position when window tabs
        ////INPUT FIELD VALUE NOT SELECTED WHEN FOCUS INSIDE
        //$("input:text").focus(function () {
        //    $(this).get(0).setSelectionRange(0, 0);
        //});

    });

    $("#btnControlLine").click(function (e) {
        $('#hdnPageLoaded').val("false"); //added by Vibhav for Macro Pageload check
        console.log("btnControlLine click hdnPageLoaded = false");
        $("#txtControlText").get(0).setSelectionRange(0, 0);
        if (typeof $.IsInsertKeyIn != 'undefined')
            $.IsInsertKeyIn = false;
        DisplayFrAndBaagBtn("");
        if (CheckPayOk()) {
            $('#lblerrormsg').html("");
            var controlList = $.trim($("#txtControlText").val().toUpperCase());
            //UAT Defect#350994  Fix
            //Allowing user to trigger BCOP 
            var controlLineCheck = controlList.split(',');
            if (controlLineCheck[0].indexOf('BCOP') >= 0)
                controlList = controlList.replace(controlList, "BCOP");

            if (controlLineCheck[0].indexOf('BYBY') == 0) {
                controlList = controlList.replace(controlList, "BYBY");

            }
            if (controlLineCheck[0].indexOf('EXIT') == 0) {
                controlList = controlList.replace(controlList, "EXIT");

            }
            //added for over functionality
            if (typeof toggles != 'undefined' && toggles.OverFeature == 'true') {
                if (controlLineCheck[0] == "OVER") {
                    loadPartialViewOver();
                    return false;
                }
            }
            if ((controlList != "") && (controlList.indexOf("PDI") >= 0
            || controlList.indexOf("PDU") >= 0
           || controlList.indexOf("PDN") >= 0
                || controlList.indexOf("MRI") >= 0)) {
                controlList = $("#txtControlText").val().toUpperCase()
            }
            //replaced junk apostro
            if (controlList != "" && controlList.indexOf("’") > 0)
                controlList = controlList.replace("’", "'");

            var ddlControl = $('select#txtControlTextMHI :selected').text().toUpperCase();
            var clntNbr = $('#clientnbr').html();
            var arrList = controlList.split(",");
            //$('#hdnMPCRedirectFlag').val(false);
            if ($('#S5piflag').length > 0 || $('#S6piflag').length > 0) {
                if (arrList[0] == "S5PI") {
                    $('#lblerrormsg').html("");
                    e.preventDefault();
                    return loadPartialViewS5PI_Update(controlList, null);
                }
                else if (arrList[0] == "S6PI") {
                    $('#lblerrormsg').html("");
                    e.preventDefault();
                    return loadPartialViewS6PI_Update(controlList, null);
                }
            }

            if (clntNbr == "File maintenance" && (arrList[0] == "XCI" || arrList[0] == "XRI" || arrList[0] == "XHI")) {
                $('#lblerrormsg').html(invalidFMScrnErrMsgXCI);
                return false;
            }

            if (clntNbr == "File maintenance" && (ValidScreensInFM.indexOf(arrList[0]) < 0 && ValidScreensInFM.indexOf(arrList[0].substring(0, 3)) < 0)) {
                $('#lblerrormsg').html(invalidFMScrnErrMsg);
                if (arrList[0] == "CPP") {
                    $('#divMainPage').hide();
                }
                return false;
            }
            if (clntNbr != "File maintenance" && (UpdateScreensInFM.indexOf(arrList[0]) >= 0)) {
                if ($("#controlLine").length > 0 && arrList[0].substring(0, 2) != $("#controlLine").val().substring(0, 2)) {
                    $('#lblerrormsg').html(invalidFMScrnGenErrMsg);
                    $('#txtControlText').val('');
                    $('#divMainPage').hide();
                    return false;
                }
                else if ($("#controlLine").length == 0) {
                    $('#lblerrormsg').html(invalidFMScrnGenErrMsg);
                    $('#txtControlText').val('');
                    return false;
                }
            }
            e.preventDefault();
            if (validationSummary(controlList)) {
               
                if ($("#controlLine").val() != "" && $("#controlLine").val() != null && $("#controlLine").val() != 'undefined') {
                    if ($("#controlLine").val().indexOf("MPC") == 0 || $("#controlLine").val().indexOf("MPF") == 0 || $("#controlLine").val().indexOf("MPB") == 0)
                        var retval = CheckForMPC();
                    if (retval == "true") {
                        return retval;
                    }
                    else if (retval == "false") {

                        return false;
                    }

                }

                var histNotReq = ["EBI", "JJI", "API", "SDI", "RDI", "LTI", "AHI", "BYBY", "EXIT", "CBI"];
                if (histNotReq.indexOf(arrList[0]) < 0) {
                    createCookie(controlList);//Auto History
                }

                if (controlList.length > 0) {

                    if (arrList[0] == "DMU" || arrList[0] == "DMN" || arrList[0] == "DMP")
                        loadPartialViewDMI(controlList);
                    else if (arrList[0] == "PDU")
                        loadPartialViewPDI(controlList);
                    else if (arrList[0] == "CWU" || arrList[0] == "CWA")
                        loadPartialViewCWI(controlList);
                    else if (arrList[0] == "OCU" || arrList[0] == "OCA")
                        loadPartialViewOCI(controlList);
                    else if (arrList[0] == "RGI")
                        RGMtoRGI();
                    else if (arrList[0] == "RGU" || arrList[0] == "RGA" || arrList[0] == "RGN" || arrList[0] == "RGP")
                        loadPartialViewRGI(controlList);
                    else if (arrList[0] == "PCU" || arrList[0] == "PCA")
                        loadPartialViewPCI(controlList);
                    else if (arrList[0] == "CRU" || arrList[0] == "CRA")
                        loadPartialViewCRI(controlList);
                    else if (arrList[0] == "RFU" || arrList[0] == "RFA" || arrList[0] == "RFN" || arrList[0] == "RFP") //RFI changes
                        loadPartialViewRFI(controlList);
                    else if ((arrList[0] == "XCI" || arrList[0] == "XHI" || arrList[0] == "XRI") && $('#hdnPageXCI').length > 0)
                        loadPartialViewUpdateXCI(controlList);
                    else if (arrList[0] == "PRU")
                        loadPartialViewPRI(controlList);
                    else if (arrList[0] == "MRU")
                        loadPartialViewMRU(controlList);
                    else if (arrList[0] == "CFU" || arrList[0] == "CFA" || arrList[0] == "CFC") 
                        loadPartialViewCFI(controlList);
                    else if (arrList[0] == "PXU")
                        loadPartialViewPXU(controlList);
                    else if (($("#editSNU").val() == "True") && (arrList[0] == "SNA" || arrList[0] == "SNU") && arrList[0] != "SNI")
                        loadPartialViewSNU(controlList);
                    else if (arrList[0] == "ESI" && arrList[2] == "C") {
                        var conESITOPDI = "EDI," + arrList[1]
                        loadPartialView(conESITOPDI);
                    }
                    else if ((arrList[0] == "MDN" || arrList[0] == "MDP") && arrList[5].length == 9) {
                        loadPartialViewMDI(controlList, null, null);
                    }
                    else if (arrList[0] == "JJI")
                        loadPartialViewJJI(controlList, "");
                    else if (arrList[0] == "API" || arrList[0] == "APF" || arrList[0] == "APB")
                        loadPartialViewAPI(controlList, "");
                    else if (arrList[0] == "LTI" || arrList[0] == "LTF" || arrList[0] == "LTS" || arrList[0] == "LTB")
                        loadPartialViewLTI(controlList, "");
                    else if (arrList[0] == "EBI")
                        loadPartialViewEBI(controlList, "");
                    else if (arrList[0] == "SDI" || arrList[0] == "SDN" || arrList[0] == "SDP" || arrList[0] == "SDF" || arrList[0] == "SDB")
                        loadPartialViewSDI(controlList, "");
                    else if (arrList[0] == "EXC")
                        loadPartialViewEXC(controlList, "");
                    else if (arrList[0] == "RDI" || arrList[0] == "RDN" || arrList[0] == "RDP" || arrList[0] == "RDF" || arrList[0] == "RDB")
                        loadPartialViewRDI(controlList, "");
                    else if (arrList[0] == "MCU" || arrList[0] == "MCN" || arrList[0] == "MCP")
                        loadPartialViewMCI(controlList);
                    else if (arrList[0] == "AHI")
                        loadPartialViewAHI(controlList, "");
                    else if (MHISuffixVal != null && (arrList[0] == "MHI" || arrList[0] == "MHN" || arrList[0] == "MHP"))
                        return MSStoMHI(controlList);
                    else if (arrList[0] == "CBI" || arrList[0] == "CBU" || arrList[0] == "CBB" || arrList[0] == "CBF")
                        loadPartialViewCBI(controlList, "", $('#hdnResScreen_ind').val());

                    else {
                        if (arrList[0] != "PDI")
                            $('#hdnPdiRedirectFlag').val(false);
                        MHISuffixVal = null;
                        loadPartialView(controlList);
                    }

                    $('#divModifier').hide();
                    $('#divModifierName').hide();
                    $('#lblerrormsg').html("");
                }
            }
            else {
                if (controlList != "BCOP") {

                    if ($("#controlLine").val() != "" && $("#controlLine").val() != null && $("#controlLine").val() != 'undefined') {
                        if ($("#controlLine").val().indexOf("MPB") == 0 || $("#controlLine").val().indexOf("MPC") == 0 || $("#controlLine").val().indexOf("MPF") == 0) {
                            var Chk = CheckForMPC();
                            if (Chk == "false")
                                return false;
                        }
                    }
                    $('#divMainPage').removeClass("page-layout");
                    $('#divMainPage').addClass("hide");
                    $("#txtControlText").focus();
                }
            }
        }
    });

    $("#btnRefresh").click(function (e) {
        $('#hdnPageLoaded').val("false"); //added by Vibhav for Macro Pageload check
        $('#hdnPageUnload').val("YES"); ////for detecting refersh button
        console.log("btnRefresh click hdnPageLoaded = false");
        ClearCache();
        RefreshControls();
        //var newurl = window.location.protocol + "//" + window.location.host;
        //window.location.href = newurl;

    });

    //document.addEventListener("keydown", function (e) {
    //        if (e.which == 13) {
    //            $(".Datefield").blur();
    //        }
    //});


    $(window).bind('keydown', function (e) {
        
        //This is the F1 key code, but NOT with SHIFT/CTRL/ALT
        var keyCode = e.keyCode || e.which;
        var controlList = $.trim($("#txtControlText").val().toUpperCase())
        //UAT Defect#350994  Fix
        //Allowing user to trigger BCOP 
        var controlLineCheck = controlList.split(',');
        if (controlLineCheck[0].indexOf('BCOP') >= 0)
            controlList = controlList.replace(controlList, "BCOP");

        if (controlLineCheck[0].indexOf('BYBY') == 0) {
            controlList = controlList.replace(controlList, "BYBY");

        }
        if (controlLineCheck[0].indexOf('EXIT') == 0) {
            controlList = controlList.replace(controlList, "EXIT");

        }
        if ((controlList != "") && (controlList.indexOf("PDI") >= 0
        || controlList.indexOf("PDU") >= 0
       || controlList.indexOf("PDN") >= 0
            || controlList.indexOf("MRI") >= 0)) {
            controlList = $("#txtControlText").val().toUpperCase()
        }
        var ddlControl = $('select#txtControlTextMHI :selected').text().toUpperCase();
        var inp = String.fromCharCode(event.keyCode);
        //ESC Button Click Even on Document
        if (e.keyCode == 27 && !(event.altKey || event.ctrlKey || event.shiftKey || event.metaKey)) { // escape key maps to keycode `27`
            //var controlList = $.trim($("#txtControlText").val().toUpperCase());
            if (controlList != "") {
                var arrList = controlList.split(",");
                if (arrList != "" && $("#hdnEXC").length > 0 && arrList[0] == "EXC") {
                    return false;
                }
            }
            $('#hdnPageLoaded').val("false");
            $('#hdnPageUnload').val("YES");////for detecting ESC
            console.log("ESC Button Click hdnPageLoaded = false");
            ClearCache();
            RefreshControls();

            return false;
            //e.stopPropagation();
            //e.preventDefault();

        }

        else if (((e.keyCode == 67 || e.keyCode == 99) && e.shiftKey)
            && ($("#hdnMHIPopupFlag").val() == "true" && dialog != null && dialog.dialog != "undefined"
            || $("#txtCISHAPIText").is(":visible"))) {
            dialog.dialog("close");
            $("#hdnMHIPopupFlag").val("false");
            $(".rdlSelectMHIAPI").prop("checked", false);
            e.preventDefault();
            return false;
        }
        else if (e.keyCode == 36 && !e.shiftKey) {
            var focused = document.activeElement;
            if (focused != null && focused.id != "txtCISHAPIText" && ($("#txtCISHAPIText").length > 0) && $("#txtCISHAPIText").is(":visible")) {
                $("#txtCISHAPIText").focus();
                return false;
            }
        }

        if (e.shiftKey && keyCode == 9) {

            //alert("issue-730 Shift+tab");
            var focusedEleTag = document.activeElement.tagName;
            var focusedEletype = document.activeElement.type;
            if (focusedEleTag == "INPUT" && focusedEletype == "text") {
                var ctlid = document.activeElement.id;
                var ctl = document.getElementById(ctlid);
                // var ctlvalue = document.activeElement.value
                var startPos = ctl.selectionStart;
                // var endPos = ctl.selectionEnd;

                if (startPos > 0 || (startPos == 0 && ctlid == "txtControlText")) {
                    removeDefaultFunction();
                    e.cancelable = true;
                    e.stopPropagation();
                    e.preventDefault();
                    e.returnValue = false;
                    $("#" + ctlid).focus();
                }
            }
        }

        var focusedElement = document.activeElement.id;
        var selvalue = document.activeElement.value
        var DropdownListIds1 = ["DllSelct0", "DllSelct1", "DllSelct2", "DllSelct3", "DllSelct4", "DllSelct5", "DllSelct6"]

        if ((e.shiftKey) && (keyCode == 113 || e.key == 'F2') && !(e.altKey || e.ctrlKey || e.metaKey)) {
            //FR window call on F2 Press
            removeDefaultFunction();
            e.cancelable = true;
            e.stopPropagation();
            e.preventDefault();
            e.returnValue = false;
            var MhiCntrl = ["MHI", "MHN", "MHP"];
            var controlList = $.trim($("#txtControlText").val().toUpperCase());
            var controlLine = controlList.split(',');
            if ((MhiCntrl.indexOf(controlLine[0]) > -1) && !(/^\d{9}$/.test(controlLine[5]) || /^\d{15}$/.test(controlLine[5])
                || /^\d{9}\s{6}$/.test(controlLine[5]))) {
                if (controlLine[0] == "MHN")
                    controlLine[0] = controlLine[0].replace(controlLine[0], "MHI");
                var controlLineMHI = controlLine[0];
                for (var i = 1; i < controlLine.length; i++) {
                    controlLineMHI = controlLineMHI + "," + controlLine[i];
                }
                $("#txtControlText").val(controlLineMHI);
                $('#lblerrormsg').html("* CAN ONLY PF14 FROM \"MHI,,,,,CLAIMNO\" *");
                $('#divMainPage').hide();
                $('#top_panel').hide();
                return false;
            }
            //alert(controlList);
            if ($("#hdnfr_window").length > 0 && ($("#hdnfr_window").val() == "true"))
                loadPartialViewLoadFR(controlList);
        }
        if ((keyCode == 114 || e.key == 'F3') && !(e.altKey || e.ctrlKey || e.shiftKey || e.metaKey)) {
            //Baag window call on F3 Press
            removeDefaultFunction();
            e.cancelable = true;
            e.stopPropagation();
            e.preventDefault();
            e.returnValue = false;
            var controlList = $.trim($("#txtControlText").val().toUpperCase());
            //alert(controlList);
            if ($("#hdnfr_window").length > 0 && ($("#hdnbaag_window").val() == "true"))
                loadPartialViewLoadBaag(controlList);
        }

        if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1
            && $("#hdnPageDropdown").length > 0) {

            // space Up,Down,Left,right   
            if (e.keyCode == 32) {

                if (selvalue == "Select")
                    checkdropdownEnter = "Y";
                else
                    checkdropdownEnter = "N";
            }
            return true;
        }
        //Commented a part of UAT Defect#368861
        //below script not allows user to type anythign on dropdowns
        //else if (/[a-zA-Z0-9]/.test(inp) && DropdownListIds1.indexOf(focusedElement) > -1 && e.keyCode !=107) {
        //    // alert(inp + ("#hdnPageDropdown").length)
        //    return false;
        //}

        if (e.which == 13 && $('#hdnEnterKeyFlag').val() == "true") {
            DisplayFrAndBaagBtn("");
            $('#hdnPageLoaded').val("false"); //added by Vibhav for Macro Pageload check
            if (document.activeElement.id == "txtControlText")
            $("#txtControlText").get(0).setSelectionRange(0, 0);
            console.log("enter key hdnPageLoaded = false");
            $(".ui-menu").hide();
            if (typeof $.IsInsertKeyIn != 'undefined')
                $.IsInsertKeyIn = false;

            //added for over functionality
            if (typeof toggles != 'undefined' && toggles.OverFeature == 'true' && $("#messageDialog").is(':visible') == false) {
                if (controlLineCheck[0] == "OVER") {
                    $("#hdnMHIPopupFlag").val("false");
                    loadPartialViewOver();
                    return false;
                }
            }
            else if ($("#txtIDText").is(":focus") && $("#txtIDText").length >= 0) {
                $("#hdnMHIPopupFlag").val("false");
                OverrideIdEnter();
                return false;
            }


            if ($("#messageDialog").is(':visible') && $("#hdnMHIPopupFlag").val() == "true" && dialog != null && dialog.dialog != "undefined" && !$("#txtCISHAPIText").is(":focus")) {
                dialog.dialog("close");
                $("#hdnMHIPopupFlag").val("false");
                return false;
            }
            else if ($("#txtCISHAPIText").is(":focus")) {
                if ($("#txtCISHAPIText").val().toUpperCase().indexOf("BYBY") < 0 || $("#txtCISHAPIText").val().toUpperCase().indexOf("EXIT") < 0) {
                    NextPrevious();
                    return false;
                }
                else {
                    dialog.dialog("close");
                    $("#hdnMHIPopupFlag").val("false");
                    controlList = "BYBY";
                }

            }

            if ($("#hdnPageDropdown").length > 0) {

                var focusedElement = document.activeElement.id;
                var selvalue = document.activeElement.value;
                var DropdownListIds = ["DllSelct0", "DllSelct1", "DllSelct2", "DllSelct3", "DllSelct4", "DllSelct5", "DllSelct6"]
                if (focusedElement != "" && DropdownListIds.indexOf(focusedElement) > -1
                   && selvalue != "Select") {
                    return true;
                    e.preventDefault();
                }
                else if (focusedElement != "" && DropdownListIds.indexOf(focusedElement) > -1
                        && selvalue == "Select" && (checkdropdownEnter == "Y" || checkdropdownEnter == "")) {
                    return true;
                }
                else if (focusedElement != "" && DropdownListIds.indexOf(focusedElement) > -1
                                 && selvalue == "Select") {
                    checkdropdownEnter = "";
                }
            }
            else if ($("#hdnPageDropdownMHI").length > 0) {
                var specialModi = ['F(XXXXX)', 'AOPYY', 'AOPYY,1', 'AOPYY,2', 'AOPYY,3', 'OOPYY', 'OOPYY,1', 'OOPYY,2', 'OOPYY,3', 'OOPYYF', 'OOPYYF,1', 'OOPYYF,2', 'OOPYYF,3', 'DYY', 'DYY,1', 'DYY,2', 'DYY,3', 'CCRYY'];
                var TabIdArr = ['tab1', 'tab2', 'tab3', 'tab4', 'tab5', 'tab6', 'tab7', 'tab8'];
                if ($("#txtModifrText").length > 0 &&
                    specialModi.indexOf($("#txtModifrText").val().toUpperCase() >= 0)
                    && $("#txtModifrText").val().toUpperCase() == $("#hdnPageDropdownMHI").val().toUpperCase()
                    && $("#SeleModifier").val() == "") {
                    return true;
                }
                else if ($("#hdnPageDropdownMHI").length > 0 &&
                    TabIdArr.indexOf(document.activeElement.id) >= 0) {
                    controlList = MHITabEnterKey(document.activeElement.innerText)
                }
                else if ($("#hdnPageDropdownMHI").length > 0 &&
                   (document.activeElement.tagName == "A" && document.activeElement.text != "")) {
                    if (document.activeElement.id != "") {
                        return true;
                    }
                    else {
                        controlList = CurrentClaimLink(document.activeElement.text)
                    }
                }
            }
            else if (document.activeElement.id == "txtControlText") {
                if ($("#hdnControlLineFlag").val() == "true") {
                    $("#hdnControlLineFlag").val("false");
                    return false;
                }
            }
            else if ($("#hdnPageDropdownMSI").length > 0 &&
                   (document.activeElement.tagName == "A" && document.activeElement.text != "")) {
                return true;
            }
            if (CheckPayOk()) {
                //replaced junk apostro
                if (controlList != "" && controlList.indexOf("’") > 0)
                    controlList = controlList.replace("’", "'");

                $('#lblerrormsg').html("");
                var clntNbr = $('#clientnbr').html();
                var arrList = controlList.split(",");

                if (clntNbr == "File maintenance" && (arrList[0] == "XCI" || arrList[0] == "XRI" || arrList[0] == "XHI")) {
                    $('#lblerrormsg').html(invalidFMScrnErrMsgXCI);
                    return false;
                }
                if (clntNbr == "File maintenance" && (ValidScreensInFM.indexOf(arrList[0]) < 0 && ValidScreensInFM.indexOf(arrList[0].substring(0, 3)) < 0)) {
                    $('#lblerrormsg').html(invalidFMScrnErrMsg);
                    $('#divMainPage').hide();
                    return false;
                }
                if (clntNbr != "File maintenance" && (UpdateScreensInFM.indexOf(arrList[0]) >= 0)) {
                    if ($("#controlLine").length > 0 && arrList[0].substring(0, 2) != $("#controlLine").val().substring(0, 2)) {
                        $('#lblerrormsg').html(invalidFMScrnGenErrMsg);
                        $('#txtControlText').val('');
                        $('#divMainPage').hide();
                        return false;
                    }
                    else if ($("#controlLine").length == 0) {
                        $('#lblerrormsg').html(invalidFMScrnGenErrMsg);
                        $('#txtControlText').val('');
                        return false;
                    }
                }
                e.preventDefault();

                if ($('#S5piflag').length > 0 || $('#S6piflag').length > 0) {
                    if (arrList[0] == "S5PI") {
                        $('#lblerrormsg').html("");

                        return loadPartialViewS5PI_Update(controlList, null);
                    }
                    else if (arrList[0] == "S6PI") {
                        $('#lblerrormsg').html("");

                        return loadPartialViewS6PI_Update(controlList, null);
                    }
                }
                if (validationSummary(controlList)) {

                    if ($("#controlLine").val() != "" && $("#controlLine").val() != null && $("#controlLine").val() != 'undefined') {
                        if ($("#controlLine").val().indexOf("MPC") == 0 || $("#controlLine").val().indexOf("MPF") == 0 || $("#controlLine").val().indexOf("MPB") == 0)
                            var retval = CheckForMPC();
                        if (retval == "true") {
                            return retval;
                        }
                        else if (retval == "false") {

                            return false;
                        }

                    }
                    var histNotReq = ["EBI", "JJI", "API", "SDI", "RDI", "LTI", "AHI", "BYBY", "EXIT", "CBI"];
                    if (histNotReq.indexOf(arrList[0]) < 0) {
                        createCookie(controlList);//Auto History
                    }
                    if (controlList.length > 0) {

                        if (arrList[0] == "DMU" || arrList[0] == "DMN" || arrList[0] == "DMP")
                            loadPartialViewDMI(controlList);
                        else if (arrList[0] == "PDU")
                            loadPartialViewPDI(controlList);
                        else if (arrList[0] == "CWU" || arrList[0] == "CWA")
                            loadPartialViewCWI(controlList);
                        else if (arrList[0] == "OCU" || arrList[0] == "OCA")
                            loadPartialViewOCI(controlList);
                        else if (arrList[0] == "RGI")
                            RGMtoRGI();
                        else if (arrList[0] == "RGU" || arrList[0] == "RGA" || arrList[0] == "RGN" || arrList[0] == "RGP")
                            loadPartialViewRGI(controlList);
                        else if (arrList[0] == "PCU" || arrList[0] == "PCA")
                            loadPartialViewPCI(controlList);
                        else if (arrList[0] == "CRU" || arrList[0] == "CRA")
                            loadPartialViewCRI(controlList);
                        else if (arrList[0] == "RFU" || arrList[0] == "RFA" || arrList[0] == "RFN" || arrList[0] == "RFP") //RFI changes
                            loadPartialViewRFI(controlList);
                        else if ((arrList[0] == "XCI" || arrList[0] == "XHI" || arrList[0] == "XRI") && $('#hdnPageXCI').length > 0)
                            loadPartialViewUpdateXCI(controlList);
                        else if (arrList[0] == "PRU")
                            loadPartialViewPRI(controlList);
                        else if (arrList[0] == "MRU")
                            loadPartialViewMRU(controlList);
                        else if (arrList[0] == "CFU" || arrList[0] == "CFA" || arrList[0] == "CFC")
                            loadPartialViewCFI(controlList);
                        else if (arrList[0] == "PXU")
                            loadPartialViewPXU(controlList);
                        else if (($("#editSNU").val() == "True" && arrList[0] == "SNA") || arrList[0] == "SNU")
                            loadPartialViewSNU(controlList);
                        else if (arrList[0] == "ESI" && arrList[2] == "C") {
                            var conESITOPDI = "EDI," + arrList[1]
                            loadPartialView(conESITOPDI);
                        }
                        else if (arrList[0] == "JJI")
                            loadPartialViewJJI(controlList, "");
                        else if (arrList[0] == "API" || arrList[0] == "APF" || arrList[0] == "APB")
                            loadPartialViewAPI(controlList, "");
                        else if (arrList[0] == "LTI" || arrList[0] == "LTF" || arrList[0] == "LTS" || arrList[0] == "LTB")
                            loadPartialViewLTI(controlList, "");
                        else if (arrList[0] == "EBI")
                            loadPartialViewEBI(controlList, "");
                        else if (arrList[0] == "SDI" || arrList[0] == "SDN" || arrList[0] == "SDP" || arrList[0] == "SDF" || arrList[0] == "SDB")
                            loadPartialViewSDI(controlList, "");
                        else if (arrList[0] == "EXC")
                            loadPartialViewEXC(controlList, "");
                        else if (arrList[0] == "RDI" || arrList[0] == "RDN" || arrList[0] == "RDP" || arrList[0] == "RDF" || arrList[0] == "RDB")
                            loadPartialViewRDI(controlList, "");
                        else if (arrList[0] == "AHI")
                            loadPartialViewAHI(controlList, "");
                        else if (arrList[0] == "MCU" || arrList[0] == "MCN" || arrList[0] == "MCP")
                            loadPartialViewMCI(controlList);
                        else if (MHISuffixVal != null && (arrList[0] == "MHI" || arrList[0] == "MHN" || arrList[0] == "MHP"))
                             return MSStoMHI(controlList);
                        else if (arrList[0] == "CBI" || arrList[0] == "CBU" || arrList[0] == "CBF" || arrList[0] == "CBB")
                            loadPartialViewCBI(controlList, "", $('#hdnResScreen_ind').val());

                        else {
                            if (arrList[0] != "PDI")
                                $('#hdnPdiRedirectFlag').val(false);
                            MHISuffixVal = null;
                            loadPartialView(controlList);
                        }

                        $('#divModifier').hide();
                        $('#divModifierName').hide();

                        $('#lblerrormsg').html("");
                    }
                }
                else {
                    if (controlList != "BCOP") {

                        if ($("#controlLine").val() != "" && $("#controlLine").val() != null && $("#controlLine").val() != 'undefined') {
                            if ($("#controlLine").val().indexOf("MPB") == 0 || $("#controlLine").val().indexOf("MPC") == 0 || $("#controlLine").val().indexOf("MPF") == 0) {
                                var Chk = CheckForMPC();
                                $("#controlLine").val($("#txtControlText").val());
                                if (Chk == "false")
                                    return false;
                            }
                        }
                        $('#divMainPage').removeClass("page-layout");
                        $('#divMainPage').addClass("hide");
                        $("#txtControlText").focus();
                    }

                }
            }
        }
    });

    // CheckPayOk Validation  
    function CheckPayOk() {
        var PayMsg = $('#hdnPayOkFlag').val();
        var CntrlLine = $("#txtControlText").val().toUpperCase();
        oldCntrlLine = $("#controlLine").val();
        if (CntrlLine.indexOf("MPP") >= 0 || CntrlLine.indexOf("MPF") >= 0 || CntrlLine.indexOf("MPB") >= 0 || CntrlLine.indexOf("MPC") >= 0) {
            PayMsg = "false";
            oldCntrlLine = $("#txtControlText").val();

        }
        if (PayMsg == "true" && !($('#txtControlText').val().toUpperCase().indexOf("BYBY") == 0 || $('#txtControlText').val().toUpperCase().indexOf("EXIT") == 0)) {
            $('#hdnPayOkFlag').val("false");
            $("#txtControlText").val(oldCntrlLine);
            $("#txtControlText").get(0).setSelectionRange(0, 0);
            //alert("TO PAY CLAIM ENTER --MPP---");
            $('#lblerrormsg').html("TO PAY CLAIM ENTER --MPP---");
            //$('#divMainPage').hide();
            return false;
        }
        return true;
    }
    $('[data-toggle="tooltip"]').tooltip();

    $("#txtControlText").addClass("lightText")
    // set default value
.val("Enter any CAS Control Line")
    // onfocus action
.focus(function () {
    if ($(this).val() == "Enter any CAS Control Line") {
        $(this).removeClass("lightText").val("");
    }
    // focus lost action
}).blur(function () {
    if ($(this).val() == "") {
        $(this).val("Enter any CAS Control Line").addClass("lightText");
    }
});

    //ESC Button Click Even on Document
    //$(document).keydown(function (e) {

    //    if (e.keyCode == 27) { // escape key maps to keycode `27`
    //        var controlList = $.trim($("#txtControlText").val().toUpperCase());
    //        if (controlList != "") {
    //            var arrList = controlList.split(",");
    //            if (arrList != "" && $("#hdnEXC").length > 0 && arrList[0] == "EXC") {
    //                return false;
    //            }
    //        }

    //        RefreshControls();
    //        ClearCache();
    //    }
    //});

    function RefreshControls() {
        if (window.location.href.indexOf("#") > 0 && window.location.href.length > window.location.href.indexOf("#")) {
            window.location = window.location.href.substr(0, window.location.href.indexOf("#"))
        }
        else {
            window.location = window.location.href;
        }
    }

    function validationSummary(controlList) {
      
        if (controlList.indexOf("BCOP") == 0 && controlList.length > 4) {
            controlList = controlList.substr(0, 4) + "," + controlList.substr(4);
        }
        var planLoadarr = ["PMDI", "BCOP", "PMDN", "PMD3", "PMD4", "PMCI", "PMCN", "PMC3", "PMC4", "PMFI", "PMFN", "PMF3", "PMF4", "S5PI", "PMEI", "PME3", "PME4", "PME5", "UF6I", "PMEN", "UF7I", "S6PI", "ZIPI", "PMDU", "PMCU", "PMFU", "PMEU", "S6PU", "S5PU", "UF6U", "UF7U", "ZIPU"];
        var dataLinechk = controlList.split(",");
        var planLoadarr1 = ["PMDI", "PMDN", "PMD3", "PMD4", "PMCI", "PMCN", "PMC3", "PMC4", "PMFI", "PMFN", "PMF3", "PMF4", "S5PI", "PMEI", "PME3", "PME4", "PME5", "UF6I", "PMEN", "UF7I", "S6PI", "ZIPI", "PMDU", "PMCU", "PMFU", "PMEU", "S6PU", "S5PU", "UF6U", "UF7U", "ZIPU"];
        var planLoadUpdate = ["PMDU", "PMCU", "PMFU", "PMEU", "UF6U", "UF7U", "ZIPU", "S5PU", "S6PU"];

        $('#divMainPage').show();
        if (($('#hdnBCOP').val() == "true" && planLoadarr.indexOf(dataLinechk[0]) < 0)) {
            $('#lblerrormsg').html("UNDETERMINED ERROR");
            $('#top_panel').hide();
            $('#txtControlText').focus();
            return false;
        }
        if (($('#hdnBCOP').val() == "true" && planLoadUpdate.indexOf(dataLinechk[0]) >= 0)) {
            $('#lblerrormsg').html("FOR UPDATES-ACCESS USE FILE MAINTENANCE THRU GREEN SCREEN");
            $('#top_panel').hide();
            $('#txtControlText').focus();
            return false;
        }
        if (($('#hdnBCOP').val() != "true" && planLoadarr1.indexOf(dataLinechk[0]) >= 0)) {
            $('#lblerrormsg').html("INVALID CONTROL LINE");
            $('#top_panel').hide();
            $('#txtControlText').focus();
            return false;
        }

        if (controlList.toUpperCase() == "BYBY" || controlList.toUpperCase() == "EXIT") {
            return true;
        }
        if (typeof toggles != 'undefined' && toggles.UMIDFeature == 'false' && validUMIDscreens.indexOf(controlList.split(",")[0]) >= 0 &&
            (controlList.split(",")[1]).indexOf("H") == 0) {
            $('#lblerrormsg').html("UMID FEATURE NOT ALLOWED");
            return false;
        }


        if (planLoadarr.indexOf(dataLinechk[0]) > -1) {
            var dataLinePlanLoad = controlList.split(",");
            var decision = "";
            if (controlList.indexOf(',') == -1) {
                controlList = controlList + ",";
            }
        }
        if (dataLinechk[0].length >= 3 && (dataLinechk[0].indexOf('RGM') >= 0) && $("#hdnRgm").length > 0) {
            return loadPartialViewRGMUpdate(controlList);
            true;
        }
        else if (dataLinechk[0].indexOf('RGM') >= 0 && $("#hdnRgm").length <= 0) {
            $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL");
            return false;
        }
        var dataLine = controlList.split(",");
        if (dataLine[0].length >= 4 && (dataLine[0].indexOf('XCBS') >= 0 || dataLine[0].indexOf('XCBR') >= 0 || dataLine[0].indexOf('XRBS') >= 0 || dataLine[0].indexOf('XRBR') >= 0)) {
            return loadPartialViewUpdateXCI(controlList, "");
            return true;
        }

        if (controlList.indexOf('MPCR') >= 0 || controlList.indexOf('MPCS') >= 0 || controlList.indexOf(',') != -1 || controlList.indexOf('RGI') == 0) {
            var controlValuehdn = $.trim($("#controlLine").val())
            var cntrlCheck = controlValuehdn.split(",");
            var dataLine = controlList.split(",");
            var MPCCntrl = ["MPC", "MPB", "MPF", "MPP", "MPCR"];
            if (dataLine[0].indexOf('MPCS') >= 0) {
                $('#hdnMPCSCheck').val("true");
                $('#MPCSFlag').val("true");
            }


            if (MPCCntrl.indexOf(cntrlCheck[0]) < 0 && dataLine[0].indexOf('MPCS') >= 0) {
                $('#lblerrormsg').html("SCREEN NOT SAVED");
                $('#top_panel').hide();
                return false;
            }

            if (dataLine[0].length >= 4 && (dataLine[0].indexOf('MPCR') >= 0 || dataLine[0].indexOf('MPCS') >= 0)) {
                $('#hdnMPCRedirectFlag').val(false);
                if (cntrlCheck[0].substr(0, 2) == "AH") {
                    $('#hdnAHIFlag').val(true);
                }                
                if (dataLine[0].indexOf('MPCR') >= 0) {
                    var mpcCheck = CheckMpcOrNot();
                    if (mpcCheck == "NO") {
                        $('#lblerrormsg').html("SCREEN NOT SAVED");
                        $('#top_panel').hide();
                        return false;
                    }
                }
                return loadPartialViewMPC(controlList, "");
                return true;
            }

            var arrMss = ["MRI", "MRU", "MRN",
                          "MAI", "MAN", "MAP",
                          "MDI", "MDN", "MDP",
                          "MSI", "MSN",
                          "MGI", "MGN", "MGP",
                          "MTI", "MTN", "MTP",
                          "CMI", "CMP", "CMN",
                          "CWI", "CWN", "CWP", "CWU", "CWA",
                          "CRI", "CRN", "CRP", "CRA", "CRU",
                          "PRI", "PRN", "PRP", "PRU",
                          "PCI", "PCN", "PCU", "PCA",
                          "OCI", "OCU",
                          "RSI", "RSN", "RSP",
                          "RFI", "RFN", "RFU", "RFP", "RFA",
                          "MHN", "MHP"];
            if (arrMss.indexOf(dataLine[0]) >= 0) {
                previousRss = CheckPrevControlLine(dataLine[0]);

                if (previousRss == "NO") {
                    $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL");
                    $('#divMainPage').hide()
                    return false;
                }
            }

            switch (dataLine[0]) {

                case "EDI":
                    if (validateControl(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "ELI":
                case "ELN":
                case "ELP":
                    var dataLine = controlList.split(",");
                    if (!validateELItoELNELP(dataLine)) {
                        if ((dataLine[0] == "ELN" || dataLine[0] == "ELP") && $("#controlLine").length > 0) {
                            $('#lblerrormsg').html("MUST DO (I)NITIAL TXN BEFORE (N)EXT OR (P)REVIOUS.");
                        }
                        else {
                            $('#lblerrormsg').html("Invalid Control Type");
                        }
                        return false;
                    }
                    if (validateControl(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "ESI":
                case "ESN":
                case "ESP":
                    if (validateESI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "ETI":
                    if (validateControl(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "EOI":
                    if (validateControlEOI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "CSI":
                case "CSN":
                    var dataLineCSI = controlList.split(",");
                    if (!validateCSItoCSN(dataLineCSI)) {
                        $('#lblerrormsg').html("Invalid Control Line");
                        return false;
                    }
                    if (validateControlLineCSI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "CFI":
                case "CFN":
                case "CFA":
                case "CFC":
                case "CFU":

                    if (validateControlLineCFI(controlList)) {
                        var dataLine = controlList.split(",");
                        if (dataLine[0] == "CFI") {
                            CFINo = dataLine[0];
                            return true;
                        }
                        var cfiRedirected = $("#hdnCfiRedirectFlag").val();
                        if ((cfiRedirected == "false" && (dataLine[0] === "CFU" || dataLine[0] === "CFC" || dataLine[0] === "CFA" || dataLine[0] === "CFN") && (CFINo != "CFU" && CFINo != "CFI" && CFINo != "CFN" && CFINo != "CFC" && CFINo != "CFA"))) {
                            $('#lblerrormsg').html("INVALID CONTROL LINE");
                            return false;
                        }

                        CFINo = dataLine[0];
                        return true;
                    }
                    return false;
                    break;
                case "MRI":
                case "MRU":
                case "MRN":
                    var dataLine = controlList.split(",");
                     if ((controlList.indexOf("MRU,") >= 0 && (controlList.indexOf(",PTD") >= 0 || controlList.indexOf(",CSP") >= 0))) {
                        $('#lblerrormsg').html("INVALID CONTROL LINE");
                        return false;
                    }

                    if (($('#clientnbr').html() == "File maintenance") && dataLine[0] == "MRU") {
                        $('#lblerrormsg').html("Updates not accepted for this control line in File Maintenance");
                        return false;
                    }
                    if (!validateMRItoMRUMRN(dataLine)) {
                        if (dataLine[0] == "MRU" || dataLine[0] == "MRN") {
                            $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL.");
                        }
                        return false;
                    }

                    if (validateControlLineMRI(controlList))
                        return true;
                    else
                        return false;
                    break;

                case "PDI":
                case "PDU":
                case "PDN":
                case "PDP":
                    if (validatePDI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "MHI":
                case "MHN":
                case "MHP":
                    if (validateControlMHI(controlList)) {
                        $('#divMainPage').show();
                        $('#top_panel').show();
                        return true;
                    }
                    else {                        
                        $('#divMainPage').hide();
                        $('#top_panel').hide();

                        return false;

                    }


                    break;

                case "DMI":
                case "DMU":
                case "DMN":
                case "DMP":
                    if (validateControl(controlList))
                        return true;
                    else
                        $('#divMainPage').addClass("hide");
                    return false;
                    break;
                case "DGI":
                case "DGN":
                    if (validateControl(controlList)) {
                        var dataLineDGI = controlList.split(",");
                        if (dataLineDGI[0] == "DGI") {
                            DGINo = dataLineDGI[0];
                        }
                        if (DGINo == "DGI") {
                            return true;
                        }
                        else
                            $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL.");
                        return false;
                    }
                    else
                        return false;
                    break;

                case "CRI":
                case "CRN":
                case "CRP":
                case "CRD":
                case "CRA":
                case "CRU":

                    if (validateControlCRI(controlList)) {
                        var indicatorvalue = $('#hdnPageIndicator').val();
                        var MDIToCRI = $('#hdnCriRedirectFlag').val();
                        var dataLineCRI = controlList.split(",");
                        if (dataLineCRI[0] == "CRI" || dataLineCRI[0] == "CRD") {
                            CRINo = dataLineCRI[0];
                        }
                        if (CRINo == "CRI" || CRINo == "CRD") {
                            var MPCCRI = $('#hdnPageIndicator').length;//check for MPC CRI CWI redirection
                            if (MPCCRI > 0 && CRINo == "CRD") {
                                if (indicatorvalue == "CRIMPC") {
                                    return loadPartialViewMPC(controlList, "");
                                }
                            }
                            if (CRINo == "CRD") {
                                $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL.");
                                $('#divMainPage').addClass("hide");
                                return false;
                            }
                            //if (indicatorvalue == "") {
                            //    $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL.");
                            //    return false;
                            //}
                            return true;
                        }
                        else if (MDIToCRI == "true") {
                            return true;
                        }
                        else
                            $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL.");
                        $('#divMainPage').addClass("hide");
                        return false;
                    }
                    else
                        return false;
                    break;

                case "CWI":
                case "CWN":
                case "CWP":
                case "CWU":
                case "CWA":
                    if (validateControlCWI(controlList)) {
                        var MDIToCWI = $('#hdnCwiRedirectFlag').val();
                        var dataLineCWI = controlList.split(",");
                        if (dataLineCWI[0] == "CWI" || dataLineCWI[0] == "CWA") {
                            CWINo = dataLineCWI[0];
                        }
                        if (CWINo == "CWI" || $('#hdnPageIndicator').length > 0 || CWINo == "CWA") {
                            var MPCCWI = $('#hdnPageIndicator').length;//check for MPC CRI CWI redirection
                            if (MPCCWI > 0 && dataLineCWI[0] != "CWI") {
                                var indicatorvalue = $('#hdnPageIndicator').val();
                                if (indicatorvalue == "CWIMPC") {
                                    return loadPartialViewMPC(controlList, "");
                                }
                                //below 3 lines comented because of wrong merge
                                ////disable direct CWI 
                                //   else { 
                                //       $('#lblerrormsg').html("INVALID CONTROL LINE."); 
                                //       return false;
                                //   }
                            }
                            return true;
                        }
                        else if (MDIToCWI == "true") {
                            return true;
                        }
                        else
                            $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL.");
                        return false;
                    }
                    else
                        return false;
                    break;

                case "ASI":
                case "ASN":
                    var dataLineASI = controlList.split(",");
                    if (!validateASItoASN(dataLineASI)) {
                        $('#lblerrormsg').html("Invalid Control Line");
                        return false;
                    }
                    if (validateControlASI(controlList))
                        return true;
                    else
                        return false;

                    break;
                case "CNI":
                case "CNN":
                case "CNP":
                    var dataLineCNI = controlList.split(",");
                    if (!validateCNItoCNN(dataLineCNI)) {
                        $('#lblerrormsg').html("Invalid Control Line");
                        return false;
                    }
                    if (validateControlCNI(controlList))
                        return true;
                    else
                        return false;

                    break;
                case "PXI":
                case "PXN":
                case "PXU":
                    var dataLine = controlList.split(",");
                    var newcontrolList = "";
                    if (!validatePXItoPXN(dataLine)) {
                        $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL");
                        return false;
                    }
                    if (validateControlPXI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "SNI":
                case "SNN":
                case "SNP":
                case "SNU":
                case "SNA":
                    var dataLine = controlList.split(",");
                    var newcontrolList = "";
                    if (!validateSNItoSNN(dataLine)) {
                        $('#lblerrormsg').html("INVALID CONTROL TYPE");
                        return false;
                    }
                    if (validateSNIControl(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "ISI":
                case "ISN":
                case "ISP":
                    var dataLine = controlList.split(",");
                    var newcontrolList = "";
                    if (!validateISItoISN(dataLine)) {
                        $('#lblerrormsg').html("INVALID CONTROL TYPE");
                        return false;
                    }
                    if (validateControlISI(controlList)) {
                        var MPCISI = $('#hdnPageIndicator').length;//check for MPC ISI redirection
                        if (MPCISI > 0) {
                            return loadPartialViewMPC(controlList, "");
                        }
                        return true;

                    }
                    else
                        return false;
                    break;
                case "IPI":
                case "IPN":
                case "IPP":
                    var dataLine = controlList.split(",");
                    var newcontrolList = "";
                    if (!validateIPItoIPN(dataLine)) {
                        $('#lblerrormsg').html("INVALID CONTROL TYPE");
                        return false;
                    }
                    if (validateControlIPI(controlList)) {
                        var MPCIPI = $('#hdnPageIndicator').length;//check for MPC IPI redirection
                        if (MPCIPI > 0) {
                            return loadPartialViewMPC(controlList, "");
                        }
                        return true;

                    }

                    else
                        return false;
                    break;
                case "PSI":
                    if (validateControlPSI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "PAI":
                case "PAN":
                    var dataLine = controlList.split(",");
                    var newcontrolList = "";
                    if (!validatePAItoPAN(dataLine)) {
                        $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL");
                        return false;

                    }
                    if (validateControlPAI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "PCI":
                case "PCN":
                case "PCU":
                case "PCA":

                    if (ValidateControlLinePCI(controlList)) {
                        var MDIToPCI = $('#hdnPciRedirectFlag').val();
                        var dataLinePCI = controlList.split(",");
                        if (dataLinePCI[0] == "PCI") {
                            PCINo = dataLinePCI[0];
                        }
                        if (PCINo == "PCI") {
                            return true;
                        }
                        else if (MDIToPCI == "true") {
                            return true;
                        }
                        else
                            $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL.");
                        return false;
                    }
                    else
                        return false;
                    break;
                case "MDI":
                case "MDN":
                case "MDP":
                    var dataLine = controlList.split(",");
                    var newcontrolList = "";
                    if (!validateMDItoMDN(dataLine)) {
                        $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL");
                        return false;
                    }
                    if (ValidateControlLineMDI(controlList))
                        return true;
                    else
                        return false;
                    break;

                case "XCI":
                case "XCN":
                case "XCP":
                case "XHI":
                case "XHN":
                case "XHP":
                case "XRI":
                case "XRN":
                case "XRP":
                case "XCBS":
                case "XCBR":
                    if (ValidateControlLineXCI(controlList)) {
                        var dataLineXCI = controlList.split(",");
                        if (dataLineXCI[0] == "XCI" || dataLineXCI[0] == "XRI" || dataLineXCI[0] == "XHI") {
                            XCINo = dataLineXCI[0];
                        }
                        if (XCINo == "XCI" || XCINo == "XRI" || XCINo == "XHI") {
                            return true;
                        }
                        else
                            $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL.");
                        return false;
                    }
                    else
                        return false;
                    break;
                case "SDI":
                case "SDN":
                case "SDP":
                case "SDF":
                case "SDB":
                    if ($('#hdnSDI').length > 0) {
                        return true;
                    }
                    else {
                        $('#lblerrormsg').html("INVALID CONTROL TYPE");
                        $('#divMainPage').addClass("hide");
                        return false;
                    }
                    break;
                case "RFI":
                case "RFN":
                case "RFP":
                case "RFA":
                case "RFU":

                    if (ValidateControlLineRFI(controlList)) {
                        var dataLineRFI = controlList.split(",");                       

                        if (dataLineRFI[0] == "RFI" || dataLineRFI[0] == "RFN" || dataLineRFI[0] == "RFU") {
                            RFINo = dataLineRFI[0];
                        }
                        if ((RFINo == "RFI")
                                || (RSIToRFINo == "RSI" && dataLineRFI[0] == "RFN")
                                || (RSIToRFINo == "RSI" && dataLineRFI[0] == "RFP")
                                || (RSIToRFINo == "RSI" && dataLineRFI[0] == "RFU")) {
                            return true;
                        }
                        else if (RFINo == "RFI" || RFINo == "RFN" || RFINo == "RFU") return true;

                        else {
                            $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL.");
                            var mpccontrollinearr = $("#controlLine").val().split(",");
                             if (mpccontrollinearr[0] == "MPC")
                                $('#divMainPage').hide();
                            return false;
                        }
                    }
                    else
                        return false;
                    break;
                case "RGI":
                case "RGU":
                case "RGA":
                case "RGN":
                case "RGP":
                    if ($('#hdnRGI').length > 0 && $('#hdnRGI').val() == "3") {
                        RGINo = "";
                    }
                    if (ValidateControlRGIRGM(controlList)) {
                        var dataLineRGI = controlList.split(",");
                        if (dataLineRGI[0] == "RGI") {
                            RGINo = dataLineRGI[0];
                        }
                        if (RGINo == "RGI") {
                            return true;
                        }
                        else
                            $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL.");
                        return false;
                    }
                    else
                        return false;
                    break;
                case "RSI":
                case "RSN":
                case "RSP":
                    if (ValidateControlLineRSI(controlList)) {
                        var dataLineRSI = controlList.split(",");
                        if (dataLineRSI[0] == "RSI") {
                            RSINo = dataLineRSI[0];
                            RSIToRFINo = dataLineRSI[0];
                        }
                        if (RSINo == "RSI") {
                            return true;
                        }
                        else
                            $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL.");
                        return false;
                    }
                    else
                        return false;
                    break;
                case "API":
                case "APF":
                case "APB":
                    if ($('#hdnAPI').length > 0) {
                        return true;
                    }
                    else {
                        $('#lblerrormsg').html("INVALID CONTROL TYPE");
                        $('#divMainPage').addClass("hide");
                        return false;
                    }
                    break;
                case "API,1":
                    return true;
                    break;
                case "LTI":
                case "LTF":
                case "LTS":
                case "LTB":
                    if ($('#hdnLTI').length > 0) {
                        return true;
                    }
                    else {
                        $('#lblerrormsg').html("INVALID CONTROL TYPE");
                        $('#divMainPage').addClass("hide");
                        return false;
                    }
                    break;               
                
                //Commented as OCI is out od scope

                //case "OCI":
                //case "OCU":
                //    return true;
                //    break;
                case "CLI":
                    return true;
                    break;
                case "CTI":
                    return true;
                    break;
                case "RMI":
                    return true;
                    break;
                case "XRI":
                    return true;
                    break;
                case "XHI":
                    return true;
                    break;
               
                
                case "EBI":
                    if ($('#hdnEBI').length > 0) {
                        return true;
                    }
                    else {
                        $('#lblerrormsg').html("INVALID CONTROL TYPE");
                        $('#divMainPage').addClass("hide");
                        return false;
                    }
                    break;
                case "CNN":
                    return true;
                    break;

                case "PRI":
                case "PRN":
                case "PRP":
                    //case "PRA":
                case "PRU":
                    if (ValidateControlLinePRI(controlList)) {
                        var dataLinePRI = controlList.split(",");
                        if (dataLinePRI[0] == "PRI") {
                            PRINo = dataLinePRI[0];
                        }
                        if (PRINo == "PRI") {
                            return true;
                        }
                        else
                            $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL.");
                        return false;
                    }
                    else
                        return false;
                    break;
                case "MAI":
                case "MAN":
                case "MAP":
                    var dataLine = controlList.split(",");
                    var newcontrolList = "";
                    if (!validateMAItoMAN(dataLine)) {
                        $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL");
                        return false;
                    }
                    if (ValidateControlLineMAI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "MGI":
                case "MGN":
                case "MGP":
                    var dataLine = controlList.split(",");
                    var newcontrolList = "";
                    if (!validateMGItoMGN(dataLine)) {
                        $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL");
                        return false;
                    }
                    if (ValidateControlLineMGI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "MSI":
                case "MSN":
                    var dataLine = controlList.split(",");
                    var newcontrolList = "";
                    if (!validateMSItoMSN(dataLine)) {
                        $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL");
                        return false;
                    }
                    if (ValidateControlLineMSI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "MTI":
                case "MTN":
                case "MTP":
                    var dataLine = controlList.split(",");
                    var newcontrolList = "";
                    if (!validateMTItoMTN(dataLine)) {
                        $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL");
                        return false;
                    }
                    if (ValidateControlLineMTI(controlList))
                        return true;
                    else
                        return false;
                    break;
                
                case "CPI":
                case "CPN":
                    if (!validateCPItoCPN(dataLine)) {
                        $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL");
                        return false;
                    }
                    if (validateControlCPI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "MPI":
                case "MXI":
                case "MPC":
                case "MPF":
                case "MPP":
                case "MPB":
                case "MYI":
                case "MZI":
                case "MQI":
                case "MJI":
                case "MEI":
                case "MKI":
                case "MPCR":
                case "MPCS":
                    if (ValidateControlLineMPC(controlList)) {
                        var cntlarrDirect = ["MPC", "MPF", "MPP", "MPB", "MYI", "MZI", "MEI", "MKI", "MQI", "MJI", "MPCR", "MPCS"];
                        var histCont = ["MPI", "MXI", "MYI", "MZI", "MQI", "MJI", "MEI", "MKI"]
                        if (cntlarrDirect.indexOf(dataLine[0]) >= 0 && !(/^H(\d{8})$/.test(dataLine[1]))) {
                            if (histCont.indexOf(dataLine[0]) >= 0) {
                                createCookie(controlList);//Auto History
                            }
                            if (dataLine[0].indexOf('MPCS') >= 0) {
                                $('#hdnMPCSCheck').val("true");
                                $('#MPCSFlag').val("true");
                            }
                            if (dataLine[0].indexOf('MPCR') >= 0) {
                                var mpcCheck = CheckMpcOrNot();
                                if (mpcCheck == "NO") {
                                    $('#lblerrormsg').html("SCREEN NOT SAVED");
                                    $('#top_panel').hide();
                                    return false;
                                }
                            }
                            return loadPartialViewMPC(controlList, "");
                        }
                        return true;
                    }
                    else
                    {
                        var hiddencontrollinearr = "";
                        if ($("#controlLine").length > 0 && $("#controlLine").val().indexOf(",") > 0)
                            hiddencontrollinearr = $("#controlLine").val().split(",");
                        else
                            hiddencontrollinearr = $("#txtControlText").val().split(",");

                        if (hiddencontrollinearr[0] == "MPC")
                        {
                            $('#divMainPage').hide();
                        }
                        return false;
                    }
                     
                    break;
                case "GNI":
                case "GNN":
                case "GNP":
                    var dataLine = controlList.split(",");
                    var newcontrolList = "";
                    if (!validateGNItoGNN(dataLine)) {
                        $('#lblerrormsg').html("INVALID CONTROL TYPE");
                        return false;
                    }
                    if (validateControlGNI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "PMCI":
                case "PMCN":
                case "PMC3":
                case "PMC4":
                    if (ValidateControlPMCI(controlList))
                        return true;
                    else
                        return false;
                case "PMEI":
                    if (ValidateControlPMEI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "S5PI":
                    if (ValidateControlS5PI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "ZIPI":
                    //case "ZIPU":
                    if (validateControlZIPI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "RDI":
                case "RDN":
                case "RDP":
                case "RDF":
                case "RDB":
                    if ($('#hdnRDI').length > 0) {
                        return true;
                    }
                    else {
                        $('#lblerrormsg').html("Invalid Control type");
                        $('#divMainPage').addClass("hide");
                        return false;
                    }

                case "JJI":
                    if ($('#hdnJJI').length > 0) {
                        return true;
                    }
                    else {
                        $('#lblerrormsg').html("INVALID CONTROL TYPE");
                        return false;
                    }
                    break;
                case "BCOP":
                    if ($('#hdnBCOP').length > 0 && $('#hdnBCOP').val() == "true") {
                        $('#lblerrormsg').html("UNDETERMINED ERROR");
                        return false;
                    }
                    return true;

                case "S6PI":
                    if (ValidateControlS6PI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "UF6I":
                    if (ValidateControlUF6I(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "PMDI":
                case "PMDN":
                case "PMD3":
                case "PMD4":
                    if (ValidateControlPMDI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "PMFI":
                case "PMFN":
                case "PMF3":
                case "PMF4":
                    if (ValidateControlPMFI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "AHI":
                    if ($('#hdnAHI').length > 0) {
                        return true;
                    }
                    else {
                        $('#lblerrormsg').html("INVALID CONTROL TYPE");
                        return false;
                    }
                    break;
                case "EXC":
                    if (ValidateControlEXC(controlList))
                        return true;
                    else
                        return false;
                    break;

                case "MCI":
                case "MCU":
                case "MCN":
                case "MCP":
                    if (validateMCI(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "PMEN":
                case "PME3":
                case "PME4":
                case "PME5":
                    if ($('#pmeiflag').length > 0)
                        return true;
                    else
                        $('#lblerrormsg').html("Invalid Control Line");
                    return false;

                case "PMEU":
                case "UF6U":
                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;

                    break;
                case "UF7I":
                    if (ValidateControlUF7I(controlList))
                        return true;
                    else
                        return false;
                    break;
                case "ESU":
                case "DGP":
                    $('#lblerrormsg').html("Invalid Control Type");
                    return false;
                    break;

                case "OSI":

                    if (ValidateControlLineOSI(controlList))
                        return true;
                    break;
                case "CMI":
                case "CMP":
                case "CMN":
                    if (!validateCMItoCMN(dataLine)) {
                        $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL");
                        return false;
                    }
                    if (ValidateControlLineCMI(controlList))
                        return true;
                    break;
                case "CBI":
                case "CBU":
                case "CBB":
                case "CBF":
                    {
                        if ($('#hdnCBI').length > 0) {
                            return true;
                        }
                        else {
                            $('#lblerrormsg').html("INVALID CONTROL TYPE");
                            $('#divMainPage').addClass("hide");
                            return false;
                        }
                    }                
                default:
                    if ($("#controlLine").val() != "" && $("#controlLine").val() != null && $("#controlLine").val() != 'undefined' && $("#hdnResMsgs").val()!="SAVE COMPLETE") {
                        if ($("#controlLine").val().indexOf("MPC") == 0 || $("#controlLine").val().indexOf("MPF") == 0 || $("#controlLine").val().indexOf("MPB") == 0) {
                            var retres = CheckForMPC();
                            if (retres == "false") {
                                return false;
                            }
                        }
                    }
                    ClearCachePDI();
                    if ($('#hdnAHIFlag').val() == "true" && $("#hdnResMsgs").val() != "SAVE COMPLETE")
                        $('#lblerrormsg').html("Valid control type is AHI");
                    else {
                        $('#lblerrormsg').html("Invalid Control Line");
                        $('#hdnAHIFlag').val(false);//// added for SIT defect# 402029
                    }
                    return loadPartialViewDefault(controlList, $('#lblerrormsg').html())

                    return false;
            }
        }

        else if (controlList.indexOf(',') == -1) {
            var dataLine = controlList.split(",");

            var decision = "";
            if (dataLine[0].indexOf("BCOP") == 0) {
                decision = "BCOP";
            }
            else {
                decision = dataLine[0];
            }
            switch (decision) {
                case "PMEN":
                case "PME3":
                case "PME4":
                case "PME5":
                    if ($('#pmeiflag').length > 0)
                        return true;
                    else
                        $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                case "PMCI":
                case "PMEI":
                    return true;
                case "PMEU":
                case "UF6U":
                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                    //case "PMDI":
                    //case "PMEI":
                    //case "PMDI":
                case "PMFI":
                case "PMDI":
                    $('#lblerrormsg').html("PLease enter record key");
                    return false;
                    break;

                default:
                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
            }
        }

        else {
            $('#lblerrormsg').html("Invalid Control Line");
            return false;
        }


    }

    function validateControl(controlValue) {

        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                    if (dataLine[0] == "ELI" || dataLine[0] == "ELN" || dataLine[0] == "ELP" || dataLine[0] == "ETI" || dataLine[0] == "ETN" || dataLine[0] == "ETP" || dataLine[0] == "EDI" || dataLine[0] == "EOI" || dataLine[0] == "CSI" || dataLine[0] == "CFI" || dataLine[0] == "MRI" || dataLine[0] == "PDI" || dataLine[0] == "MHI") {
                        if (dataLine.length > 1) {
                            if ((/^\d{9}$/.test(dataLine[1]) || /^\d{15}$/.test(dataLine[1]) || /^\d{9}\s{6}$/.test(dataLine[1]))) {
                                if (dataLine.length > 2) {
                                    if (/^(\d{9})$/.test(dataLine[2]) == true || dataLine[2] == "") {

                                        if (!validateETItoETN(dataLine)) {
                                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by an ETI.");
                                            return false;
                                        }

                                        return true;
                                    }
                                    else {
                                        if (dataLine[0] == "DMI" || dataLine[0] == "MRI" || dataLine[0] == "ELI" || dataLine[0] == "ELN" || dataLine[0] == "ELP") {
                                            return true;
                                        }
                                        else {
                                            $('#lblerrormsg').html(dataLine[0] + " ,Claim Number should be followed by 9 digit Member ID");
                                            return false;
                                        }
                                    }
                                }
                                else {
                                    if (!validateELItoELN(dataLine)) {
                                        $('#lblerrormsg').html(dataLine[0] + "  should be followed by an ELI.");
                                        return false;
                                    }

                                    if (!validateETItoETN(dataLine)) {
                                        $('#lblerrormsg').html(dataLine[0] + "  should be followed by an ETI.");
                                        return false;
                                    }

                                    return true;
                                }
                            }
                                //MRI Changes
                            else {
                                if (dataLine[0] == "MRI") {
                                    $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit Member ID number");
                                    return false;

                                }
                                else {
                                    $('#lblerrormsg').html(dataLine[0] + "  should be followed by a valid Claim Number");
                                    return false;
                                }
                            }
                        }
                        else {
                            if (dataLine[0] == "MRI") {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit Member ID number");
                                return false;

                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a valid Claim Number");
                                return false;
                            }
                        }
                    }

                    else if (dataLine[0] == "DMI" || dataLine[0] == "DMU" || dataLine[0] == "DMN" || dataLine[0] == "DMP") {
                        if (dataLine.length > 1) {//Check DMI,
                            if (dataLine[1] != null && dataLine[1].toString().trim() != "") {//Check DMI,SSN
                                if (!isNaN(dataLine[1])) {//Check DMI,SSN(Numeric)                                    
                                    if (dataLine.length > 2) { //Check DMI,SSN,
                                        if (dataLine[2] != null && dataLine[2].toString().trim() != "" && isNaN(dataLine[2])) { //Check FirstName
                                            if (dataLine.length > 3) {//Check Relation
                                                if (dataLine[3] == "AD" || dataLine[3] == "CH" || dataLine[3] == "EE"
                                                || dataLine[3] == "HN" || dataLine[3] == "SP" || dataLine[3] == "SS" || dataLine[3] == "ST") {//Check AD/CH/EE/HN/SP/SS/ST
                                                    if (!DMItoDMUtoDMN(dataLine)) {
                                                        $('#lblerrormsg').html(dataLine[0] + "  should be followed by a DMI.");
                                                        return false;
                                                    }
                                                    $('#lblerrormsg').html("");
                                                    return true;

                                                }
                                                else//Check AD/CH/EE/HN/SP/SS/ST
                                                {
                                                    $('#lblerrormsg').html("DMI,Member ID,FirstName, should be followed by AD/CH/EE/HN/SP/SS/ST");
                                                    return false;
                                                }

                                            } //Check Relation
                                            else {
                                                $('#lblerrormsg').html("DMI,Member ID,FirstName should be followed by ','");
                                                return false;
                                            }
                                        }
                                        else//Check FirstName
                                        {
                                            $('#lblerrormsg').html("DMI,Member ID, should be followed First Name");
                                            return false;
                                        }
                                    }
                                    else//Check DMI,SSN,
                                    {
                                        $('#lblerrormsg').html("DMI,Member ID should be followed by ','");
                                        return false;
                                    }
                                }
                                else//Check DMI,SSN(Numeric)
                                {
                                    $('#lblerrormsg').html("DMI, should be followed by 9 Digit Member ID");
                                    return false;
                                }
                            }
                            else//Check DMI,SSN
                            {
                                $('#lblerrormsg').html("DMI, should be followed by Member ID");
                                return false;
                            }
                        }
                        else//Check DMI,
                        {
                            $('#lblerrormsg').html("DMI should be followed by ','");
                            return false;
                        }
                    }
                    else if (dataLine[0] == "DGI" || dataLine[0] == "DGN") {
                        if (dataLine.length > 1) {
                            return true;
                        }
                        else
                            $('#lblerrormsg').html("DGI should be followed by ','");
                        return false;
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }

            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    function validateControlMHI(controlValue) {

        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                        if (dataLine[0] == "MHI" || dataLine[0] == "MHN" || dataLine[0] == "MHP") {
                        if (dataLine.length > 1) {
                            if (/^H(\d{8})$/.test(dataLine[1]) || /^\d{9}$/.test(dataLine[1])) {
                                if (dataLine.length > 2) {
                                    if (!(dataLine.length == 3 && dataLine[2] == "")) {
                                        if ((dataLine[2].length == 1 && AlphaNumericRegExp(dataLine[2], false)) || dataLine[2] == "" ) {
                                            if (dataLine.length > 3 && dataLine[3].length >= 1) {
                                                if (dataLine.length > 4 && dataLine[4].length == 2) {
                                                    if (dataLine.length > 5 && dataLine[5].length != 0 && MHIModifiersReqrClmNbr.indexOf(dataLine[5]) > -1) {
                                                        $('#lblerrormsg').html(dataLine[5] + ErrMsgModiferReqrClmNbr);
                                                        cstmMhiErr = true;
                                                        return false;
                                                    }
                                                    else if (dataLine.length > 5 && (dataLine[5].length > 9)) {
                                                        if (!(/^\d{9}$/.test(dataLine[5])
                                                            || /^\d{15}$/.test(dataLine[5])
                                                            || /^\d{9}\s{6}$/.test(dataLine[5]))) {
                                                            $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "," + dataLine[4] + "," + "  should be followed by a valid claim number or a valid Modifier.");
                                                            return false;
                                                        }
                                                    }
                                                    return true;
                                                }
                                                else {
                                                    $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "," + "  should be followed by 2 character Relationship.");
                                                    return false;
                                                }
                                            }

                                            else {
                                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + "  should be followed by First Name");
                                                return false;
                                            }
                                        }
                                        else {
                                            $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + "  should be followed by a 1 digit alphanumeric suffix");
                                            return false;
                                        }
                                    }
                                    return true;
                                }
                                return true;

                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by UMID or a 9 digit numeric Member ID ");
                                return false;
                            }
                        }
                        
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should not be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    function validateControlCRI(controlValue) {

        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                    if (dataLine[0] == "CRI" || dataLine[0] == "CRN" || dataLine[0] == "CRP" || dataLine[0] == "CRU" || dataLine[0] == "CRA" || dataLine[0] == "CRD") {
                        if (dataLine.length > 1) {
                            if ((/^H(\d{8})$/.test(dataLine[1]) || /^(\d{9})$/.test(dataLine[1])) == true) {
                                return true;
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by UMID or a 9 digit numeric Member ID ");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Member ID ");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    function validateControlCWI(controlValue) {

        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                    if (dataLine[0] == "CWI" || dataLine[0] == "CWN" || dataLine[0] == "CWP" || dataLine[0] == "CWU" || dataLine[0] == "CWA") {
                        if (dataLine.length > 1) {
                            if ((/^H(\d{8})$/.test(dataLine[1]) || /^(\d{9})$/.test(dataLine[1])) == true) {
                                return true;
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by UMID or a 9 digit numeric Member ID ");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Member ID ");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    function validateELItoELN(controlValue) {
        if (controlValue[0] == "ELI") {
            ELIClaimNo = controlValue;
        }

        if (controlValue[0] == "ELN") {

            if (ELIClaimNo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (ELIClaimNo[i] != controlValue[i]) {
                        return false;
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;

    }

    function validateETItoETN(controlValue) {
        if (controlValue[0] == "ETI") {
            ETIClaimNo = controlValue;
            ELINo = controlValue;
        }

        if (controlValue[0] == "ETN") {

            if (ETIClaimNo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (ETIClaimNo.length > i) {
                        if (ETIClaimNo[i] != controlValue[i]) {
                            return false;
                        }
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;
    }

    function validateESItoESN(controlValue) {
        if (controlValue[0] == "ESI") {
            ESIClaimNo = controlValue;
        }

        if (controlValue[0] == "ESN" || controlValue[0] == "ESP") {

            if (ESIClaimNo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (ESIClaimNo[i] != controlValue[i]) {
                        return false;
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;
    }

    function validateESI(controlValue) {

        if (controlValue.length > 0) {
            controlValue = controlValue.replace(" ", "");
            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line")
                    return false;
                }
                else {
                    if (dataLine[0] == "ESI" || dataLine[0] == "ESN" || dataLine[0] == "ESP") {
                        if (dataLine.length > 1) {
                            if (((dataLine[2] != "N") && (/^\d{9}$/.test(dataLine[1]) || /^\d{15}$/.test(dataLine[1]) || /^\d{9}\s{6}$/.test(dataLine[1])))
                                || ((dataLine[2] == "N") && (/^(\d{10})$/.test(dataLine[1]) == true))) {
                                if (dataLine.length > 2) {
                                    if (dataLine[2] == "H" || dataLine[2] == "D" || dataLine[2] == "P" || dataLine[2] == "S" || dataLine[2] == "C" || dataLine[2] == "N") {

                                        if (dataLine.length > 3) {
                                            if (dataLine[3] === '' || dataLine[3] === null || typeof dataLine[3] === 'undefined') {
                                                if (!validateESItoESN(dataLine)) {
                                                    $('#lblerrormsg').html(dataLine[0] + "  should be followed by an ESI.");
                                                    return false;
                                                }
                                                return true;
                                            }
                                            else if (dataLine[3].length == "4" ? (/^[0-9]{2}(0[1-9]|1[012])/).test(dataLine[3]) : isValidDate(dataLine[3])) {
                                                if (!validateESItoESN(dataLine)) {
                                                    $('#lblerrormsg').html(dataLine[0] + "  should be followed by an ESI.");
                                                    return false;
                                                }
                                                return true;
                                            }
                                            else
                                                $("#lblerrormsg").html(dataLine[0] + " Transmission Date  should be in YYMM/YYMMDD or blank");
                                            return false;
                                        }
                                        else {
                                            if (!validateESItoESN(dataLine)) {
                                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by an ESI.");
                                                return false;
                                            }

                                            return true;
                                        }
                                    }
                                    else {
                                        $('#lblerrormsg').html("NUMBER TYPE MUST BE P, D, H, S, C OR N - PLEASE RE-ENTER")
                                        return false;
                                    }
                                }
                                else {
                                    $('#lblerrormsg').html("NUMBER TYPE MUST BE P, D, H, S, C OR N - PLEASE RE-ENTER");
                                    return false;
                                }
                            }
                            else {
                                if (dataLine[2] == "N") {
                                    $('#lblerrormsg').html(dataLine[0] + "  should be followed by a valid Claim Number/Provider Tax/Member ID");
                                }
                                else
                                    $('#lblerrormsg').html(dataLine[0] + "  should be followed by a valid Claim Number/Provider Tax/Member ID");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a valid Claim Number/Provider Tax/Member ID");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    // Remember that the month is 0-based so February is actually 1...
    function isValidDate(YYMMDD) {
        if ((/^[0-9]{2}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])/).test(YYMMDD)) {
            var month = YYMMDD.toString().substr(2, 2);
            var day = YYMMDD.toString().substr(4, 2);
            var d = new Date(2000, (month - 1), day);
            if (d.getMonth() == (month - 1) && d.getDate() == day) {
                return true;
            }
            return false;
        }
        return false;
    }

    //$("#txtControlText").on("DOMAttrModified",
    //function ()
    //{
    //    if ($(this).is(":focus"))
    //    {
    //        var txtcontline = document.getElementById('txtControlText');
    //        txtcontline.setSelectionRange(0, 0);
    //    }    
    //});

    $("div#divProcess").on("DOMAttrModified",
        function () {
            if ($(this).is(":visible")) {
                $("#btnControlLine").attr('disabled', 'disabled');
                $("#txtControlText").attr('disabled', 'disabled');
            }
            else {
                $("#btnControlLine").removeAttr('disabled');
                $("#txtControlText").removeAttr('disabled');
            }
        });

    function loadPartialView(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialView',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);                

            }
        });
    }

    function loadPartialViewDMI(controlList) {

        var F6 = false;
        var cmdInd = $("#DMIDto_DMISummaryDto_CMN_IND").val();
        var cmdStart = $("#CMN_ST_DT").val();
        var cmdEnd = $("#CMN_ED_DT").val();
        var gcbInd = $("#DMIDto_DMISummaryDto_GCB_IND").val();

        var CommentSummary = $("#COMMENTS_SUMMARY").val();
        var CommentSummary1 = $("#COMMENTS_SUMMARY1").val();
        var CommentSummary2 = $("#COMMENTS_SUMMARY2").val();
        var CommentSummary3 = $("#COMMENTS_SUMMARY3").val();

        var CommentDatail = $("#COMMENTS_DATAIL").val();
        var CommentDatail1 = $("#COMMENTS_DATAIL1").val();

        var dmiSummaryDto = {
            CMN_ST_DT: cmdStart, CMN_ED_DT: cmdEnd, CMN_IND: cmdInd, GCB_IND: gcbInd, COMMENTS: CommentSummary, COMMENTS1: CommentSummary1, COMMENTS2: CommentSummary2, COMMENTS3: CommentSummary3
        };
        dmiSummaryDto = encodeJson(dmiSummaryDto);
        var dmiDetailDto = {
            COMMENTS: CommentDatail, COMMENTS1: CommentDatail1
        };
        dmiDetailDto = encodeJson(dmiDetailDto);
        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $.ajax({
            type: 'POST',
            url: '../ControlLine/loadPartialViewDMI',
            data: {
                controlLine: controlList,
                strsummaryDTO: dmiSummaryDto,
                strdetailDto: dmiDetailDto,
                F6: F6
            },
            dataType: 'html',
            cache: false,
            //contentType: 'application/html; charset=utf-8',
            success: function (data) {

                $('#divMainPage').removeClass("hide");
                $('#divProcess').hide();// ;addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('#divMainPage').removeClass("hide");
            },
            error: function (jqXHR, exception) {
                /* $('#divMainPage').removeClass("hide");
                 $('#divProcess').hide();// ;addClass("hide");
                 $('#divMainPage').addClass("page-layout");
                 $('#divPartialView').html(data);
                 $('#divMainPage').removeClass("hide");*/
            }

        });
    }

    function loadPartialViewMHI(controlList, Flag, baagData) {
        DisplayFrAndBaagBtn("");


        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewMHI',
            data: {
                controlValue: controlList,
                Flag: Flag,
                isMSSRequired: isMSSRequired,
                baag_GrpCode: baagData[0],
                baag_clasCd: baagData[1]
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });


    }
    $("#divPartialView").on("click", "a.a-modal", function (event) {
        var first = $('td:first', $(this).closest('tr')).text();
        var $row = $(this).closest('tr').html();

        //alert($row.find("td:first-child"));
        $('#tblAudit tbody').empty();
        $('#tblAudit').append('<tr style="background-color:white !important;">' + $row + '</tr>');


        $("#hider").show();
        $("#dialog").show();
        $("#tblAudit tbody td:nth-child(1)").html(first);
        event.preventDefault();
        return false;
    });

    //To Block Popup
    $("#divPartialView").on("click", "a.First", function (event) {
        if (event.currentTarget.id != "loadProvActionLink" && event.currentTarget.id != "loadPartialActionLink") {
            var first = $('td:first', $(this).closest('tr')).text();
            var $row = $(this).closest('tr').html();

            //alert($row.find("td:first-child"));
            $('#tblAudit tbody').empty();
            $('#tblAudit').append('<tr>' + $row + '</tr>');


            $("#hider").show();
            $("#dialog").show();
            $("#tblAudit tbody td:nth-child(1)").html(first);
            event.preventDefault();
            return false;
        }
        else {
            return false;
        }
    });

    $("#buttonClose").click(function () {

        $("#hider").hide();
        $('#dialog').hide();
    });

    function voidGridVisibleFields() {
        $('tr#trHDR').hide();
        $('tr#trHDx6').hide();
        $('tr#trHICD').hide();
        $('tr#trHPRC3').hide();
        $('tr#trHDate5').hide();
        $('td.tdECN').hide();
        $('table.tablegridtext .tdCISID').hide();

    }


    $("#divPartialView").on("click", ".rdlSelect", function (event) {

        var controlList = $("#txtControlText").val().toUpperCase();
        loadPartialViewMHI(controlList, false);
    });

    function Check() {
        $("#divPartialView").on("click", ".rdlSelect", function (event) {

            return true;

        });



    }
    //ESI-EDI Change Rdaio Button Select :

    $("#divPartialView").on("click", ".rdlSelectESI", function (event) {

        var rdoselVal = "0" + $("input[type='radio']:checked").val();

        rdoselVal = rdoselVal.substr(-2);
        var controlList = "ESD," + rdoselVal;

        loadPartialViewESI(controlList);
    });

    function Check() {
        $("#divPartialView").on("click", ".rdlSelectESI", function (event) {

            return true;

        });
    }

    $("#divPartialView").on("click", ".rdlSelectCNI", function (event) {

        var rdoselVal = $("input[type='radio']:checked").val();
        var provnumber = $("#hdnprovider" + rdoselVal).val();
        var sufx = $("#hdnsuf" + rdoselVal).val();
        var stat = $("#hdnstat" + rdoselVal).val();
        var lob = $("#hdnlob" + rdoselVal).val();
        var center = $("#hdncenter" + rdoselVal).val();

        var cni_net_num = $("#hdncni_net_num" + rdoselVal).val();
        var cni_seq_num = $("#hdncni_seq_num" + rdoselVal).val();

        var controlList = $("#controlLine").val().toUpperCase();
        var dataLine = controlList.split(",");
        var ctline;
        if (dataLine[1] >= 0000 && dataLine[1] <= 4999)
            ctline = "CFI," + provnumber.trim() + "," + "D" + "," + sufx.trim() + "," + lob.trim() + "," + center.trim() + ",," + cni_net_num.trim() + "," + cni_seq_num.trim() + ",";
        else
            ctline = "CFI," + provnumber.trim() + "," + "H" + "," + sufx.trim() + "," + lob.trim() + "," + center.trim() + ",," + cni_net_num.trim() + "," + cni_seq_num.trim() + ",";
        CFINo = "CFI";
        loadPartialViewCNI(ctline);
    });

    function Check() {
        $("#divPartialView").on("click", ".rdlSelectESI", function (event) {

            return true;

        });
    }

    //CSI-CFI Change Rdaio Button Select :
    $("#divPartialView").on("click", ".rdlSelectCSI", function (event) {

        //var rdoselVal = $("input[type='radio'][name='CSI']:checked").val();;
        var rdoselVal = $("input[type='radio']:checked").val();;
        var controlList = $("#txtControlText").val().toUpperCase();
        var dataLine = controlList.split(",");
        var ctline;
        if (dataLine[2] == "D")
            ctline = "CFI," + dataLine[1] + "," + "D" + "," + dataLine[3] + "," + rdoselVal;
        else
            ctline = "CFI," + dataLine[1] + "," + "H" + "," + dataLine[3] + "," + rdoselVal;
        CFINo = "CFI";
        loadPartialViewCSI(ctline);
    });

    $("#divPartialView").on("click", ".rdlSelectMSS", function (event) {
      
        var controlList = $("#controlLine").val().toUpperCase();
        if (controlList === '' || controlList === null || typeof controlList === 'undefined') {
            controlList = $("#txtControlText").val().toUpperCase();
        }
        var dataLine = controlList.split(",");
        var rdoselVal = $("input[type='radio']:checked").val();
        var controlLine;
        var valFlag = rdoselVal;
        if (rdoselVal == ',') {
            valFlag = 0;
        }

        var cntlarr = ["MPI", "MXI", "MYI", "MZI", "MQI", "MJI", "MPCR", "MEI", "MKI"];

        if (dataLine.length > 2) {
            dataLine[2] = dataLine[2].replace(dataLine[2], rdoselVal);
            controlList = dataLine;
            controlLine = controlList[0] + "," + controlList[1] + "," + controlList[2];
            if (dataLine.length > 3) {
                if (dataLine[3] == "") {
                    if (dataLine[2] == ",") {
                        controlLine = controlList[0] + "," + controlList[1] + "," + controlList[4];
                    }
                    else {
                        controlLine = controlList[0] + "," + controlList[1] + "," + controlList[2] + controlList[4];
                    }

                }
                else {
                    dataLine[2] = dataLine[2].replace(dataLine[2], rdoselVal);
                    controlList = dataLine;
                    if (dataLine[2] == ",") {
                        controlLine = controlList[0] + "," + controlList[1] + "," + controlList[2] + controlList[3] + "," + controlList[4];
                    }
                    else {
                        controlLine = controlList[0] + "," + controlList[1] + "," + controlList[2] + "," + controlList[3];

                    }
                }
            }
        }
        else {
            controlLine = controlList + "," + rdoselVal;
        }

        MssCheck(controlLine);
   
        if (dataLine[0] == "MRI" && (controlList.indexOf('PTD') >= 0 || controlList.indexOf('CSP') > 0) && dataLine.length >= 4) {
            var controlLinePTD = dataLine[0] + "," + dataLine[1] + "," + (rdoselVal == "," ? "" : rdoselVal) + "," + dataLine[3];
            if (controlList.indexOf('PTD') >= 0)
                loadPartialViewMRIPTD(controlLinePTD);
            else if (controlList.indexOf('CSP') >= 0)
                loadPartialViewMRICSP(controlLinePTD);

        }
        else if (dataLine[0] == "MRI" && (controlList.indexOf('PTD') < 0 && controlList.indexOf('CSP') < 0)) {
            MRINo = controlLine.split(",");
            loadPartialViewMRI(controlLine);
        }    
        else if (dataLine[0] == "MHI") {
            var BaagData = $("#groupID" + valFlag).val() + "," + $("#classcode" + valFlag).val();
            var baagD = BaagData.split(',');
            isMSSRequired = "False";

            var MHIDataLine = $.trim($("#controlLine").val().toUpperCase());
            var controlLine = MHIDataLine.split(',');
            var controlLineMHI = controlLine[0];
            if (rdoselVal.indexOf(",") == 0)
                rdoselVal = "";
            MHISuffixVal = rdoselVal;
            $("#hdnMHIcntLine").val(MHIDataLine);
            controlLine[2] = controlLine[2].replace(controlLine[2], rdoselVal);
            for (var i = 1; i < controlLine.length; i++) {
                controlLineMHI = controlLineMHI + "," + controlLine[i];
            }

            loadPartialViewMHI(controlLineMHI, true, baagD);
        }
        else if (dataLine[0] == "MAI") {
            var controlLineMai = "MAI";

            for (var i = 1; i < dataLine.length; i++) {
                if (i == 2 && rdoselVal == ",") {
                    controlLineMai = controlLineMai + ",";
                }
                else {
                    controlLineMai = controlLineMai + "," + dataLine[i];
                }

            }
            loadPartialViewMAI(controlLineMai, 10);
        }
        else if (dataLine[0] == "MGI") {
            var controlLineMgi = "MGI";
            for (var i = 1; i < dataLine.length; i++) {
                if (i == 2 && rdoselVal == ",") {
                    controlLineMgi = controlLineMgi + ",";
                }
                else {
                    controlLineMgi = controlLineMgi + "," + dataLine[i];
                }
            }
            loadPartialViewMGI(controlLineMgi, 10);
        }
        else if (dataLine[0] == "MSI") {
            var controlLineMsi = dataLine[0];
            for (var i = 1; i < dataLine.length; i++) {
                if (i == 2 && rdoselVal != ",") {
                    controlLineMsi = controlLineMsi + "," + rdoselVal;
                }
                if (dataLine[i] != ",")
                    controlLineMsi = controlLineMsi + "," + dataLine[i];
            }
            loadPartialViewMSI(controlLineMsi, 1);
        }
        else if (dataLine[0] == "MTI") {
            var controlListMti = "MTI";

            for (var i = 1; i < dataLine.length; i++) {
                if (i == 2 && rdoselVal == ",") {
                    controlListMti = controlListMti + ",";
                }
                else {
                    controlListMti = controlListMti + "," + dataLine[i];
                }
            }
            loadPartialViewMTI(controlListMti, 10);
        }
        else if ((cntlarr.indexOf(dataLine[0]) >= 0)) {
            var controlListMpi = dataLine[0];

            for (var i = 1; i < dataLine.length; i++) {
                if (i == 2 && rdoselVal == ",") {
                    controlListMpi = controlListMpi + ",";
                }
                else {
                    controlListMpi = controlListMpi + "," + dataLine[i];
                }
            }
            loadPartialViewMPC(controlListMpi, "", null);
        }
        else if (dataLine[0] == "CWI") {
            var CWIDataLine = $.trim($("#controlLine").val().toUpperCase());
            var controlLine = CWIDataLine.split(',');
            var controlLineCWI = controlLine[0];
            if (rdoselVal.indexOf(",") == 0)
                rdoselVal = "";
            CWISuffixVal = rdoselVal;
            controlLine[2] = controlLine[2].replace(controlLine[2], rdoselVal);
            for (var i = 1; i < controlLine.length; i++) {
                controlLineCWI = controlLineCWI + "," + controlLine[i];
            }
            loadPartialViewMSSCWI(controlLineCWI);
        }
        else if (dataLine[0] == "PRI") {
            var PRIDataLine = $.trim($("#controlLine").val().toUpperCase());
            var controlLine = PRIDataLine.split(',');
            var controlLinePRI = controlLine[0];
            if (rdoselVal.indexOf(",") == 0)
                rdoselVal = "";
            PRISuffixVal = rdoselVal;
            controlLine[2] = controlLine[2].replace(controlLine[2], rdoselVal);
            for (var i = 1; i < controlLine.length; i++) {
                controlLinePRI = controlLinePRI + "," + controlLine[i];
            }
            loadPartialViewMSSPRI(controlLinePRI);
        }
        else if (dataLine[0] == "CRI") {
            var CRIDataLine = $.trim($("#controlLine").val().toUpperCase());
            var controlLine = CRIDataLine.split(',');
            var controlLineCRI = controlLine[0];
            if (rdoselVal.indexOf(",") == 0)
                rdoselVal = "";
            CRISuffixVal = rdoselVal;
            controlLine[2] = controlLine[2].replace(controlLine[2], rdoselVal);
            for (var i = 1; i < controlLine.length; i++) {
                controlLineCRI = controlLineCRI + "," + controlLine[i];
            }
            loadPartialViewMSSCRI(controlLineCRI);
        }
        else if (dataLine[0] == "RFI") {
            var RFIDataLine = $.trim($("#controlLine").val().toUpperCase());
            var controlLine = RFIDataLine.split(',');
            var controlLineRFI = controlLine[0];
            if (rdoselVal.indexOf(",") == 0)
                rdoselVal = "";
            RFISuffixVal = rdoselVal;
            controlLine[2] = controlLine[2].replace(controlLine[2], rdoselVal);
            for (var i = 1; i < controlLine.length; i++) {
                controlLineRFI = controlLineRFI + "," + controlLine[i];
            }
            loadPartialViewMSSRFI(controlLineRFI);
        }
        else if (dataLine[0] == "PCI") {
            var PCIDataLine = $.trim($("#controlLine").val().toUpperCase());
            var controlLine = PCIDataLine.split(',');
            var controlLinePCI = controlLine[0];
            if (rdoselVal.indexOf(",") == 0)
                rdoselVal = "";
            PCISuffixVal = rdoselVal;
            controlLine[2] = controlLine[2].replace(controlLine[2], rdoselVal);
            for (var i = 1; i < controlLine.length; i++) {
                controlLinePCI = controlLinePCI + "," + controlLine[i];
            }
            loadPartialViewMSSPCI(controlLinePCI);
        }
        else if (dataLine[0] == "OCI") {
            var OCIDataLine = $.trim($("#controlLine").val().toUpperCase());
            var controlLine = OCIDataLine.split(',');
            var controlLineOCI = controlLine[0];
            if (rdoselVal.indexOf(",") == 0)
                rdoselVal = "";
            OCISuffixVal = rdoselVal;
            controlLine[2] = controlLine[2].replace(controlLine[2], rdoselVal);
            for (var i = 1; i < controlLine.length; i++) {
                controlLineOCI = controlLineOCI + "," + controlLine[i];
            }
            loadPartialViewMSSOCI(controlLineOCI);
        }
        else if (dataLine[0] == "RSI") {
            var RSIDataLine = $.trim($("#controlLine").val().toUpperCase());
            var controlLine = RSIDataLine.split(',');
            var controlLineRSI = controlLine[0];
            if (rdoselVal.indexOf(",") == 0)
                rdoselVal = "";
            RSISuffixVal = rdoselVal;
            controlLine[2] = controlLine[2].replace(controlLine[2], rdoselVal);
            for (var i = 1; i < controlLine.length; i++) {
                controlLineRSI = controlLineRSI + "," + controlLine[i];
            }
            loadPartialViewMSSRSI(controlLineRSI);
        }
        else if (dataLine[0] == "CMI") {
            var CMIDataLine = $.trim($("#txtControlText").val().toUpperCase());
            var controlLine = CMIDataLine.split(',');
            var controlLineCMI = controlLine[0];
            if (rdoselVal.indexOf(",") == 0)
                rdoselVal = "";
            CMISuffixVal = rdoselVal;
            controlLine[2] = controlLine[2].replace(controlLine[2], rdoselVal);
            for (var i = 1; i < controlLine.length; i++) {
                controlLineCMI = controlLineCMI + "," + controlLine[i];
            }
            loadPartialViewCMI(controlLineCMI, null);
        }
        //else if (dataLine[0] == "RGI") {
        //    var RGIDataLine = $.trim($("#txtControlText").val().toUpperCase());
        //    var controlLine = RGIDataLine.split(',');
        //    var controlLineRGI = controlLine[0];
        //    if (rdoselVal.indexOf(",") == 0)
        //        rdoselVal = "";
        //    RGISuffixVal = rdoselVal;
        //    controlLine[2] = controlLine[2].replace(controlLine[2], rdoselVal);
        //    for (var i = 1; i < controlLine.length; i++) {
        //        controlLineRGI = controlLineRGI + "," + controlLine[i];
        //    }
        //    loadPartialViewMSSRGI(controlLineRGI);
        //}
        //$('#hdnEnterKeyFlag').val("true");

        return PageLoadCheck();
    });

    function loadPartialViewMSSPCI(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewPCI',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }
        });
    }

    function loadPartialViewMSSCWI(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewCWI',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.CWIMain').hide();                
            }
        });
    }

    function loadPartialViewMRI(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewMRI',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }
        });
    }

    function loadPartialViewMSSPRI(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewPRI',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }
        });
    }

    function loadPartialViewMSSCRI(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewCRI',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }
        });
    }

    function loadPartialViewMSSRFI(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewRFI',
            data: {
                controlValue: controlList,
                rdoselVal: null
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }
        });
    }

    function loadPartialViewMSSRSI(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewRSI',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }
        });
    }

    function Check() {
        $("#divPartialView").on("click", ".rdlSelectCSI", function (event) {
            return true;
        });
    }

    //CRI MODEL
    function loadPartialViewCRI(controlList) {
        var dataLine = controlList.split(",");

        //if (!RequiredvalidationPDI(dataLine)) {
        var data = encodeJson(CRIdata(controlList));

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewUpdate_CRI',
            data: {
                controlLine: controlList,
                strcriDTO: data
            },
            cache: false,
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').hide();// ;addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                HandleOnLoadEvent(); // control-line onload event fires to soon in some cases and this function needs executed again
                $('#divMainPage').removeClass("hide");
                $('.CRIMain').hide();
            },
            error: function (jqXHR, exception) {
            }
        });
        //}


    }

    function loadPartialViewMCI(controlList) {

        var MCIDetail = "";
        var rows = [];
        $('#TabMCIDetails tbody tr').each(function (i, n) {
            var $row = $(n);
            rows.push({
                mcimedido: $row.find('td:eq(0) input[type=text]').val(),
                mcizipo: $row.find('td:eq(1) input[type=text]').val(),

            });
        });

        rows.shift();  // first row will be empty - so remove
        MCIDetail = encodeJson(rows);

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewMCI',
            data: {
                controlLine: controlList,
                strMCIDetailDTO: MCIDetail
            },
            cache: false,
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }
        });
    }

    function CRIdata(controlList) {
        ///Provider

        var CBSUBO = $('#CRIDto_cbsubo').val();
        var CBDEPO = $('#CRIDto_cbdepo').val();
        var CBSPO = $('#CRIDto_cbspo').val();

        var CBSBNMO = $('#CRIDto_cbsbnmo').val();
        var CBSBPIDO = $('#CRIDto_cbsbpido').val();
        var CBEMAILO = $('#CRIDto_cbemailo').val();
        var CBSBID5O = $('#CRIDto_cbsbid5o').val();
        var CBCVEFMMMO = $('#CRIDto_cbcvefmmmo').val();
        var CBEMPLRO = $('#CRIDto_cbemplro').val();
        var CBHICNO = $('#CRIDto_cbhicno').val();
        var CBCVCNMMMO = $('#CRIDto_cbcvcnmmmo').val();
        var CBOTCNMO = $('#CRIDto_cbotcnmo').val();
        var CBOTCSTO = $('#CRIDto_cbotcsto').val();
        var CBPHEXTO = $('#CRIDto_cbphexto').val();
        var CBOTCADRO = $('#CRIDto_cbotcadro').val();
        var CBOTCZIPO = $('#CRIDto_cbotczipo').val();
        var CBOTCCTYO = $('#CRIDto_cbotcctyo').val();
        var CBPHNOO = $('#CRIDto_cbphnoo').val();
        var CBDYMMMO = $('#CRIDto_cbdymmmo').val();
        var CBDUALO = $('#CRIDto_cbdualo').val();
        var CBSOURCEO = $('#CRIDto_cbsourceo').val();
        var CBLOCKO = $('#CRIDto_cblocko').val();
        var CBMEDENO = $('#CRIDto_cbmedeno').val();
        var CBNOEFMMMO = $('#CRIDto_cbnoefmmmo').val();
        var CBESTMO = $('#CRIDto_cbestmo').val();
        var CBMEDPHO = $('#CRIDto_cbmedpho').val();
        var CBSTATO = $('#CRIDto_cbstato').val();
        var CBNOCNMMMO = $('#CRIDto_cbnocnmmmo').val();
        var CBTERTO = $('#CRIDto_cbterto').val();
        var CBFT1O = $('#CRIDto_cbft1o').val();
        var CBFT2O = $('#CRIDto_cbft2o').val();
        var CBFT3O = $('#CRIDto_cbft3o').val();

        var Model =
            {
                //provider
                cbsubo: CBSUBO,
                cbdepo: CBDEPO,
                cbspo: CBSPO,

                cbsbnmo: CBSBNMO,
                cbsbpido: CBSBPIDO,
                cbemailo: CBEMAILO,
                cbsbid5o: CBSBID5O,
                cbcvefmmmo: CBCVEFMMMO,
                cbemplro: CBEMPLRO,
                cbhicno: CBHICNO,
                cbcvcnmmmo: CBCVCNMMMO,
                cbotcnmo: CBOTCNMO,
                cbotcsto: CBOTCSTO,
                cbphexto: CBPHEXTO,
                cbotcadro: CBOTCADRO,
                cbotczipo: CBOTCZIPO,
                cbotcctyo: CBOTCCTYO,
                cbphnoo: CBPHNOO,
                cbdymmmo: CBDYMMMO,
                cbdualo: CBDUALO,
                cbsourceo: CBSOURCEO,
                cblocko: CBLOCKO,
                cbmedeno: CBMEDENO,
                cbnoefmmmo: CBNOEFMMMO,
                cbestmo: CBESTMO,
                cbmedpho: CBMEDPHO,
                cbstato: CBSTATO,
                cbnocnmmmo: CBNOCNMMMO,
                cbterto: CBTERTO,
                cbft1o: CBFT1O,
                cbft2o: CBFT2O,
                cbft3o: CBFT3O,
                ControlLine: controlList
            };
        return Model;
    }
    //CRI MODEL END

    //RFI MODEL
    function loadPartialViewRFI(controlList) {
        var data1 = encodeJson(RFIdata(controlList));
        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewUpdateRFI',
            data: {
                controlLine: controlList,
                strrfiDTO: data1
            },
            cache: false,
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').hide();// ;addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                //$('#divMainPage').removeClass("hide");
            },
            error: function (jqXHR, exception) {
            }
        });
    }

    function RFIdata(controlList) {
        ///Provider
        var Auth_No = $('#RFIDto_authnoo').val();
        var BC = $('#RFIDto_buscdo').val();
        var PCP = $('#RFIDto_pcpsufo').val();
        var Refering_Physician = $('#RFIDto_reftaxo').val();
        var Suffix = $('#RFIDto_refsufo').val();
        var Refering_Provider = $('#RFIDto_spctaxo').val();
        var Refering_Provider_id = $('#RFIDto_spcsufo').val();
        var DIAG = $('#RFIDto_diagdso').val();
        var DIAG1 = $('#RFIDto_diagcdo').val();
        var RPT_LDGR = $('#RFIDto_ldgro').val();
        var ELIG = $('#RFIDto_eligo').val();
        var GRPR = $('#RFIDto_grpclo').val();
        var Refname = $('#RFIDto_refnameo').val();
        var UMID = $('#RFIDto_umido').val();
        var specialityCode = $('#RFIDto_spccodeo').val();
        var specialityDesc = $('#RFIDto_spcdesco').val();
        var GRP_CL = $('#RFIDto_grpclo').val();
        var MMEM = $('#RFIDto_mmemo').val();
        var GRPRNAME = $('#RFIDto_grprnameo').val();
        var FAC = $('#RFIDto_opfaco').val();
        var CLINICAL_SUM1 = $('#RFIDto_clnsum1o').val();
        var CLINICAL_SUM2 = $('#RFIDto_clnsum2o').val();
        var CLINICAL_SUM3 = $('#RFIDto_clnsum3o').val();
        var CLINICAL_SUM4 = $('#RFIDto_clnsum4o').val();
        var CLINICAL_SUM5 = $('#RFIDto_clnsum5o').val();
        var CLINICAL_SUM6 = $('#RFIDto_clnsum6o').val();
        var CCA_AUTH_NO = $('#RFIDto_authnbro').val();
        var Eval_Only = $('#RFIDto_evaloo').val();
        var C = $('#RFIDto_erurgo').val();
        var Ambulance = $('#RFIDto_ambulo').val();
        var ACTDT = $('#RFIDto_ACTDT').val();
        var ISSUEDT = $('#RFIDto_ISSUEDT').val();
        var Comp_DT = $('#RFIDto_apprvedo').val();
        var ENTDT = $('#RFIDto_ENTDT').val();
        var Services_Used = $('#RFIDto_susedo').val();
        var NPI = $('#RFIDto_npi_reqo').val();
        var SRV = $('#RFIDto_npi_srvo').val();
        var FAC = $('#RFIDto_npi_faco').val();
        var Diag_Testing = $('#RFIDto_diagtsto').val();
        var EVAL = $('#RFIDto_evalto').val();
        var DME = $('#RFIDto_dmeo').val();
        var Recieved_By = $('#RFIDto_recdbyo').val();
        var EXPDT = $('#RFIDto_EXPDT').val();
        var Nonpar_Pymt = $('#RFIDto_nonpymto').val();
        var dynamic_paySchedule = $('#RFIDto_nondesco').val();
        var nondoll = $('#RFIDto_nondollo').val();
        nondoll = (typeof (nondoll) == "undefined") ? nondoll : nondoll.indexOf(".") > 0 ? nondoll.substr(0, nondoll.indexOf(".")) : nondoll;
        var CAP = $('#RFIDto_capo').val();
        var Last_Updated_By = $('#RFIDto_updadjo').val();
        var Review = $('#RFIDto_reviewo').val();
        var Surgery = $('#RFIDto_opsuro').val();
        var Home_Health = $('#RFIDto_hmhltho').val();
        var LOT = $('#RFIDto_lvltrto').val();
        var Visits = $('#RFIDto_visitso').val();
        var APPTDT = $('#RFIDto_APPTDT').val();
        var Mixed = $('#RFIDto_mixedo').val();
        var UPDT = $('#RFIDto_UPDT').val();
        var Reprocess = $('#RFIDto_reproco').val();
        var Total_OB_Care = $('#RFIDto_totobo').val();
        var Therapy = $('#RFIDto_therpyo').val();
        var Mkt_Rev = $('#RFIDto_mktrevo').val();
        var Services = $('#RFIDto_servcso').val();
        var Action = $('#RFIDto_actcodeo').val();
        var approved_by = $('#RFIDto_actdesco').val();
        var Comp_ID = $('#RFIDto_apprvero').val();
        var APRVDT = $('#RFIDto_APRVDT').val();
        var Entered_By = $('#RFIDto_entadjo').val();
        var Visits_Used = $('#RFIDto_vusedo').val();
        var CLAIM01 = $('#RFIDto_claim01o').val();
        var CLAIM02 = $('#RFIDto_claim02o').val();
        var CLAIM03 = $('#RFIDto_claim03o').val();
        var CLAIM04 = $('#RFIDto_claim04o').val();
        var CLAIM05 = $('#RFIDto_claim05o').val();
        var CLAIM06 = $('#RFIDto_claim06o').val();
        var cobo = $('#RFIDto_cobo').val();

        var Model =
            {
                authnoo: Auth_No,
                buscdo: BC,
                pcpsufo: PCP,
                reftaxo: Refering_Physician,
                refsufo: Suffix,
                spctaxo: Refering_Provider,
                spcsufo: Refering_Provider_id,
                diagdso: DIAG,
                diagcdo: DIAG1,
                ldgro: RPT_LDGR,
                eligo: ELIG,
                grpro: GRPR,
                refnameo: Refname,
                umido: UMID,
                spccodeo: specialityCode,
                spcdesco: specialityDesc,
                grpclo: GRP_CL,
                mmemo: MMEM,
                grprnameo: GRPRNAME,
                opfaco: FAC,
                clnsum1o: CLINICAL_SUM1,
                clnsum2o: CLINICAL_SUM2,
                clnsum3o: CLINICAL_SUM3,
                clnsum4o: CLINICAL_SUM4,
                clnsum5o: CLINICAL_SUM5,
                clnsum6o: CLINICAL_SUM6,
                authnbro: CCA_AUTH_NO,
                evaloo: Eval_Only,
                erurgo: C,
                ambulo: Ambulance,
                ACTDT: ACTDT,
                ISSUEDT: ISSUEDT,
                APRVDT: APRVDT,
                ENTDT: ENTDT,
                susedo: Services_Used,
                npi_reqo: NPI,
                npi_srvo: SRV,
                npi_faco: FAC,
                diagtsto: Diag_Testing,
                evalto: EVAL,
                dmeo: DME,
                recdbyo: Recieved_By,
                EXPDT: EXPDT,
                nonpymto: Nonpar_Pymt,
                nondesco: dynamic_paySchedule,
                nondollo: nondoll,
                capo: CAP,
                updadjo: Last_Updated_By,
                reviewo: Review,
                opsuro: Surgery,
                hmhltho: Home_Health,
                lvltrto: LOT,
                visitso: Visits,
                APPTDT: APPTDT,
                mixedo: Mixed,
                UPDT: UPDT,
                reproco: Reprocess,
                totobo: Total_OB_Care,
                therpyo: Therapy,
                mktrevo: Mkt_Rev,
                servcso: Services,
                actcodeo: Action,
                actdesco: approved_by,
                apprvero: Comp_ID,
                entadjo: Entered_By,
                vusedo: Visits_Used,
                claim01o: CLAIM01,
                claim02o: CLAIM02,
                claim03o: CLAIM03,
                claim04o: CLAIM04,
                claim05o: CLAIM05,
                claim06o: CLAIM06,
                cobo: cobo,
                ControlLine: controlList
            };
        return Model;
    }
    //RFI MODEL END

    //XCI MODEL
    function loadPartialViewUpdateXCI(controlList) {
        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        var claimDetailGridData = encodeJson(XCIDetailGridData(controlList));
        var claimDetailData = encodeJson(XCIDetailData(controlList));
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewUpdateXCI',
            data: {
                controlValue: controlList,
                strclaimsDetailDto: claimDetailData,
                strclaimsDetailGridData: claimDetailGridData,
                F9: "2"
            },
            cache: false,
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').hide();// ;addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('#divMainPage').removeClass("hide");
                $("#txtControlText").focus();
            },
            error: function (jqXHR, exception) {
            }
        });
    }

    function XCIDetailData(controlList) {
        var controlLine = $('#txtControlText').val();
        var CommentEdits = $('#hdnCommentEdit').val();
        var CLAIM = $('#XriXciXhiDto_XciDetailDto_dtl_claim_noo').val();
        var provname = $('#XriXciXhiDto_XciDetailDto_dtl_prov_nameo').val();
        var ORRESPDT = $('#XriXciXhiDto_XciDetailDto_ORRESPDT').val();
        var STATUSCODE = $('#XriXciXhiDto_XciDetailDto_dtl_status_cdo').val();
        var PROVID = $('#hdnProvID').val();
        var ProvSuff = $('#hdnProvSuff').val();
        var RESPDT = $('#XriXciXhiDto_XciDetailDto_RESPDT').val();
        var userid = $('#XriXciXhiDto_XciDetailDto_dtl_user_ido').val();
        var LOB = $('#XriXciXhiDto_XciDetailDto_dtl_line_of_buso').val();
        var ACTIONDT = $('#XriXciXhiDto_XciDetailDto_ACTIONDT').val();
        var reqhold = $('#XriXciXhiDto_XciDetailDto_dtl_req_hld_dayo').val();
        var RR = $('#XriXciXhiDto_XciDetailDto_dtl_rec_reasono').val();
        var SUSPDT = $('#XriXciXhiDto_XciDetailDto_SUSPDT').val();
        var ADJ = $('#XriXciXhiDto_XciDetailDto_dtl_adjustero').val();
        var CC = $('#XriXciXhiDto_XciDetailDto_dtl_catg_codeo').val();
        var PROCDT = $('#XriXciXhiDto_XciDetailDto_PROCDT').val();
        var center = $('#XriXciXhiDto_XciDetailDto_dtl_cntr_noo').val();
        var dx = $('#XriXciXhiDto_XciDetailDto_dtl_diag_1o').val();
        var ARDT = $('#XriXciXhiDto_XciDetailDto_ARDT').val();
        var centername = $('#XriXciXhiDto_XciDetailDto_dtl_cntr_nameo').val();
        var dx2 = $('#XriXciXhiDto_XciDetailDto_dtl_diag_2o').val();
        var PNDT = $('#XriXciXhiDto_XciDetailDto_PNDT').val();
        var phone = $('#XriXciXhiDto_XciDetailDto_PHONE').val();
        var dx3 = $('#XriXciXhiDto_XciDetailDto_dtl_diag_3o').val();
        var days = $('#XriXciXhiDto_XciDetailDto_dtl_plus_dayso').val();
        var patientName = $('#XriXciXhiDto_XciDetailDto_dtl_pat_nameo').val();
        var dx4 = $('#XriXciXhiDto_XciDetailDto_dtl_diag_4o').val();
        var claimdecision = $('#XriXciXhiDto_XciDetailDto_dtl_clm_decsiono').val();
        var HumID = $('#XriXciXhiDto_XciDetailDto_dtl_hum_id_noo').val();
        var referalno = $('#XriXciXhiDto_XciDetailDto_dtl_referral_noo').val();
        var DOBDT = $('#XriXciXhiDto_XciDetailDto_DOBDT').val();
        var AUTH = $('#XriXciXhiDto_XciDetailDto_dtl_auth_noo').val();
        var COMMENTDT = $('#XriXciXhiDto_XciDetailDto_COMMENTDT').val();
        var CommentBy = $('#XriXciXhiDto_XciDetailDto_dtl_comnt_ownero').val();
        var CommentFor = $('#XriXciXhiDto_XciDetailDto_dtl_comnt_levelo').val();
        var page = $('#XriXciXhiDto_XciDetailDto_dtl_comnt_pgenoo').val();
        var FuncCmd = $('#XriXciXhiDto_XciDetailDto_dtl_fnct_commndo').val();
        var FuncCA = $('#XriXciXhiDto_XciDetailDto_dtl_fnct_ctradjo').val();
        var FunCLM = $('#XriXciXhiDto_XciDetailDto_dtl_fnct_clmlneo').val();
        var FuncNum = $('#XriXciXhiDto_XciDetailDto_dtl_fnct_lnenumo').val();
        var cmntLine1 = $('#XriXciXhiDto_XciDetailDto_dtl_comnt_line1o').val();
        var cmntLine2 = $('#XriXciXhiDto_XciDetailDto_dtl_comnt_line2o').val();
        var cmntLine3 = $('#XriXciXhiDto_XciDetailDto_dtl_comnt_line3o').val();
        var totLineHdr = $('#hdnTotLineHdr').val();
        var totLineCnt = $('#hdnTotLineCnt').val();


        var claimDetail = {
            dtl_cntl_lineo: controlLine,
            dtl_comnt_editso: CommentEdits,
            dtl_claim_noo: CLAIM,
            dtl_prov_nameo: provname,
            ORRESPDT: ORRESPDT,
            dtl_status_cdo: STATUSCODE,
            dtl_prov_tax_ido: PROVID,
            dtl_prov_suffixo: ProvSuff,
            RESPDT: RESPDT,
            dtl_user_ido: userid,
            dtl_line_of_buso: LOB,
            ACTIONDT: ACTIONDT,
            dtl_req_hld_dayo: reqhold,
            dtl_rec_reasono: RR,
            SUSPDT: SUSPDT,
            dtl_adjustero: ADJ,
            dtl_catg_codeo: CC,
            PROCDT: PROCDT,
            dtl_cntr_noo: center,
            dtl_diag_1o: dx,
            ARDT: ARDT,
            dtl_cntr_nameo: centername,
            dtl_diag_2o: dx2,
            PNDT: PNDT,
            phone: phone,
            dtl_diag_3o: dx3,
            dtl_plus_dayso: days,
            dtl_pat_nameo: patientName,
            dtl_diag_4o: dx4,
            dtl_clm_decsiono: claimdecision,
            dtl_hum_id_noo: HumID,
            dtl_referral_noo: referalno,
            DOBDT: DOBDT,
            dtl_auth_noo: AUTH,
            COMMENTDT: COMMENTDT,
            dtl_comnt_ownero: CommentBy,
            dtl_comnt_levelo: CommentFor,
            dtl_comnt_pgenoo: page,
            dtl_fnct_commndo: FuncCmd,
            dtl_fnct_ctradjo: FuncCA,
            dtl_fnct_clmlneo: FunCLM,
            dtl_fnct_lnenumo: FuncNum,
            dtl_comnt_line1o: cmntLine1,
            dtl_comnt_line2o: cmntLine2,
            dtl_comnt_line3o: cmntLine3,
            dtl_totlne_hdro: totLineHdr,
            dtl_totl_lineso: totLineCnt
        }
        return claimDetail;
    }

    function XCIDetailGridData(controlList) {
        var rows = [];
        $('#TblXciClaimDetails tbody tr').each(function (i, n) {
            var $row = $(n);
            rows.push({
                FIRSTDT: $row.find('td:eq(0) input[type=text]').val(),
                LASTDT: $row.find('td:eq(1) input[type=text]').val(),
                dtl_plc_trtmo: $row.find('td:eq(2) input[type=text]').val(),
                dtl_type_sero: $row.find('td:eq(3) input[type=text]').val(),
                dtl_cpt4_modo: $row.find('td:eq(4) input[type=text]').val(),
                unitdig: $row.find('td:eq(5) input[type=text]').val(),
                dtl_exo: $row.find('td:eq(6) input[type=text]').val(),
                dtl_payeeo: $row.find('td:eq(7) input[type=text]').val(),
                dtl_ovro: $row.find('td:eq(8) input[type=text]').val(),
                ChargeAmt: $row.find('td:eq(9) input[type=text]').val(),
                PaidAmt: $row.find('td:eq(10) input[type=text]').val(),
                dtl_ctr_deco: $row.find('td:eq(11) input[type=text]').val(),
                RwkAmt: $row.find('td:eq(12) input[type=text]').val(),
                dtl_adj_deco: $row.find('td:eq(13) input[type=text]').val(),
                FinalAmt: $row.find('td:eq(14) input[type=text]').val(),

            });
        });

        rows.shift();  // first row will be empty - so remove
       


        //var XciDto =
        //    {
        //        XciXriXhiDetailDto: claimDetails
        //    };
        return rows;
    }
    //XCI MODEL END

    //PRI MODEL
    function loadPartialViewPRI(controlList) {
        var dataLine = controlList.split(",");

        //if (!RequiredvalidationPDI(dataLine)) {
        var data = encodeJson(PRIdata(controlList));

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewUpdate_PRI',
            data: {
                controlLine: controlList,
                strpriDTO: data
            },
            cache: false,
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').hide();// ;addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('#divMainPage').removeClass("hide");
                $('.PRIMain').hide();
            },
            error: function (jqXHR, exception) {
            }
        });
        //}


    }

    function PRIdata(controlList) {

        var pcviewo = $('#PRIDto_pcviewo').val();
        var pctxtxo = $('#PRIDto_pctxtxo').val();
        var pcuseddo = $('#PRIDto_pcuseddo').val();
        var pcpt1o = $('#PRIDto_pcpt1o').val();
        var pcpt2o = $('#PRIDto_pcpt2o').val();
        var pcpt3o = $('#PRIDto_pcpt3o').val();
        var pcpt4o = $('#PRIDto_pcpt4o').val();
        var pcpt5o = $('#PRIDto_pcpt5o').val();
        var pcpt6o = $('#PRIDto_pcpt6o').val();
        var pcpt7o = $('#PRIDto_pcpt7o').val();
        var pcpt8o = $('#PRIDto_pcpt8o').val();
        var pcpt9o = $('#PRIDto_pcpt9o').val();
        var pcpt10o = $('#PRIDto_pcpt10o').val();
        var pcmic1o = $('#PRIDto_pcmic1o').val();
        var pcmic2o = $('#PRIDto_pcmic2o').val();
        var pcmic3o = $('#PRIDto_pcmic3o').val();
        var pcmic4o = $('#PRIDto_pcmic4o').val();
        var pcmic5o = $('#PRIDto_pcmic5o').val();
        var pcmic6o = $('#PRIDto_pcmic6o').val();
        var pcmic7o = $('#PRIDto_pcmic7o').val();
        var pcmic8o = $('#PRIDto_pcmic8o').val();
        var pcmic9o = $('#PRIDto_pcmic9o').val();
        var pcmic10o = $('#PRIDto_pcmic10o').val();

        var Model =
            {
                //provider
                pcviewo: pcviewo,
                pctxtxo: pctxtxo,
                pcuseddo: pcuseddo,
                pcpt1o: pcpt1o,
                pcpt2o: pcpt2o,
                pcpt3o: pcpt3o,
                pcpt4o: pcpt4o,
                pcpt5o: pcpt5o,
                pcpt6o: pcpt6o,
                pcpt7o: pcpt7o,
                pcpt8o: pcpt8o,
                pcpt9o: pcpt9o,
                pcpt10o: pcpt10o,
                pcmic1o: pcmic1o,
                pcmic2o: pcmic2o,
                pcmic3o: pcmic3o,
                pcmic4o: pcmic4o,
                pcmic5o: pcmic5o,
                pcmic6o: pcmic6o,
                pcmic7o: pcmic7o,
                pcmic8o: pcmic8o,
                pcmic9o: pcmic9o,
                pcmic10o: pcmic10o,
                ControlLine: controlList
            };
        return Model;
    }
    //PRI MODEL END

    function loadPartialViewPDI(controlList) {
        var dataLine = controlList.split(",");

        //if (!RequiredvalidationPDI(dataLine)) {
        var data = encodeJson(PDIdata(controlList));

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewUpdate_PDI',
            data: {
                controlLine: controlList,
                strpdiDTO: data
            },
            cache: false,
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').hide();// ;addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('#divMainPage').removeClass("hide");
                if (dataLine.length > 5 && dataLine[4] == "CFC")
                    $('#PDIMain').hide();
                else
                    $('#PDIMain').show();
            },
            error: function (jqXHR, exception) {
            }
        });
        //}


    }

    function Padright(str, max) {
        str = str.toString();
        return str.length < max ? Padright("0" + str, max) : str;
    }

    function PDIdata(controlList) {
        ///Provider
        var PHONE = $('#PDIDto_PHONE').val();
        var FOC_FROM_DT = $('#PDIDto_FOC_FROM_DT').val();
        var FOC_TO_DT = $('#PDIDto_FOC_TO_DT').val();
        var CHECK_TO = $('#PDIDto_CHECK_TO').val();
        var CHECK_TO_IND = $('#PDIDto_CHECK_TO_IND').val();
        var VCH1 = $('#PDIDto_VCH1').val();
        var VCH2 = $('#PDIDto_VCH2').val();
        var PVD_CYCLE = $('#PDIDto_PVD_CYCLE').val();
        var CLNPTH = $('#PDIDto_CLNPTH').val();
        var MEDSPWVR = $('#PDIDto_MEDSPWVR').val();
        var MEDSPWV = $('#PDIDto_MEDSPWV').val();
        var UPDT = $('#PDIDto_UPDT').val();
        var UPDT_DT = $('#PDIDto_UPDT_DT').val();

        var PVD_GROUP_NO = $('#PDIDto_PVD_GROUP_NO').val();
        var PVD_GROUP_NO_IND = $('#PDIDto_PVD_GROUP_NO_IND').val();
        var SITE_C = $('#PDIDto_SITE_C').val();
        var SITE_C_MM = $('#PDIDto_SITE_C_MM').val();
        var SITE_C_YY = $('#PDIDto_SITE_C_YY').val();
        var SITE_P1 = $('#PDIDto_SITE_P1').val();
        var SITE_P1_MM = $('#PDIDto_SITE_P1_MM').val();
        var SITE_P1_YY = $('#PDIDto_SITE_P1_YY').val();
        var SITE_P2 = $('#PDIDto_SITE_P2').val();
        var SITE_P2_MM = $('#PDIDto_SITE_P2_MM').val();
        var SITE_P2_YY = $('#PDIDto_SITE_P2_YY').val();
        var SCOPE_C = $('#PDIDto_SCOPE_C').val();
        var SCOPE_C_MM = $('#PDIDto_SCOPE_C_MM').val();
        var SCOPE_C_YY = $('#PDIDto_SCOPE_C_YY').val();
        var SCOPE_P1 = $('#PDIDto_SCOPE_P1').val();
        var SCOPE_P1_MM = $('#PDIDto_SCOPE_P1_MM').val();
        var SCOPE_P1_YY = $('#PDIDto_SCOPE_P1_YY').val();

        // Hospital
        var Number_Of_Beds = $('#PDIDto_Number_Of_Beds').val();
        var EFF_DT_C = $('#PDIDto_EFF_DT_C').val();
        var RATE = $('#PDIDto_RATE').val();
        var EFF_DT_1 = $('#PDIDto_EFF_DT_1').val();
        var RATE2 = $('#PDIDto_RATE2').val();
        var EFF_DT_2 = $('#PDIDto_EFF_DT_2').val();
        var RATE3 = $('#PDIDto_RATE3').val();
        var EFF_DT_C_HST = $('#PDIDto_EFF_DT_C_HST').val();
        var RATE_HST = $('#PDIDto_RATE_HST').val();
        var EFF_DT_HST1 = $('#PDIDto_EFF_DT_HST1').val();
        var RATE_HST2 = $('#PDIDto_RATE_HST2').val();
        var EFF_DT_HST2 = $('#PDIDto_EFF_DT_HST2').val();
        var RATE_HST3 = $('#PDIDto_RATE_HST3').val();
        var EFF_DT_C_AVG = $('#PDIDto_EFF_DT_C_AVG').val();
        var RATE_AVG = $('#PDIDto_RATE_AVG').val();
        var EFF_DT_AVG1 = $('#PDIDto_EFF_DT_AVG1').val();
        var RATE_AVG2 = $('#PDIDto_RATE_AVG2').val();
        var EFF_DT_AVG2 = $('#PDIDto_EFF_DT_AVG2').val();
        var RATE_AVG3 = $('#PDIDto_RATE_AVG3').val();
        var AUTPIND = $('#PDIDto_AUTPIND').val();
        var SEND_LTR = $('#PDIDto_SEND_LTR').val();
        var MEDSPWV = $('#PDIDto_MEDSPWV').val();
        var INP_Per = $('#PDIDto_INP_Per').val();
        var OP_Per = $('#PDIDto_OP_Per').val();
        var Pay_Circle = $('#PDIDto_Pay_Circle').val();
        var EFF = $('#PDIDto_EFF').val();
        var P = $('#PDIDto_P').val();
        var EFF2 = $('#PDIDto_EFF2').val();

        //commom
        var TYPE = $('#PDIDto_TYPE').val();
        var STATUS = $('#PDIDto_STATUS').val();
        var RC = $('#PDIDto_RC').val();
        var PVD_NAME = $('#PDIDto_PVD_NAME').val();
        var ALPHA_KEY = $('#PDIDto_ALPHA_KEY').val();
        var AUTP = $('#PDIDto_AUTP').val();
        var PVD_ADDR = $('#PDIDto_PVD_ADDR').val();
        var TAX_ID_NUMBER = $('#PDIDto_TAX_ID_NUMBER').val();
        var PVD_ADDR2 = $('#PDIDto_PVD_ADDR2').val();
        var ALSO_KNOWN_AS = $('#PDIDto_ALSO_KNOWN_AS').val();
        var PVD_ADDR3 = $('#PDIDto_PVD_ADDR3').val();
        var MHEBET_GROUP_NO = $('#PDIDto_MHEBET_GROUP_NO').val();
        var PVD_ADDR4 = $('#PDIDto_PVD_ADDR4').val();
        var LICENSURE_NO = $('#PDIDto_LICENSURE_NO').val();
        var CITY = $('#PDIDto_CITY').val();
        var STATE = $('#PDIDto_STATE').val();
        var NATL_PROV_ID = $('#PDIDto_NATL_PROV_ID').val();
        var TXNMY = $('#PDIDto_TXNMY').val();
        var ZIP = $('#PDIDto_ZIP').val();
        var UC_ZIP = $('#PDIDto_UC_ZIP').val();
        var COUNTY = $('#PDIDto_COUNTY').val();
        var SPEC_CD1 = $('#PDIDto_SPEC_CD1').val();
        var SPEC_CD2 = $('#PDIDto_SPEC_CD2').val();
        var SPEC_CD3 = $('#PDIDto_SPEC_CD3').val();
        var SPEC_CD4 = $('#PDIDto_SPEC_CD4').val();
        var ESC = $('#PDIDto_ESC').val();
        var CE = $('#PDIDto_CE').val();
        var GRP = $('#PDIDto_GRP').val();
        var SEND = $('#PDIDto_SEND').val();
        var W9 = $('#PDIDto_W9').val();
        var FINA = $('#PDIDto_FINA').val();
        var PEND = $('#PDIDto_PEND').val();
        var ADMOV = $('#PDIDto_ADMOV').val();
        var CBSD = $('#PDIDto_CBSD').val();
        var CBED = $('#PDIDto_CBED').val();
        var CB = $('#PDIDto_CB').val();
        var CFIEXISTLOB = $('#PDIDto_CFIEXISTLOB').val();
        var PAPER_NOTI = $('#PDIDto_PAPER_NOTI').val();
        var NO_PAY = $('#PDIDto_NO_PAY').val();
        var EFF_DT = $('#PDIDto_EFF_DT').val();
        var MARKET = $('#PDIDto_MARKET').val();
        var Major_Class_Cd = $('#PDIDto_Major_Class_Cd').val();
        var PROC = $('#PDIDto_PROC').val();
        var DIAG = $('#PDIDto_DIAG').val();
        var VCH = $('#PDIDto_VCH').val();
        //var VCHSND = $('#PDIDto_VCHSND').val();
        var CreditBal_ToFormat = $('#PDIDto_Credit_Balance').val();
        if (CreditBal_ToFormat.split(".").length > 1) {
            var Credit_Balance = Padright(CreditBal_ToFormat.split(".")[0], 7) + "." + CreditBal_ToFormat.split(".")[1];
        }
        else {
            var Credit_Balance = Padright(CreditBal_ToFormat.split(".")[0], 7) + ".00";
        }

        var TIN_EFF_DT = $('#PDIDto_TIN_EFF_DT').val();
        var APLY_TAX = $('#PDIDto_APLY_TAX').val();
        var SEND_480 = $('#PDIDto_SEND_480').val();
        var MCID = $('#PDIDto_MCID').val();
        var Vendor = $('#PDIDto_Vendor').val();
        var Esc_First_Name = $('#PDIDto_Esc_First_Name').val();
        var Esc_Last_Name = $('#PDIDto_Esc_Last_Name').val();
        var WTHLD = $('#PDIDto_WTHLD').val();
        var Comment1 = $('#PDIDto_Comment1').val();
        var Comment2 = $('#PDIDto_Comment2').val();
        var Comment3 = $('#PDIDto_Comment3').val();

        var Model =
            {
                //provider
                PHONE: PHONE,
                FOC_FROM_DT: FOC_FROM_DT,
                FOC_TO_DT: FOC_TO_DT,
                CHECK_TO: CHECK_TO,
                AUTP: AUTP,
                CHECK_TO_IND: CHECK_TO_IND,
                VCH1: VCH1,
                VCH2: VCH2,
                PVD_CYCLE: PVD_CYCLE,
                CLNPTH: CLNPTH,
                MEDSPWVR: MEDSPWVR,
                MEDSPWV: MEDSPWV,
                UPDT: UPDT,
                UPDT_DT: UPDT_DT,
                PVD_GROUP_NO: PVD_GROUP_NO,
                PVD_GROUP_NO_IND: PVD_GROUP_NO_IND,
                SITE_C: SITE_C,
                SITE_C_MM: SITE_C_MM,
                SITE_C_YY: SITE_C_YY,
                SITE_P1: SITE_P1,
                SITE_P1_MM: SITE_P1_MM,
                SITE_P1_YY: SITE_P1_YY,
                SITE_P2: SITE_P2,
                SITE_P2_MM: SITE_P2_MM,
                SITE_P2_YY: SITE_P2_YY,
                SCOPE_C: SCOPE_C,
                SCOPE_C_MM: SCOPE_C_MM,
                SCOPE_C_YY: SCOPE_C_YY,
                SCOPE_P1: SCOPE_P1,
                SCOPE_P1_MM: SCOPE_P1_MM,
                SCOPE_P1_YY: SCOPE_P1_YY,
                //Hospital
                Number_Of_Beds: Number_Of_Beds,
                EFF_DT_C: EFF_DT_C,
                RATE: RATE,
                EFF_DT_1: EFF_DT_1,
                RATE2: RATE2,
                EFF_DT_2: EFF_DT_2,
                RATE3: RATE3,
                EFF_DT_C_HST: EFF_DT_C_HST,
                RATE_HST: RATE_HST,
                EFF_DT_HST1: EFF_DT_HST1,
                RATE_HST2: RATE_HST2,
                EFF_DT_HST2: EFF_DT_HST2,
                RATE_HST3: RATE_HST3,
                EFF_DT_C_AVG: EFF_DT_C_AVG,
                RATE_AVG: RATE_AVG,
                EFF_DT_AVG1: EFF_DT_AVG1,
                RATE_AVG2: RATE_AVG2,
                AUTP: AUTP,
                EFF_DT_AVG2: EFF_DT_AVG2,
                RATE_AVG3: RATE_AVG3,
                AUTPIND: AUTPIND,
                SEND_LTR: SEND_LTR,
                MEDSPWV: MEDSPWV,
                INP_Per: INP_Per,
                OP_Per: OP_Per,
                Pay_Circle: Pay_Circle,
                EFF: EFF,
                P: P,
                EFF2: EFF2,
                //common
                TYPE: TYPE,
                STATUS: STATUS,
                RC: RC,
                PVD_NAME: PVD_NAME,
                ALPHA_KEY: ALPHA_KEY,
                PVD_ADDR: PVD_ADDR,
                TAX_ID_NUMBER: TAX_ID_NUMBER,
                PVD_ADDR2: PVD_ADDR2,
                ALSO_KNOWN_AS: ALSO_KNOWN_AS,
                PVD_ADDR3: PVD_ADDR3,
                MHEBET_GROUP_NO: MHEBET_GROUP_NO,
                PVD_ADDR4: PVD_ADDR4,
                LICENSURE_NO: LICENSURE_NO,
                CITY: CITY,
                STATE: STATE,
                NATL_PROV_ID: NATL_PROV_ID,
                TXNMY: TXNMY,
                ZIP: ZIP,
                UC_ZIP: UC_ZIP,
                COUNTY: COUNTY,
                SPEC_CD1: SPEC_CD1,
                SPEC_CD2: SPEC_CD2,
                SPEC_CD3: SPEC_CD3,
                SPEC_CD4: SPEC_CD4,
                ESC: ESC,
                CE: CE,
                GRP: GRP,
                SEND: SEND,
                W9: W9,
                FINA: FINA,
                PEND: PEND,
                ADMOV: ADMOV,
                CBSD: CBSD,
                CBED: CBED,
                CB: CB,
                CFIEXISTLOB: CFIEXISTLOB,
                PAPER_NOTI: PAPER_NOTI,
                NO_PAY: NO_PAY,
                EFF_DT: EFF_DT,
                MARKET: MARKET,
                Major_Class_Cd: Major_Class_Cd,
                Esc_Last_Name: Esc_Last_Name,
                PROC: PROC,
                DIAG: DIAG,
                VCH: VCH,
                //VCHSND: VCHSND,
                Credit_Balance: Credit_Balance,
                TIN_EFF_DT: TIN_EFF_DT,
                APLY_TAX: APLY_TAX,
                SEND_480: SEND_480,
                MCID: MCID,
                Vendor: Vendor,
                Esc_First_Name: Esc_First_Name,
                WTHLD: WTHLD,
                Comment1: Comment1,
                Comment2: Comment2,
                Comment3: Comment3,
                ControlLine: controlList
            };
        return Model;
    }

    function loadPartialViewCFI(controlList)
    {
        var data = "";
        var cfiDTO = "";
            data = CFIdata(controlList);
            $('#tabcfiDetail tr').each(function (i, row) {
                $(this).find('input').each(function ()
                {
                    cfiDTO = cfiDTO + $(this).attr('id') + "=**=" + $(this).val() + "@%%@";
                })
                cfiDTO = cfiDTO + "!@#$";
            });
        
        data = encodeJson(data);
        cfiDTO = encodeJson(cfiDTO);
        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewUpdate_CFC',
            data: {
                controlLine: controlList,
                strcfiDTO: cfiDTO,
                strmodel: data

            },
            cache: false,
            success: function (data) {

                $('#divMainPage').removeClass("hide");
                $('#divProcess').hide();// ;addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('#divMainPage').removeClass("hide");
            },
            error: function (jqXHR, exception) {
            }
        });
    }

    function CFIdata(controlList) {
        //Hospital
        var Stat_a_dt = $('#CFIDto_Stat_a_dt').val();
        var User_Id = $('#CFIDto_User_Id').val();
        var Pvd_no = $('#CFIDto_Pvd_no').val();
        var Ma = $('#CFIDto_Ma').val();
        var Pvd_name = $('#CFIDto_Pvd_name').val();
        var Ind = $('#CFIDto_Ind').val();
        var Lob = $('#CFIDto_Lob').val();
        var Splitbl = $('#CFIDto_Splitbl').val();
        var Ctr_grp = $('#CFIDto_Ctr_grp').val();
        var Cma = $('#CFIDto_Cma').val();
        var Cntr_name = $('#CFIDto_Cntr_name').val();
        var Seq_nbr = $('#CFIDto_Seq_nbr').val();
        var Drggrp = $('#CFIDto_Drggrp').val();
        var Status = $('#CFIDto_Status').val();
        var Hpc = $('#CFIDto_Hpc').val();
        var Eff_date = $('#CFIDto_Eff_date').val();
        var Term_date = $('#CFIDto_Term_date').val();
        var Chg_date = $('#CFIDto_Chg_date').val();
        var Ip_lmp = $('#CFIDto_Ip_lmp').val();
        var Op_lmp = $('#CFIDto_Op_lmp').val();
        var Par_cd = $('#CFIDto_Par_cd').val();
        var Hhind = $('#CFIDto_Hhind').val();
        var Pay_mth = $('#CFIDto_Pay_mth').val();
        var Ln = $('#CFIDto_Ln').val();
        var Vch_cd = $('#CFIDto_Vch_cd').val();
        var Next_cat = $('#CFIDto_Next_cat').val();
        var Tot = $('#CFIDto_Tot').val();
        if ($('#CFIDto_Cis_id').val() == "") {
            var Cis_id = "---------";
        }
        else {
            var Cis_id = $('#CFIDto_Cis_id').val();
        }


        var Asc = $('#CFIDto_Asc').val();
        var Auth_penalty_ind = $('#CFIDto_Auth_penalty_ind').val();
        var Carveout = $('#CFIDto_Carveout').val();
        var Domestic = $('#CFIDto_Domestic').val();
        var Tmly_fil = $('#CFIDto_Tmly_fil').val();
        var Pct = $('#CFIDto_Pct').val();
        var Amount = $('#CFIDto_Amount').val();
        var Wth = $('#CFIDto_Wth').val();

        var Comments = $('#CFIDto_Comments').val();
        var Comments2 = $('#CFIDto_Comments2').val();
        var Ft_cat = $('#CFIDto_Ft_cat').val();
        var Ft_cat_Comment = $('#CFIDto_Ft_cat_Comment').val();
        //Physician
        var arrList = controlList.toUpperCase().split(",");

        if (arrList[2] == "D") {
            var AdjNbr = $('#CFIDto_AdjNbr').val();
            var RollUp = $('#CFIDto_RollUp').val();
            var Contracted_procedure = $('#CFIDto_Contracted_procedure').val();
            var Default = $('#CFIDto_Default').val();
            var Med_SchNbr1 = $('#CFIDto_Med_SchNbr1').val();
            var Med_Area1 = $('#CFIDto_Med_Area1').val();
            var Med_Percent1 = $('#CFIDto_Med_Percent1').val();
            var Med_SchNbr2 = $('#CFIDto_Med_SchNbr2').val();
            var Med_Area2 = $('#CFIDto_Med_Area2').val();
            var Med_Percent2 = $('#CFIDto_Med_SchNbr2').val();
            var Med_Mop = $('#CFIDto_Med_Mop').val();
            var Comm_SchNbr1 = $('#CFIDto_Comm_SchNbr1').val();
            var Comm_Area1 = $('#CFIDto_Comm_Area1').val();

            var Comm_Percent1 = $('#CFIDto_Comm_Percent1').val();
            var Comm_SchNbr2 = $('#CFIDto_Comm_SchNbr2').val();
            var Comm_Area2 = $('#CFIDto_Comm_Area2').val();
            var Comm_Percent2 = $('#CFIDto_Comm_Percent2').val();
            var Comm_Mop = $('#CFIDto_Comm_Mop').val();
            var Contracted_categories = $('#CFIDto_Contracted_categories').val();
            var Comm_Cis_id = $('#CFIDto_Comm_Cis_id').val();
            var Medi_Cis_id = $('#CFIDto_Medi_Cis_id').val();
        }

        var Model =
           {
               Stat_a_dt: Stat_a_dt,
               User_Id: User_Id,
               Pvd_no: Pvd_no,
               Ma: Ma,
               Pvd_name: Pvd_name,
               Ind: Ind,
               Lob: Lob,
               Splitbl: Splitbl,
               Ctr_grp: Ctr_grp,
               Cma: Cma,
               Cntr_name: Cntr_name,
               Seq_nbr: Seq_nbr,
               Drggrp: Drggrp,
               Status: Status,
               Hpc: Hpc,
               Eff_date: Eff_date,
               Term_date: Term_date,
               Chg_date: Chg_date,
               Ip_lmp: Ip_lmp,
               Op_lmp: Op_lmp,
               Par_cd: Par_cd,
               Hhind: Hhind,
               Pay_mth: Pay_mth,
               Ln: Ln,
               Vch_cd: Vch_cd,
               Next_cat: Next_cat,
               Tot: Tot,
               Cis_id: Cis_id,
               Asc: Asc,
               Auth_penalty_ind: Auth_penalty_ind,
               Carveout: Carveout,
               Domestic: Domestic,
               Tmly_fil: Tmly_fil,
               Pct: Pct,
               Amount: Amount,
               Wth: Wth,
               Comments: Comments,
               Comments2: Comments2,
               Ft_cat: Ft_cat,
               Ft_cat_Comment: Ft_cat_Comment,
               ControlLine: controlList,
               //Physician
               AdjNbr: AdjNbr,
               Default: Default,
               RollUp: RollUp,
               Contracted_procedure: Contracted_procedure,
               Med_SchNbr1: Med_SchNbr1,
               Med_Area1: Med_Area1,
               Med_Percent1: Med_Percent1,
               Med_SchNbr2: Med_SchNbr2,
               Med_Area2: Med_Area2,
               Med_Percent2: Med_Percent2,
               Med_Mop: Med_Mop,
               Comm_SchNbr1: Comm_SchNbr1,
               Comm_Area1: Comm_Area1,
               Comm_Percent1: Comm_Percent1,
               Comm_SchNbr2: Comm_SchNbr2,
               Comm_Area2: Comm_Area2,
               Comm_Percent2: Comm_Percent2,
               Comm_Mop: Comm_Mop,
               Contracted_categories: Contracted_categories,
               Comm_Cis_id: Comm_Cis_id,
               Medi_Cis_id: Medi_Cis_id


           };
        return Model;
    }

        function MRIdata(controlList) {
        var MRLN = $('#MRIDto_MRLN').val();
        var Grp = $('#MRIDto_Grp').val();
        var Cov = $('#MRIDto_Cov').val();
        var DynamicMCText = $('#MRIDto_DynamicMCText').val();
        var Cl = $('#MRIDto_Cl').val();
        var Rein = $('#MRIDto_Rein').val();
        var Dec_dt = $('#MRIDto.Dec_dt').val();
        var Rel_dt = $('#MRIDto_Rel_dt').val();
        var Correspondent = $('#MRIDto_Correspondent').val();
        var Hire_dt = $('#MRIDto_Hire_dt').val();
        var Vip = $('#MRIDto_Vip').val();
        var Rel_lt = $('#MRIDto_Rel_lt').val();
        var DynamicAddressHeading = $('#MRIDto_DynamicAddressHeading').val();
        var DynamicState = $('#MRIDto_DynamicState').val();
        var DynamicCountry = $('#MRIDto_DynamicCountry').val();
        var Address1 = $('#MRIDto_Address1').val();
        var DynamicCity = $('#MRIDto_DynamicCity').val();
        var DynamicZip = $('#MRIDto_DynamicZip').val();
        var Address2 = $('#MRIDto_Address2').val();
        var Freetext = $('#MRIDto_Freetext').val();
        var DynamicEmpNo = $('#MRIDto_DynamicEmpNo').val();
        var DynamicBR = $('#MRIDto_DynamicBR').val();

        var Model =
           {
               MRLN: MRLN,
               Grp: Grp,
               Cov: Cov,
               DynamicMCText: DynamicMCText,
               Cl: Cl,
               Rein: Rein,
               Dec_dt: Dec_dt,
               Rel_dt: Rel_dt,
               Correspondent: Correspondent,
               Hire_dt: Hire_dt,
               Vip: Vip,
               Rel_lt: Rel_lt,
               DynamicAddressHeading: DynamicAddressHeading,
               DynamicState: DynamicState,
               DynamicCountry: DynamicCountry,
               Address1: Address1,
               DynamicCity: DynamicCity,
               DynamicZip: DynamicZip,
               Address2: Address2,
               Freetext: Freetext,
               DynamicEmpNo: DynamicEmpNo,
               DynamicBR: DynamicBR,
               ControlLine: controlList
           };
        return Model;
    }

    function loadPartialViewCSI(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();

        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialView',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });


    }

    function loadPartialViewASI(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();

        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialView',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });
    }

    function loadPartialViewESI(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();

        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialView',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }
        });
    }

    function loadPartialViewCNI(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();

        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialView',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }
        });
    }

    //New-CSI Including Suffix change
    function validateControlLineCSI(controlValue) {
        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line")
                    return false;
                }
                else {
                    if (dataLine[0] == "CSI" || dataLine[0] == "CSN") {
                        if (dataLine.length > 1) {
                            if (/^(\d{9})$/.test(dataLine[1]) == true) {
                                if (dataLine.length > 2) {
                                    if (dataLine[2] == "H" || dataLine[2] == "D") {
                                        if (dataLine.length > 3) {
                                            if ((dataLine[3] == '') || ((AlphaNumericRegExp(dataLine[3], false) == true) && (dataLine[3].length == 1))) {
                                                return true;
                                            }
                                            else {
                                                $('#lblerrormsg').html(dataLine[0] + " ,Provider Number,Indicator should be followed by 1 alphanumeric Provider Suffix")
                                                return false;
                                            }
                                        }
                                        else {
                                            return true;
                                        }
                                    }
                                    else {
                                        $('#lblerrormsg').html(dataLine[0] + " ,Provider Number should be followed by 1 alphabet Indicator(D or H)")
                                        return false;
                                    }
                                }
                                else {
                                    $('#lblerrormsg').html(dataLine[0] + " ,Provider Number should be followed by 1 alphabet Indicator(D or H)");
                                    return false;
                                }
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Provider Number");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Provider Number");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;

    }

    //New CFI-Includiing Suffix Change
    function validateControlLineCFI(controlValue) {
        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line")
                    return false;
                }
                else {
                    if (dataLine[0] == "CFI" || dataLine[0] == "CFN" || dataLine[0] == "CFA" || dataLine[0] == "CFC" || dataLine[0] == "CFU") {
                        if (dataLine.length > 1) {
                            if (/^(\d{9})$/.test(dataLine[1]) == true) {
                                if (dataLine.length > 2) {
                                    if (dataLine[2] == "H" || dataLine[2] == "D") {
                                        if (dataLine.length > 3) {
                                            if ((dataLine[3] == '') || ((AlphaNumericRegExp(dataLine[3], true) == true) && (dataLine[3].length == 1))) {
                                                return true;

                                            }
                                            else {
                                                $('#lblerrormsg').html(dataLine[0] + " ,Provider Number,Indicator should be followed by 1 digit alphanumeric Provider Suffix")
                                                return false;
                                            }
                                        }
                                        else {
                                            return true;

                                        }
                                    }
                                    else {
                                        $('#lblerrormsg').html(dataLine[0] + " ,Provider Number should be followed by 1 alphabet Indicator(D or H)")
                                        return false;
                                    }
                                }
                                else {
                                    $('#lblerrormsg').html(dataLine[0] + " ,Provider Number should be followed by 1 alphabet Indicator(D or H)");
                                    return false;
                                }
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Provider Number");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Provider Number");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;

    }

    //New PDI-Includiing Suffix Change
    function validatePDI(controlValue) {
        if (controlValue.length > 0) {

            var dataLine = ($.trim(controlValue)).split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line")
                    return false;
                }
                else {
                    if (dataLine[0] == "PDI" || dataLine[0] == "PDN" || dataLine[0] == "PDU") {
                        if (dataLine.length > 1) {
                            if (/^(\d{9})$/.test(dataLine[1]) == true) {
                                if (dataLine.length > 2) {
                                    if (dataLine[2] == "H" || dataLine[2] == "D") {
                                        if (dataLine.length > 3) {
                                            if ((dataLine[3] == '') || ((AlphaNumericRegExp(dataLine[3], false) == true) && (dataLine[3].trim().length == 1)) || CheckCFC(dataLine) > -1) {
                                                if (!PDItoPDUtoPDN(dataLine)) {
                                                    $('#lblerrormsg').html(dataLine[0] + "  should be followed by a PDI.");
                                                    return false;
                                                }
                                                if (CheckCFC(dataLine) > -1)
                                                    return PDUtoCFC(dataLine, CheckCFC(dataLine));
                                                else
                                                    return true;
                                            }
                                            else {
                                                $('#lblerrormsg').html(dataLine[0] + " ,Provider Number,Indicator should be followed by 1 digit alphanumeric Provider Suffix")
                                                return false;
                                            }
                                        }
                                        else {
                                            if (!PDItoPDUtoPDN(dataLine)) {
                                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a PDI.");
                                                return false;
                                            }
                                            return true;
                                        }
                                    }
                                    else {
                                        $('#lblerrormsg').html(dataLine[0] + " ,Provider Number should be followed by 1 alphabet Indicator(D or H)")
                                        return false;
                                    }
                                }
                                else {
                                    $('#lblerrormsg').html(dataLine[0] + " ,Provider Number should be followed by 1 alphabet Indicator(D or H)");
                                    return false;
                                }
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Provider Number");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Provider Number");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;

    }

    function PDUtoCFC(dataLine, pos) {
        if (dataLine[pos] == "CFC") {
            PDIClaimNo = "";
            if (dataLine.length > 1) {
                if (/^(\d{9})$/.test(dataLine[pos + 1]) == true) {
                    if (dataLine.length > pos + 3) {
                        if ((dataLine[pos + 2] == '') || ((/^[a-zA-Z ]*$/.test(dataLine[pos + 2]) == true) && (dataLine[pos + 2].length == 1))) {

                            return true;
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[pos] + " ,Provider Number,Indicator should be followed by 1 alphabet Provider Suffix")
                            return false;
                        }
                    }
                    else {
                        return true;
                    }

                }
                else {
                    $('#lblerrormsg').html(dataLine[pos] + "  should be followed by a 9 digit numeric Provider Number");
                    return false;
                }
            }
            else {
                $('#lblerrormsg').html(dataLine[pos] + "  should be followed by a 9 digit numeric Provider Number");
                return false;
            }
        }
        else {
            $('#lblerrormsg').html(dataLine[pos] + "  should be the start value");
            return false;
        }

    }

    function CheckCFC(controlValue) {

        if (controlValue[0] == "PDU") {
            for (var i = 1; i < controlValue.length; i++) {
                if (controlValue[i] == "CFC")
                    return i;
            }
        }
        return -1;

    }

    function PDItoPDUtoPDN(controlValue) {
        if (controlValue[0] == "PDI") {
            PDIClaimNo = controlValue;
        }
        var PDIRedirect = $('#hdnPdiRedirectFlag').val();
        if ((controlValue[0] == "PDU" || controlValue[0] == "PDN") && (PDIRedirect == "true")) {
            PDIClaimNo = controlValue;
        }
        if ((controlValue[0] == "PDU" || controlValue[0] == "PDN") && (PDIRedirect == "false")) {

            if (PDIClaimNo != "") {
                for (var i = 1; i < 3; i++) {
                    if (PDIClaimNo[i] != controlValue[i]) {
                        return false;
                    }
                }
            }
            else {
                return false;
            }
        }

        return true;

    }

    function validateMRU(controlValue) {
        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line")
                    return false;
                }
                else {
                    if (dataLine[0] == "MRU") {
                        if (dataLine.length > 1) {
                            if (/^(\d{9})$/.test(dataLine[1]) == true) {
                                if (dataLine.length > 2) {
                                    if ((dataLine[2] == '') || ((/^[a-zA-Z ]*$/.test(dataLine[2]) == true) && (dataLine[2].length == 1)) || ((/^(\d{1})$/.test(dataLine[2]) == true))) {
                                        if (dataLine.length > 3) {
                                            if (dataLine[3] == '') {
                                                return true;
                                            }
                                            else {
                                                return false;
                                            }
                                        }
                                        else {
                                            return true;
                                        }
                                    }
                                    else {
                                        $('#lblerrormsg').html(dataLine[0] + " ,Member ID should be followed by 1 character Suffix")
                                        return false;
                                    }
                                }
                                else {
                                    return true;
                                }
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Member ID");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Member ID");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;

    }

    $("#divPartialView").on("change", "#ddltxtControlTextMHI", function (event) {
        var ddlControl = $(this).val().toUpperCase();

        if (ddlControl == "") {
            $('.First').hide();
            $('.Second').show();
        }
        else if (ddlControl == "ECN-ECN NUMBER") {
            $('.tdECN').show();
            $('.First').hide();
            $('.Second').show();
        }
        else if (ddlControl == "CIS-CIS ID") {
            $('.First').hide();
            $('.Second').show();
            $('.tdCISID').show();
        }
        else if (ddlControl == "I-CLAIM LINE PEND AUDIT DETAILS") {
            $('.First').show();
            $('.Second').hide();
        }
        else {
            $('.First').hide();
            $('.Second').show();
        }
    });

    function validateControlASI(controlValue) {
        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line")
                    return false;
                }
                else {
                    if (dataLine[0] == "ASI" || dataLine[0] == "ASN") {
                        if (dataLine.length > 1) {
                            if ((/^[a-zA-Z ]*$/.test(dataLine[1]) == true))

                                if (dataLine.length > 3) {
                                    if ((/^(?=.*?[1-9])[0-9()-]+$/.test(dataLine[3]) == false)) {
                                        if (dataLine[3].length == 2 || dataLine[3].length == 0) {
                                            return true;

                                        }
                                        else {
                                            $('#lblerrormsg').html(dataLine[0] + " state name should be 2 alphabets");
                                            return false;
                                        }

                                    }
                                    else {
                                        $('#lblerrormsg').html(dataLine[0] + "  should be followed by state name, digits and special characters are not allowed");
                                        return false;
                                    }
                                }
                                else {
                                    return true;
                                }

                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by Last Name");
                                return false;

                            }
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;

    }

    function validateControlCNI(controlValue) {
        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line")
                    return false;
                }
                else {
                    if (dataLine[0] == "CNI" || dataLine[0] == "CNN" || dataLine[0] == "CNP") {
                        if (/^(\d{4})$/.test(dataLine[1]) == true) {
                            return true;
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 4 digit numeric");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;

    }

    function validateControlLineMRI(controlValue) {
        if (controlValue.length > 0) {
            //added regex check for string ending with space or not
            //part of SIT Defect#350374
            if (/\s+$/.test(controlValue))
                controlValue = $.trim($("#txtControlText").val().toUpperCase());
            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line")
                    return false;
                }
                else {
                    if (dataLine[0] == "MRI" || dataLine[0] == "MRU" || dataLine[0] == "MRN") {
                        if (dataLine.length > 1) {
                            var regexUMID = /^H(\d{8})$/;
                            var regExMID = /^\d{9}$/;

                            if (regexUMID.test(dataLine[1]) || regExMID.test(dataLine[1])) {
                                if (dataLine.length > 2) {
                                    if((dataLine[2].length == 1 && AlphaNumericRegExp(dataLine[2], false)) || dataLine[2] == "")
                                    {
                                        if (dataLine.length > 3) {
                                            if ((dataLine[3] == '') || dataLine[3] == "O" || dataLine[3] == 'C' || dataLine[3] == 'PTD' || dataLine[3] == 'P1' || dataLine[3] == 'P2' || dataLine[3] == 'P3' || dataLine[3] == 'P4' || dataLine[3] == 'P5' || dataLine[3] == 'P6' || dataLine[3] == 'CSP') {
                                                return true;
                                            }
                                            else {
                                                $('#lblerrormsg').html(dataLine[0] + " ,Member ID,Suffix should be followed by Modifier")
                                                return false;
                                            }
                                        }
                                        return true;
                                    }
                                    else {
                                        $('#lblerrormsg').html(dataLine[0] + " ,Member ID should be followed by 1 digit alphanumeric Suffix")
                                        return false;
                                    }
                                }
                                else {

                                    return true;
                                }
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by valid Member ID or UMID");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by valid Member ID or UMID");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;

    }

    function validateMRItoMRUMRN(controlValue) {
        if (controlValue[0] == "MRI" || $('#hdnMRIRedirectFlag').val() == "true") {
            MRINo = controlValue;
        }

        if (controlValue[0] == "MRN" || controlValue[0] == "MRU") {

            if (MRINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (controlValue[i] != "") {
                        if (MRINo[i] != controlValue[i]) {
                            return false;
                        }
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;
    }

    function validateControlIPI(controlValue) {
        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length >= 2) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line")
                    return false;
                }
                else {
                    if (dataLine[0] == "IPI" || dataLine[0] == "IPN") {
                        return true;
                    }
                    else {
                        $('#lblerrormsg').html("Invalid Control Line");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;

    }

    function validateControlPSI(controlValue) {
        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length >= 2) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line")
                    return false;
                }
                else {
                    if (dataLine[0] == "PSI") {
                        var regex = new RegExp("^[a-zA-Z0-9 &\\\s]+$");
                        if (regex.test(dataLine[1]) == true && dataLine[1].length >= 1) {
                            if (dataLine.length > 3) {
                                if (dataLine[2] == "D" || dataLine[2] == "H" || dataLine[2].length == 1 || dataLine[2] == "") {
                                    if (dataLine.length == 4) {
                                        if ((/^[a-zA-Z]*$/.test(dataLine[3]) == true) || (dataLine[3].length >= 2) || dataLine[3] == "") {
                                            IPINo = (controlValue.replace("PSI", "IPI")).split(',');
                                            return true;

                                        }
                                        else {
                                            $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + " , should be followed by valid State Abbreviation")
                                            return false;
                                        }
                                    }
                                    IPINo = (controlValue.replace("PSI", "IPI")).split(',');
                                    return true;
                                }
                                else {
                                    $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + " ,should be followed by valid indicator");
                                    return false;
                                }
                            }
                            IPINo = (controlValue.replace("PSI", "IPI")).split(',');
                            return true;
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by name");
                            return false;
                        }

                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should not be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;

    }

    function validateControlPAI(controlValue) {
        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length >= 3) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line")
                    return false;
                }
                else {
                    if (dataLine[0] == "PAI" || dataLine[0] == "PAN") {
                        if (/^(\d{9})$/.test(dataLine[1]) == true) {
                            if (dataLine[2].toUpperCase() == "H" || dataLine[2].toUpperCase() == "D") {
                                return true;
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "  should be followed by Suffix H/D");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by 9 digit Provider Number");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;

    }

    var iSITOISP = "";
    function validateControlISI(controlValue) {
        if (controlValue.length >= 0) {

            var dataLine = controlValue.split(",");

            if (dataLine.length > 0) {

                if (dataLine[0] == "ISN") {
                    iSITOISP = dataLine[0];
                }
                if (dataLine[0] == "ISP" && iSITOISP == "") {
                    $('#lblerrormsg').html("YOU ARE ON PAGE 1, YOU CAN NOT PAGE BACK ANY FUTHER");
                    $("#txtControlText").val($.trim($("#controlLine").val()));
                    e.preventDefault;
                    return false;

                }
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line")
                    return false;
                }
                else {
                    if (dataLine[0] == "ISI" || dataLine[0] == "ISN" || dataLine[0] == "ISP") {
                        if (/^(\d{9})$/.test(dataLine[1]) == true || /^(\d{10})$/.test(dataLine[1]) == true) {

                            return true;
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit TIN/CAS ID or 10 digit NPI Number");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;

    }

    //New PXI validation 
    function validateControlPXI(controlValue) {
        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {
                    $('#lblerrormsg').html("Invalid Control Line")
                    return false;
                }

                else {
                    if (dataLine[0] == "PXI" || dataLine[0] == "PXN" || dataLine[0] == "PXU") {
                        if (/^(\d{9})$/.test(dataLine[1]) == true) {
                            // return true;
                            if (dataLine[2] == "H" || dataLine[2] == "D") {
                                if (dataLine.length >= 4 || dataLine[3] == "") {
                                    if (dataLine[3].length == 1 || dataLine[3] == "") {
                                        if (/^[a-zA-Z ]*$/.test(dataLine[3]) == false) {
                                            $('#lblerrormsg').html("Invalid Control Line");
                                            return false;
                                        }
                                        if (!validatePXItoPXN(dataLine)) {

                                            if (dataLine[0] == "PXN") {
                                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by an PXI.");
                                            }
                                            return false;
                                        }
                                        return true;
                                    }
                                    else {
                                        $('#lblerrormsg').html(dataLine[0] + " controlline having insufficient commas");
                                        return false;
                                    }
                                }
                                else {
                                    $('#lblerrormsg').html(dataLine[0] + " controlline having insufficient commas");
                                    return false;
                                }
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + " provider number should be followed by Indicator(D/H).");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + " should be followed by a 9 digit provider number.");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + " should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;

    }

    function validatePXItoPXN(controlValue) {
        if (controlValue[0] == "PXI") {
            PXINo = controlValue;
        }

        if (controlValue[0] == "PXN") {

            if (PXINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (PXINo[i] != controlValue[i]) {
                        return false;
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;
    }
    //New SNI validation 

    function validateSNItoSNN(controlValue) {

        if (controlValue[0] == "SNI") {
            SNINo = controlValue;
            PrevSniCntrlTyp = controlValue[0];
        }
        if (controlValue[0] == "SNN" || controlValue[0] == "SNP") {

            if (SNINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (SNINo[i] != controlValue[i]) {
                        return false;
                    }
                }
            }
            else {
                return false;
            }
        }
        //return true;

        if (controlValue[0] == "SNU") {
            if (PrevSniCntrlTyp == "SNA" || PrevSniCntrlTyp == "") {
                return false;
            }
            else if (SNINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (SNINo[i] != controlValue[i]) {
                        return false;
                    }
                }
            }
            else {
                return false;
            }
        }
        else if (controlValue[0] == "SNA") {
            if (PrevSniCntrlTyp == "SNU" || PrevSniCntrlTyp == "") {
                return false;
            }
            else {
                PrevSniCntrlTyp = controlValue[0];
                return true;
            }
        }
        PrevSniCntrlTyp = controlValue[0];
        return true;
    }

    function validateSNIControl(controlValue) {
        if (controlValue.length > 0) {
            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {
                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                    if (dataLine[0] == "SNI" || dataLine[0] == "SNN" || dataLine[0] == "SNP" || dataLine[0] == "SNU" || dataLine[0] == "SNA") {
                        if (dataLine.length > 1) {
                            if (/^(\d{4})$/.test(dataLine[1]) == true) {
                                //if (!validateSNItoSNN(dataLine)) {
                                //    if (dataLine[0] == "SNN") {
                                //        $('#lblerrormsg').html(dataLine[0] + "  should be followed by an SNI.");
                                //    }
                                //    if (dataLine[0] == "SNP") {
                                //        $('#lblerrormsg').html(dataLine[0] + "  should be followed by an SNN.");
                                //    }
                                //    if (dataLine[0] == "SNU") {
                                //        $('#lblerrormsg').html(dataLine[0] + "  should be followed by an SNI.");
                                //    }
                                //    if (dataLine[0] == "SNA") {
                                //        $('#lblerrormsg').html(dataLine[0] + "  should be followed by an SNI.");
                                //    }
                                //    return false;
                                //}
                                return true;
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by 4 digit network number.");
                                return false;
                            }

                        }

                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    function loadPartialViewMRU(controlList) {

        var valRes = RequiredvalidationMRI();
        if (valRes) {
            var data = MRUData(controlList);
            var mriDetaildto = '';
            var rows = [];
            var rows1 = [];
            var rows2 = [];
            var dataLine = controlList.split(",");
            if (dataLine.length > 3 && dataLine[3] == 'O') {

                $('#TabMriDetails1 tbody tr').each(function (i, n) {
                    var $row = $(n);
                    rows1.push({
                        First_name: $row.find('td:eq(0) input[type=text]').val(),
                        a: $row.find('td:eq(1) input[type=text]').val(),
                        rl: $row.find('td:eq(2) input[type=text]').val(),

                        OEDfield: $row.find('td:eq(3) input[type=text]').val(),
                        Meff: $row.find('td:eq(4) input[type=text]').val(),
                        MCAN: $row.find('td:eq(5) input[type=text]').val(),

                        UMID: $row.find('td:eq(6) input[type=text]').val(),
                        Dep_SSN: $row.find('td:eq(7) input[type=text]').val(),
                        m: $row.find('td:eq(8) input[type=text]').val(),
                        s: $row.find('td:eq(9) input[type=text]').val(),
                        c: $row.find('td:eq(10) input[type=text]').val(),
                        d: $row.find('td:eq(11) input[type=text]').val(),
                        Ooa: $row.find('td:eq(12) input[type=text]').val(),
                        P: $row.find('td:eq(13) input[type=text]').val(),
                        M: $row.find('td:eq(14) input[type=text]').val(),
                        wv: $row.find('td:eq(15) input[type=text]').val(),
                        H: $row.find('td:eq(16) input[type=text]').val(),
                        T: $row.find('td:eq(17) input[type=text]').val(),
                        Mr: $row.find('td:eq(18) input[type=text]').val(),
                        GRP: $row.find('td:eq(19) input[type=text]').val(),
                        CL: $row.find('td:eq(20) input[type=text]').val(),
                        LOCK: $row.find('td:eq(21) input[type=text]').val(),

                    });

                });
                rows1.shift();

                $('#TabMriDetails2 tbody tr').each(function (i, n) {
                    var $row = $(n);
                    rows2.push({
                        First_name: $row.find('td:eq(0) input[type=text]').val(),
                        a: $row.find('td:eq(1) input[type=text]').val(),
                        rl: $row.find('td:eq(2) input[type=text]').val(),

                        OEDfield: $row.find('td:eq(3) input[type=text]').val(),
                        Meff: $row.find('td:eq(4) input[type=text]').val(),
                        MCAN: $row.find('td:eq(5) input[type=text]').val(),

                        UMID: $row.find('td:eq(6) input[type=text]').val(),
                        Dep_SSN: $row.find('td:eq(7) input[type=text]').val(),
                        m: $row.find('td:eq(8) input[type=text]').val(),
                        s: $row.find('td:eq(9) input[type=text]').val(),
                        c: $row.find('td:eq(10) input[type=text]').val(),
                        d: $row.find('td:eq(11) input[type=text]').val(),
                        Ooa: $row.find('td:eq(12) input[type=text]').val(),
                        P: $row.find('td:eq(13) input[type=text]').val(),
                        M: $row.find('td:eq(14) input[type=text]').val(),
                        wv: $row.find('td:eq(15) input[type=text]').val(),
                        H: $row.find('td:eq(16) input[type=text]').val(),
                        T: $row.find('td:eq(17) input[type=text]').val(),
                        Mr: $row.find('td:eq(18) input[type=text]').val(),
                        GRP: $row.find('td:eq(19) input[type=text]').val(),
                        CL: $row.find('td:eq(20) input[type=text]').val(),
                        LOCK: $row.find('td:eq(21) input[type=text]').val(),
                    });

                });
                rows2.shift();
            }
            else if (dataLine.length > 3 && dataLine[3] == 'C') {
                $('#TabMriDetails1 tbody tr').each(function (i, n) {
                    var $row = $(n);
                    rows1.push({
                        First_name: $row.find('td:eq(0) input[type=text]').val(),
                        a: $row.find('td:eq(1) input[type=text]').val(),
                        rl: $row.find('td:eq(2) input[type=text]').val(),
                        Birth_date: $row.find('td:eq(3) input[type=text]').val(),

                        COCField: $row.find('td:eq(4) input[type=text]').val(),
                        SEDField: $row.find('td:eq(5) input[type=text]').val(),

                        UMID: $row.find('td:eq(6) input[type=text]').val(),
                        Dep_SSN: $row.find('td:eq(7) input[type=text]').val(),
                        m: $row.find('td:eq(8) input[type=text]').val(),
                        s: $row.find('td:eq(9) input[type=text]').val(),
                        c: $row.find('td:eq(10) input[type=text]').val(),
                        d: $row.find('td:eq(11) input[type=text]').val(),
                        Ooa: $row.find('td:eq(12) input[type=text]').val(),
                        P: $row.find('td:eq(13) input[type=text]').val(),
                        M: $row.find('td:eq(14) input[type=text]').val(),
                        wv: $row.find('td:eq(15) input[type=text]').val(),
                        H: $row.find('td:eq(16) input[type=text]').val(),
                        T: $row.find('td:eq(17) input[type=text]').val(),
                        Mr: $row.find('td:eq(18) input[type=text]').val(),
                        GRP: $row.find('td:eq(19) input[type=text]').val(),
                        CL: $row.find('td:eq(20) input[type=text]').val(),
                        LOCK: $row.find('td:eq(21) input[type=text]').val(),

                    });

                });
                rows1.shift();

                $('#TabMriDetails2 tbody tr').each(function (i, n) {
                    var $row = $(n);
                    rows2.push({
                        First_name: $row.find('td:eq(0) input[type=text]').val(),
                        a: $row.find('td:eq(1) input[type=text]').val(),
                        rl: $row.find('td:eq(2) input[type=text]').val(),
                        Birth_date: $row.find('td:eq(3) input[type=text]').val(),

                        COCField: $row.find('td:eq(4) input[type=text]').val(),
                        SEDField: $row.find('td:eq(5) input[type=text]').val(),

                        UMID: $row.find('td:eq(6) input[type=text]').val(),
                        Dep_SSN: $row.find('td:eq(7) input[type=text]').val(),
                        m: $row.find('td:eq(8) input[type=text]').val(),
                        s: $row.find('td:eq(9) input[type=text]').val(),
                        c: $row.find('td:eq(10) input[type=text]').val(),
                        d: $row.find('td:eq(11) input[type=text]').val(),
                        Ooa: $row.find('td:eq(12) input[type=text]').val(),
                        P: $row.find('td:eq(13) input[type=text]').val(),
                        M: $row.find('td:eq(14) input[type=text]').val(),
                        wv: $row.find('td:eq(15) input[type=text]').val(),
                        H: $row.find('td:eq(16) input[type=text]').val(),
                        T: $row.find('td:eq(17) input[type=text]').val(),
                        Mr: $row.find('td:eq(18) input[type=text]').val(),
                        GRP: $row.find('td:eq(19) input[type=text]').val(),
                        CL: $row.find('td:eq(20) input[type=text]').val(),
                        LOCK: $row.find('td:eq(21) input[type=text]').val(),
                    });

                });
                rows2.shift();
            }


            else {
                $('#TabMriDetails1 tbody tr').each(function (i, n) {
                    var $row = $(n);
                    rows1.push({
                        First_name: $row.find('td:eq(0) input[type=text]').val(),
                        a: $row.find('td:eq(1) input[type=text]').val(),
                        rl: $row.find('td:eq(2) input[type=text]').val(),
                        Birth_date: $row.find('td:eq(3) input[type=text]').val(),
                        Meff: $row.find('td:eq(4) input[type=text]').val(),
                        MCAN: $row.find('td:eq(5) input[type=text]').val(),
                        UMID: $row.find('td:eq(6) input[type=text]').val(),
                        SSN: $row.find('td:eq(7) input[type=text]').val(),

                        m: $row.find('td:eq(8) input[type=text]').val(),
                        s: $row.find('td:eq(9) input[type=text]').val(),
                        c: $row.find('td:eq(10) input[type=text]').val(),
                        d: $row.find('td:eq(11) input[type=text]').val(),
                        Ooa: $row.find('td:eq(12) input[type=text]').val(),
                        P: $row.find('td:eq(13) input[type=text]').val(),
                        M: $row.find('td:eq(14) input[type=text]').val(),
                        wv: $row.find('td:eq(15) input[type=text]').val(),
                        H: $row.find('td:eq(16) input[type=text]').val(),
                        T: $row.find('td:eq(17) input[type=text]').val(),
                        Mr: $row.find('td:eq(18) input[type=text]').val(),
                        GRP: $row.find('td:eq(19) input[type=text]').val(),
                        CL: $row.find('td:eq(20) input[type=text]').val(),
                        LOCK: $row.find('td:eq(21) input[type=text]').val(),

                    });

                });
                rows1.shift();

                $('#TabMriDetails2 tbody tr').each(function (i, n) {
                    var $row = $(n);
                    rows2.push({
                        First_name: $row.find('td:eq(0) input[type=text]').val(),
                        a: $row.find('td:eq(1) input[type=text]').val(),
                        rl: $row.find('td:eq(2) input[type=text]').val(),
                        Birth_date: $row.find('td:eq(3) input[type=text]').val(),
                        Meff: $row.find('td:eq(4) input[type=text]').val(),
                        MCAN: $row.find('td:eq(5) input[type=text]').val(),
                        Last_Name: $row.find('td:eq(6) input[type=text]').val(),
                        Dep_SSN: $row.find('td:eq(7) input[type=text]').val(),

                        m: $row.find('td:eq(8) input[type=text]').val(),
                        s: $row.find('td:eq(9) input[type=text]').val(),
                        c: $row.find('td:eq(10) input[type=text]').val(),
                        d: $row.find('td:eq(11) input[type=text]').val(),
                        Ooa: $row.find('td:eq(12) input[type=text]').val(),
                        P: $row.find('td:eq(13) input[type=text]').val(),
                        M: $row.find('td:eq(14) input[type=text]').val(),
                        wv: $row.find('td:eq(15) input[type=text]').val(),
                        H: $row.find('td:eq(16) input[type=text]').val(),
                        T: $row.find('td:eq(17) input[type=text]').val(),
                        Mr: $row.find('td:eq(18) input[type=text]').val(),
                        GRP: $row.find('td:eq(19) input[type=text]').val(),
                        CL: $row.find('td:eq(20) input[type=text]').val(),
                        LOCK: $row.find('td:eq(21) input[type=text]').val(),

                    });

                });
                rows2.shift();
            }

            rows1[1] = rows2[0];
            rows1[2] = rows2[1];
            rows1[3] = rows2[2];
            rows1[4] = rows2[3];
            rows1[5] = rows2[4];
            rows1[6] = rows2[5];
            rows1[7] = rows2[6];
            mriDetaildto = encodeJson(rows1);
            data = encodeJson(data);
            $('#divMainPage').addClass("hide");
            $('#divProcess').removeClass("hide");
            $.ajax({
                type: 'POST',
                url: '../ControlLine/LoadPartialViewUpdateMRI',
                data: {
                    controlLine: controlList,
                    strMRIDto: data,
                    strMRIDetailDto: mriDetaildto,
                },
                cache: false,
                success: function (data) {

                    $('#divMainPage').removeClass("hide");
                    $('#divProcess').hide();// ;addClass("hide");
                    $('#divMainPage').addClass("page-layout");
                    $('#divPartialView').html(data);
                    $('#divMainPage').removeClass("hide");
                },
                error: function (jqXHR, exception) {

                }

            });
        }

    }

    function MRUData(controlList) {

        var MRLN = typeof ($('#MRIDto_MRLN').val()) == "undefined" ? $('#MRIDto_MRLN').text() : $('#MRIDto_MRLN').val();
        var DynamicbirthDate = typeof ($('#MRIDto_DynamicbirthDate').val()) == "undefined" ? $('#MRIDto_DynamicbirthDate').text() : $('#MRIDto_DynamicbirthDate').val();
        var MEFFDynamic = typeof ($('#MRIDto_MEFFDynamic').val()) == "undefined" ? $('#MRIDto_MEFFDynamic').text() : $('#MRIDto_MEFFDynamic').val();

        var MCANDynamic = typeof ($('#MRIDto_MCANDynamic').val()) == "undefined" ? $('#MRIDto_MEFFDynamic').text() : $('#MRIDto_MCANDynamic').val();

        var DynamicMCHeading = typeof ($('#MRIDto_DynamicMCHeading').val()) == "undefined" ? $('#MRIDto_DynamicMCHeading').text() : $('#MRIDto_DynamicMCHeading').val();
        var DynamicMCText = typeof ($('#MRIDto_DynamicMCText').val()) == "undefined" ? $('#MRIDto_DynamicMCText').text() : $('#MRIDto_DynamicMCText').val();
        var OED = typeof ($('#MRIDto_OED').val()) == "undefined" ? $('#MRIDto_OED').text() : $('#MRIDto_OED').val();
        var SED = typeof ($('#MRIDto_SED').val()) == "undefined" ? $('#MRIDto_SED').text() : $('#MRIDto_SED').val();
        var COC = typeof ($('#MRIDto_COC').val()) == "undefinedd" ? $('#MRIDto_COC').text() : $('#MRIDto_COC').val();
        var DynamicAddressHeading = typeof ($('#MRIDto_DynamicAddressHeading').val()) == "undefined" ? $('#MRIDto_DynamicAddressHeading').text() : $('#MRIDto_DynamicAddressHeading').val();
        var Address1 = typeof ($('#MRIDto_Address1').val()) == "undefined" ? $('#MRIDto_Address1').text() : $('#MRIDto_Address1').val();
        var Address2 = typeof ($('#MRIDto_Address2').val()) == "undefined" ? $('#MRIDto_Address2').text() : $('#MRIDto_Address2').val();
        var DynamicCity = typeof ($('#MRIDto_DynamicCity').val()) == "undefined" ? $('#MRIDto_MEFFDynamic').text() : $('#MRIDto_MEFFDynamic').val();
        var DynamicState = typeof ($('#MRIDto_DynamicState').val()) == "undefined" ? $('#MRIDto_DynamicState').text() : $('#MRIDto_DynamicState').val();
        var DynamicCountry = typeof ($('#MRIDto_DynamicCountry').val()) == "undefined" ? $('#MRIDto_DynamicCountry').text() : $('#MRIDto_DynamicCountry').val();
        var DynamicZip = typeof ($('#MRIDto_DynamicZip').val()) == "undefined" ? $('#MRIDto_DynamicZip').text() : $('#MRIDto_DynamicZip').val();
        var Freetext = typeof ($('#MRIDto_Freetext').val()) == "undefined" ? $('#MRIDto_Freetext').text() : $('#MRIDto_Freetext').val();
        var DynamicEmpNo = typeof ($('#MRIDto_DynamicEmpNo').val()) == "undefined" ? $('#MRIDto_DynamicEmpNo').text() : $('#MRIDto_DynamicEmpNo').val();
        var DynamicBR = typeof ($('#MRIDto_DynamicBR').val()) == "undefined" ? $('#MRIDto_DynamicBR').text() : $('#MRIDto_DynamicBR').val();
        var Grp = typeof ($('#MRIDto_Grp').val()) == "undefined" ? $('#MRIDto_Grp').text() : $('#MRIDto_Grp').val();
        var Cl = typeof ($('#MRIDto_Cl').val()) == "undefined" ? $('#MRIDto_Cl').text() : $('#MRIDto_Cl').val();
        var Cov = typeof ($('#MRIDto_Cov').val()) == "undefined" ? $('#MRIDto_MEFFDynamic').text() : $('#MRIDto_Cov').val();
        var Rein = typeof ($('#MRIDto_Rein').val()) == "undefined" ? $('#MRIDto_Rein').text() : $('#MRIDto_Rein').val();
        var Tr = typeof ($('#MRIDto_Tr').val()) == "undefined" ? $('#MRIDto_Tr').text() : $('#MRIDto_Tr').val();
        var Rel_lt = typeof ($('#MRIDto_Rel_lt').val()) == "undefined" ? $('#MRIDto_Rel_lt').text() : $('#MRIDto_Rel_lt').val();
        var Rel_dt = typeof ($('#MRIDto_Rel_dt').val()) == "undefined" ? $('#MRIDto_Rel_dt').text() : $('#MRIDto_Rel_dt').val();
        var Dec_dt = typeof ($('#MRIDto_Dec_dt').val()) == "undefined" ? $('#MRIDto_Dec_dt').text() : $('#MRIDto_Dec_dt').val();
        var Vip = typeof ($('#MRIDto_Vip').val()) == "undefined" ? $('#MRIDto_Vip').text() : $('#MRIDto_Vip').val();
        var Correspondent = typeof ($('#MRIDto_Correspondent').val()) == "undefined" ? $('#MRIDto_Correspondent').text() : $('#MRIDto_Correspondent').val();
        var Micro_dt = typeof ($('#MRIDto_Micro_dt').val()) == "undefined" ? $('#MRIDto_Micro_dt').text() : $('#MRIDto_Micro_dt').val();
        var Hire_dt = typeof ($('#MRIDto_Hire_dt').val()) == "undefined" ? $('#MRIDto_Hire_dt').text() : $('#MRIDto_Hire_dt').val();

        Model =
           {
               MRLN: MRLN,
               DynamicbirthDate: DynamicbirthDate,
               MEFFDynamic: MEFFDynamic,
               MCANDynamic: MCANDynamic,
               DynamicMCHeading: DynamicMCHeading,
               DynamicMCText: DynamicMCText,
               OED: OED,
               SED: SED,
               COC: COC,
               DynamicAddressHeading: DynamicAddressHeading,
               Address1: Address1,
               Address2: Address2,
               DynamicCity: DynamicCity,
               DynamicState: DynamicState,
               DynamicCountry: DynamicCountry,
               DynamicZip: DynamicZip,
               Freetext: Freetext,
               DynamicEmpNo: DynamicEmpNo,
               DynamicBR: DynamicBR,
               Grp: Grp,
               Cl: Cl,
               Cov: Cov,
               Rein: Rein,
               Tr: Tr,
               Rel_lt: Rel_lt,
               Rel_dt: Rel_dt,
               Dec_dt: Dec_dt,
               Vip: Vip,
               Correspondent: Correspondent,
               Micro_dt: Micro_dt,
               Hire_dt: Hire_dt

           };
        return Model;
    }

    function loadPartialViewPXU(controlList) {

        var data = encodeJson(PXUData(controlList));
        var pxiDetaildto = '';
        var rows = [];
        $('#TabPxiDetails tbody tr').each(function (i, n) {
            var $row = $(n);
            rows.push({
                Taxonomy: $row.find('td:eq(0) input[type=text]').val(),
                Npi: $row.find('td:eq(1) input[type=text]').val(),
                Zipcode: $row.find('td:eq(2) input[type=text]').val(),
                Zipcode_ind1: $row.find('td:eq(3) input[type=text]').val(),
                Zipcode2: $row.find('td:eq(4) input[type=text]').val(),
                Zipcode_ind2: $row.find('td:eq(5) input[type=text]').val(),
                Lob: $row.find('td:eq(6) input[type=text]').val(),
            });

        });

        rows.shift();  // first row will be empty - so remove
        pxiDetaildto = encodeJson(rows);

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewUpdatePXI',
            data: {
                controlLine: controlList,
                strPXIDto: data,
                strPXIDetailDto: pxiDetaildto,
            },
            cache: false,
            success: function (data) {

                $('#divMainPage').removeClass("hide");
                $('#divProcess').hide();// ;addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('#divMainPage').removeClass("hide");
            },
            error: function (jqXHR, exception) {

            }
        });
    }

    function PXUData(controlList) {

        var Updt_Date = $('#PXIDto_Updt_Date').val();
        var Updt_Id = $('#PXIDto_Updt_Id').val();
        var Taxonomy10 = $('#PXIDto_Taxonomy10').val();
        var Zipcode10 = $('#PXIDto_Zipcode10').val();
        var zip_ind10 = $('#PXIDto_zip_ind10').val();
        var Zipcode20 = $('#PXIDto_Zipcode20').val();
        var zip_ind20 = $('#PXIDto_zip_ind20').val();

        Model =
           {
               Updt_Date: Updt_Date,
               Updt_Id: Updt_Id,
               Taxonomy10: Taxonomy10,
               Zipcode10: Zipcode10,
               zip_ind10: zip_ind10,
               Zipcode20: Zipcode20,
               zip_ind20: zip_ind20
           };
        return Model;
    }

    function loadPartialViewSNU(controlList) {
        var countSNU = $('#countSNU').val();
        // if (RequiredvalidationSNU() == true && countSNU >= 1) {
        if (countSNU >= 1) {
            var data = encodeJson(SNUData(controlList));
            var sniDetaildto = '';
            var rows = [];
            $('#TabSniDetails tbody tr').each(function (i, n) {
                var $row = $(n);
                rows.push({
                    NTWK: $row.find('td:eq(0) input[type=text]').val(),
                    ST: $row.find('td:eq(1) input[type=text]').val(),
                    UPDATED: $row.find('td:eq(2) input[type=text]').val(),
                    ADJUSTER: $row.find('td:eq(3) input[type=text]').val(),
                    NTNAME: $row.find('td:eq(4) input[type=text]').val(),
                    NTWK2: $row.find('td:eq(5) input[type=text]').val(),
                    ST2: $row.find('td:eq(6) input[type=text]').val(),
                    UPDATED2: $row.find('td:eq(7) input[type=text]').val(),
                    ADJUSTER2: $row.find('td:eq(8) input[type=text]').val(),
                    NTNAME2: $row.find('td:eq(9) input[type=text]').val(),
                });
            });

            rows.shift();  // first row will be empty - so remove
            sniDetaildto = encodeJson(rows);

            $('#divMainPage').addClass("hide");
            $('#divProcess').removeClass("hide");
            $.ajax({
                type: 'POST',
                url: '../ControlLine/LoadPartialViewUpdateSNI',
                data: {
                    controlLine: controlList,
                    strSNIDto: data,
                    strSNIDetailDto: sniDetaildto,
                },
                cache: false,
                success: function (data) {

                    $('#divMainPage').removeClass("hide");
                    $('#divProcess').hide();
                    $('#divMainPage').addClass("page-layout");
                    $('#divPartialView').html(data);
                    $('#divMainPage').removeClass("hide");
                },
                error: function (jqXHR, exception) {
                }

            });
        }
        if (countSNU < 1) {
            var data = encodeJson(SNUData(controlList));
            var sniDetaildto = '';
            var rows = [];
            $('#TabSniDetails tbody tr').each(function (i, n) {
                var $row = $(n);
                rows.push({
                    NTWK: $row.find('td:eq(0) input[type=text]').val(),
                    ST: $row.find('td:eq(1) input[type=text]').val(),
                    UPDATED: $row.find('td:eq(2) input[type=text]').val(),
                    ADJUSTER: $row.find('td:eq(3) input[type=text]').val(),
                    NTNAME: $row.find('td:eq(4) input[type=text]').val(),
                    NTWK2: $row.find('td:eq(5) input[type=text]').val(),
                    ST2: $row.find('td:eq(6) input[type=text]').val(),
                    UPDATED2: $row.find('td:eq(7) input[type=text]').val(),
                    ADJUSTER2: $row.find('td:eq(8) input[type=text]').val(),
                    NTNAME2: $row.find('td:eq(9) input[type=text]').val(),
                });
            });

            rows.shift();  // first row will be empty - so remove
            sniDetaildto = encodeJson(rows);

            $('#divMainPage').addClass("hide");
            $('#divProcess').removeClass("hide");
            $.ajax({
                type: 'POST',
                url: '../ControlLine/LoadPartialViewUpdateSNI',
                data: {
                    controlLine: controlList,
                    strSNIDto: data,
                    strSNIDetailDto: sniDetaildto,
                },
                cache: false,
                success: function (data) {

                    $('#divMainPage').removeClass("hide");
                    $('#divProcess').hide();
                    $('#divMainPage').addClass("page-layout");
                    $('#divPartialView').html(data);
                    $('#divMainPage').removeClass("hide");
                },
                error: function (jqXHR, exception) {
                }

            });
        }
    }

    function SNUData(controlList) {
        var Description = $('#SNIDto_DESCRIPTION').val();
        var Comments = $('#SNIDto_COMMENTS').val();
        var Comments2 = $('#SNIDto_COMMENTS2').val();
        var editSNU = $('#editSNU').val();
        Model =
                    {
                        Description: Description,
                        Comments: Comments,
                        Comments2: Comments2,
                        editSNU: editSNU
                    };
        return Model;
    }

    function loadPartialViewMAI(controlList, firstMai) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewMAI',
            data: {
                controlValue: controlList,
                firstMai: firstMai
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });


    }

    $("#divPartialView").on("click", ".rdlSelectMAI", function (event) {

        var controlLineMss = $("#txtControlText").val().toUpperCase();
        var rdoselVal = $("input[type='radio']:checked").val();
        loadPartialViewMAI(controlLineMss, rdoselVal);
    })

    function loadPartialViewMGI(controlList, firstMgi) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewMGI',
            data: {
                controlValue: controlList,
                firstMgi: firstMgi
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }
        });
    }

    $("#divPartialView").on("click", ".rdlSelectMGI", function (event) {

        var controlLineMss = $("#txtControlText").val().toUpperCase();
        var rdoselVal = $("input[type='radio']:checked").val();
        loadPartialViewMGI(controlLineMss, rdoselVal);
    })

    function loadPartialViewMTI(controlList, firstMti) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'post',
            url: '../ControlLine/LoadPartialViewMTI',
            data: {
                controlValue: controlList,
                firstMti: firstMti
            },
            //dataType: 'html',
            cache: false,
            //contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }
        });
    }

    $("#divPartialView").on("click", ".rdlSelectMTI", function (event) {

        var controlLineMss = $("#txtControlText").val().toUpperCase();
        var rdoselVal = $("input[type='radio']:checked").val();
        loadPartialViewMTI(controlLineMss, rdoselVal);
    })

    function loadPartialViewRSI(controlList, rdoselVal) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewRSI',
            data: {
                controlValue: controlList,
                rdoselVal: rdoselVal
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });


    }

    function loadPartialViewS5PI(controlList, rdoselVal) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewUF5U',
            data: {
                controlValue: controlList,
                rdoselVal: rdoselVal
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });


    }



    function loadPartialViewS6PI(controlList, rdoselVal) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewUF6I',
            data: {
                controlValue: controlList,
                rdoselVal: rdoselVal
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });


    }

    function loadPartialViewXCI(controlList, rdoselVal) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewXCI',
            data: {
                controlValue: controlList,
                rdoselVal: rdoselVal
            },

            cache: false,

            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
                $("#txtControlText").focus();
            }

        });


    }

    $("#divPartialView").on("click", ".rdlSelectRSI", function (event) {

        var controlLineRFI = $("#txtControlText").val().toUpperCase();
        var rdoselVal = $("input[type='radio']:checked").val();
        var dataLine = controlLineRFI.split(",");
        //dataLine[0] = dataLine[0].replace(dataLine[0], "RFI");
        //var controlLine = "";
        //for (var i = 0; i < dataLine.length; i++) {
        //    controlLine = controlLine + dataLine[i] + ",";

        //}
        loadPartialViewRSI(controlLineRFI, rdoselVal);
    })

    $("#divPartialView").on("click", ".rdlSelectS5PI", function (event) {

        var controlLineS5PI = $("#txtControlText").val().toUpperCase();
        var rdoselVal = $("input[type='radio']:checked").val();
        var dataLine = controlLineS5PI.split(",");
        dataLine[0] = dataLine[0].replace(dataLine[0], "UF5U");
        var controlLine = "";
        for (var i = 0; i < dataLine.length; i++) {
            controlLine = controlLine + dataLine[i] + ",";

        }
        loadPartialViewS5PI(controlLine, rdoselVal);
    })
    $("#divPartialView").on("click", ".rdlSelectS6PI", function (event) {

        var controlLineS6PI = $("#txtControlText").val().toUpperCase();
        var rdoselVal = $("input[type='radio']:checked").val();
        var redirectctrl = rdoselVal.split(",");
        var isredirect = "";
        for (var j = 1; j < redirectctrl.length - 1; j++) {
            if (redirectctrl[j].length == 0) {
                isredirect = "false";
            }
        }
        if (isredirect == "false") {
            return false;
        }
        var dataLine = rdoselVal.split(",");
        dataLine[0] = dataLine[0].replace(dataLine[0], "UF6I");
        var controlLine = "";
        for (var i = 0; i < dataLine.length; i++) {
            controlLine = controlLine + dataLine[i] + ",";

        }
        loadPartialViewS6PI(controlLine, rdoselVal);
    })

    $("#divPartialView").on("click", ".rdlSelectXCI", function (event) {
        
        var controlLineXCI = $("#txtControlText").val().toUpperCase();
        var rdoselVal = $("input[type='radio']:checked").val();
        var selid = $("input[type='radio']:checked").prop("id").replace("XCI", "");
        ////controlLineXCI = controlLineXCI
        ////var dataLine = controlLineXCI.split(",");
        ////dataLine[0] = dataLine[0].replace(dataLine[0], "XCI");
        ////loadPartialViewXCI(controlLineXCI, selid);
        ////using new logic for navigating summary to Detail page using dtl_control field from response as control line
        ////issue no: Prod issue:570 && 638 
         var selhdnvalue = $("#hdnXCI" + selid).val();
        controlLineXCI = selhdnvalue;
        loadPartialViewXCI(controlLineXCI, selid);

    })

    function loadPartialViewMSI(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewMSI',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }
        });
    }
    function loadPartialViewCMI(controlList, rdoselVal) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewCMI',
            data: {
                controlValue: controlList,
                rdoseVal: rdoselVal
            },

            cache: false,
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }
        });
    }
    function validateControlEOI(controlValue) {
        if (controlValue.length > 0) {
            var dataLine = controlValue.split(",");
            if (dataLine.length >= 2) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {
                    $('#lblerrormsg').html("Invalid Control Line")
                    return false;
                }
                else {
                    if (dataLine[0] == "EOI") {
                        if (!(/^\d{9}$/.test(dataLine[1]) || /^\d{15}$/.test(dataLine[1]) || /^\d{9}\s{6}$/.test(dataLine[1]))) {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a valid claim number.");
                            return false;
                        }
                        if ((dataLine.length < 3) || ((dataLine.length >= 3) && (/^(\d{9})$/.test(dataLine[2]) == false))) {
                            $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "  should be followed by a 9 digit Member ID suffix");
                            return false;
                        }

                        return true;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    function loadPartialViewMRIPTD(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewMRIPTD',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });


    }

    function loadPartialViewMRICSP(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewMRICSP',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            //async: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });


    }



    function MdiClmSmmryData(sel) {
        var rows = [];
        var selMCS = "-";
        $('#TblMdiClmSmry tbody tr').each(function (i, n) {
            var $row = $(n);
            if (i != 0) {
                if (sel == i) {
                    selMCS = "S";
                }
                else {
                    selMCS = "-";
                }
                rows.push({
                    Sel: selMCS
                });
            }
        });

        return JSON.stringify(rows);
    }

    $("#divPartialView").on("click", ".rdlSelectMDI", function (event) {
        var controlList = $("#controlLine").val().toUpperCase();
        //var dataLine = controlList.split(",");
        var rdoselVal = $("input[type='radio']:checked").val();
        if (typeof (rdoselVal) == "undefined") {
            rdoselVal = "-";
        }
        var claimSummary = MdiClmSmmryData(rdoselVal);

        loadPartialViewMDI(controlList, claimSummary, null);
    });

    $("#divPartialView").on("keydown", ".rdlSelectMDI", function (event) {
        if (event.which == 40) {
            var tabindex = parseInt($(event.target).attr('tabindex')) + 1;
            $(".rdlSelectMDI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 38) {
            var tabindex = parseInt($(event.target).attr('tabindex')) - 1;
            $(".rdlSelectMDI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 37 || event.which == 39) {
            event.preventDefault();
        }

    });

    $("#divPartialView").on("click", ".rdlSelectElig", function (event) {
        var controlList = $("#controlLine").val().toUpperCase();
        var dataLine = controlList.split(",");
        var controlLine = "";
        controlLine = "MRI" + "," + dataLine[1].trim() + "," + dataLine[2];
        MDIpartialViewRedirect(controlLine);
    });

    $("#divPartialView").on("keydown", ".rdlSelectElig", function (event) {

        if (event.which == 40 || event.which == 38 || event.which == 37 || event.which == 39) {
            event.preventDefault();
        }

    });

    $("#divPartialView").on("click", ".rdlSelectHis", function (event) {

        var controlList = $("#controlLine").val().toUpperCase();
        var mdiMhiClmNbr = $("#hdnMdiMhiClmNbr").val();
        var dataLine = controlList.split(",");
        dataLine[0] = dataLine[0].replace(dataLine[0], "MHI");
        dataLine[6] = dataLine[6].replace(dataLine[6], "");
        dataLine[5] = dataLine[5].replace(dataLine[5], mdiMhiClmNbr);
        controlList = dataLine;
        var controlLine = "";
        for (var i = 0; i < controlList.length; i++) {
            controlLine = controlLine + controlList[i] + ",";

        }
        MDIpartialViewRedirect(controlLine);
    });

    $("#divPartialView").on("keydown", ".rdlSelectHis", function (event) {

        if (event.which == 40 || event.which == 38 || event.which == 37 || event.which == 39) {
            event.preventDefault();
        }

    });

    $("#divPartialView").on("click", ".rdlSelectClaim", function (event) {

        var controlList = $("#txtControlText").val().toUpperCase();
        var SelClaimSummary = "S";
        loadPartialViewMDI(controlList, null, SelClaimSummary);

    });

    $("#divPartialView").on("keydown", ".rdlSelectClaim", function (event) {

        if (event.which == 40 || event.which == 38 || event.which == 37 || event.which == 39) {
            event.preventDefault();
        }

    });

    $("#divPartialView").on("click", ".rdlSelectMDIGrid", function (event) {
        var rdoselVal = $("input[type='radio'][name='MDIGrid']:checked").val();
        var controlList = "PDI," + rdoselVal;
        //$('#hdnPdiRedirectFlag').val(false);
        $("#hdnPdiRedirectFlag").val(true);
        MDIpartialViewRedirect(controlList);
    });

    $("#divPartialView").on("click", ".rdlSelectSpInfo", function (event) {
        var controlList = $("#txtControlText").val().toUpperCase();
        var dataLine = controlList.split(",");
        var controlLine = "";
        controlLine = "CWI" + "," + dataLine[1].trim() + "," + dataLine[2].trim() + "," + dataLine[3].trim() + "," + dataLine[4].trim() + ",";
        MDIpartialViewRedirect(controlLine);

    });

    function loadPartialViewMDI(controlList, claimSummaryDtl, calimInfoSmmrySel) {
        var isSummaryScreen = true;
        if (claimSummaryDtl == "" || claimSummaryDtl == null) {
            isSummaryScreen = false;
        }

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewMDI',
            data: {
                controlValue: controlList,
                clmInfoClmSmmrySel: calimInfoSmmrySel,
                ClaimSummary: claimSummaryDtl,
                IsSummaryScreen: isSummaryScreen
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            },
            error: function (jqXHR, exception) {

            }

        });
    }

    function MDIpartialViewRedirect(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialView',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });
    }

    $("#divPartialView").on("click", ".rdlSelectUmid", function (event) {
        //debugger
        var controlList = $("#txtControlText").val().toUpperCase();
        //var controlList = $("#controlLine").val().toUpperCase();
        var dataLine = controlList.split(",");
        //var rdoselVal = $("input[type='radio'][name='UMID']:checked").val();
        var rdoselVal = $("input[type='radio']:checked").val();
        var controlLine = dataLine[0];
        for (var k = 1; k < dataLine.length; k++) {
            if (k == 1) {
                controlLine = controlLine + "," + rdoselVal;
            }
            else {
                controlLine = controlLine + "," + dataLine[k];
            }
        }
        //controlLine = dataLine[0] + "," + rdoselVal;
        loadPartialViewUMID(controlLine);
    });

    $("#divPartialView").on("keydown", ".rdlSelectUmid", function (event) {

        if (event.which == 40) {
            var tabindex = parseInt($(event.target).attr('tabindex')) + 1;
            $(".rdlSelectUmid[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 38) {
            var tabindex = parseInt($(event.target).attr('tabindex')) - 1;
            $(".rdlSelectUmid[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 37 || event.which == 39) {
            event.preventDefault();
        }

    });

    function loadPartialViewUMID(controlList) {
        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewUMIDMSS',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });
    }

    function loadPartialViewISI(controlList, msg) {
        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewISI',
            data: {
                controlValue: controlList,
                msg: msg
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });
    }

    

    function createCookie(controlLine) {
       // var qs = (window.location.search.split("&"))[0].replace("?clientNumber=", "");
        var qs = window.location.search.split("&");
        //var cookieName = "ControlLine" + qs + "=";

        var cookieName = "";
        if (qs.length == 2) {

            if (qs[0].toUpperCase().indexOf("CLIENTNUMBER=") >= 0)
                cookieName = qs[0].toUpperCase().replace("CLIENTNUMBER=", "");
            else
                cookieName = qs[0].toUpperCase().replace("USERID=", "");

            cookieName = cookieName + ":";

            if (qs[1].toUpperCase().indexOf("CLIENTNUMBER=") >= 0)
                cookieName = cookieName + qs[1].toUpperCase().replace("CLIENTNUMBER=", "");
            else
                cookieName = cookieName + qs[1].toUpperCase().replace("USERID=", "");

            cookieName = cookieName.replace("?", "");
        }
        cookieName = "ControlLine" + cookieName + "=";

        controlLine = $.trim(controlLine);
        var controlArr = controlLine.split(',');
        var PNU = "";
        if (controlArr[0].length == 3) {
            PNU = controlArr[0].substr(2, 1);

        }
        else if (controlArr[0].length == 4) {
            PNU = controlArr[0].substr(2, 2);
        }
        else if (controlLine.indexOf("BCOP") == 0 && controlLine.length > 4) {
            controlLst = controlLine.substr(0, 4) + "," + controlLine.substr(4);
            var controlArray = controlLst.split(',');
            if (controlArray[0].length == 4) {
                PNU = controlArray[0].substr(2, 2);
            }
        }

        var cntlnotsave = ["P", "N", "U", "F", "B", "A", ""];
        if (document.cookie.indexOf(cookieName) < 0 && cntlnotsave.indexOf(PNU) < 0) {
            document.cookie = cookieName + controlLine;
        }
        else {
            var controlList = "";
            var isNew = "No";
            var controlStr = "";
            var nameEQ = cookieName;
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                controlStr = $.trim(ca[i]);
                if (controlStr.indexOf(nameEQ) == 0) {
                    controlList = (controlStr.replace(cookieName, "")).split("#$");
                    break;
                }
            }
            if (controlList.length >= 1) {
                for (var j = 0; j < controlList.length; j++) {
                    if (controlLine == controlList[j]) {
                        isNew = "YesAvl";
                        break;
                    }
                    else {
                        isNew = "Yes";
                    }
                }
            }
            if (isNew == "Yes") {
                var substrings = controlStr.split("#$");
                var newcontrolStr = "";
                var len = substrings.length;
                if (len < 10 && cntlnotsave.indexOf(PNU) < 0) {
                    document.cookie = controlStr + "#$" + controlLine;
                }
                else {
                    for (var k = 1; k < len; k++) {
                        newcontrolStr = newcontrolStr + substrings[k] + "#$";
                    }
                    if (cntlnotsave.indexOf(PNU) < 0)
                        document.cookie = cookieName + newcontrolStr + controlLine;
                }
            }
            else if (isNew === "YesAvl") {
                var substrings1 = (controlStr.replace(cookieName, "")).split("#$");
                var newcontrolStr1 = "";
                var len1 = substrings1.length;
                for (var kk = 0; kk < len1; kk++) {
                    if (controlLine !== substrings1[kk])
                        newcontrolStr1 = newcontrolStr1 + substrings1[kk] + "#$";
                }
                document.cookie = cookieName + newcontrolStr1 + controlLine;
            }
        }
    }

    function validateIPItoIPN(controlValue) {

        if (controlValue[0] == "IPI") {
            IPINo = controlValue;
        }
        if (controlValue[0] == "IPN" || controlValue[0] == "IPP") {
            if (IPINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (controlValue[i] != "") {
                        if (IPINo[i] != controlValue[i]) {
                            return false;
                        }
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;
    }

    function validateGNItoGNN(controlValue) {

        if (controlValue[0] == "GNI") {
            GNINo = controlValue;
        }
        if (controlValue[0] == "GNN" || controlValue[0] == "GNP") {
            if (GNINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (controlValue[i] != "") {
                        if (GNINo[i] != controlValue[i]) {
                            return false;
                        }
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;
    }

    function validateELItoELNELP(controlValue) {
        if (controlValue[0] == "ELI") {
            ELINo = controlValue;
            ETIClaimNo = controlValue;
        }
        if (controlValue[0] == "ELN" || controlValue[0] == "ELP") {

            if (ELINo != "") {
                if (ELINo[0] == "ETI") {
                    return false;
                }
                for (var i = 1; i < controlValue.length; i++) {

                    if (controlValue[i] != "") {
                        if (ELINo.length > i) {
                            if (i != 1 && ELINo[i] != controlValue[i] || (i == 1 && ELINo[i].trim() != controlValue[i].trim())) {
                                return false;
                            }
                        }
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;
    }

    function DMItoDMUtoDMN(controlValue) {
        if (controlValue[0] == "DMI") {
            DMIClaimNo = controlValue;
        }

        if (controlValue[0] == "DMU" || controlValue[0] == "DMN" || controlValue[0] == "DMP") {
            var IsRedirect = $('#hdnMPCRedirectFlag').val();
            if (IsRedirect == "true")
                return true;
            if (DMIClaimNo != "") {
                for (var i = 1; i < 3; i++) {
                    if (DMIClaimNo[i] != controlValue[i]) {
                        return false;
                    }
                }
            }
            else {
                return false;
            }
        }
        //if (controlValue[0] == "DMN")
        //    DMIClaimNo = "";
        return true;

    }

    function RequiredvalidationMRI() {
        var Isvalid = true;
        var Msg = "";
        $("#lblerrorMRI").css('color', '#5c9a1b');
        $('.textbox-mri').each(function () {
            var currentval = $(this).val();
            var currentid = $(this).attr("id");

            if (currentid == "item_Dep_SSN" && ($.trim(currentval).length >= 1 && $.trim(currentval).length < 11)) {
                $(this).css('border', '2px solid #8c0108');
                $("#lblerrorMRI").text('Member ID is not in correct format');
                $("#lblerrorMRI").css('color', '#8c0108');
                Isvalid = false;
                return Isvalid;
            }
        });
        if (!Msg == "")
            $("#lblerrorMRI").html(Msg);

        return Isvalid;
    }

    function validateControlCPI(controlValue) {
        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length >= 2) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined' || dataLine[1] === '' || !validateCPItoCPN(controlValue.split(","))) {

                    $('#lblerrormsg').html("Invalid Control Line")
                    return false;
                }
                else {
                    if (dataLine[0] == "CPI" || dataLine[0] == "CPN") {
                        if ((!isNaN(dataLine[1]) && /^(\d{5})$/.test(dataLine[1]) == true) || (isNaN(dataLine[1]) && /^(\w|\s)*$/.test(dataLine[1]) == true)) {
                            return true;
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 5 digit CPT4 ID");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;

    }

    function loadPartialViewPCI(controlList) {
        var dataLine = controlList.split(",");
        var data = encodeJson(PCIdata(controlList));
        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewUpdate_PCI',
            data: {
                controlLine: controlList,
                strpciDTO: data
            },
            cache: false,
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').hide();
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('#divMainPage').removeClass("hide");
                $('.PCIMain').hide();
            },
            error: function (jqXHR, exception) {
            }
        });
    }

    function PCIdata(controlList) {
        ///Provider
        var pcrecnoo = $('#PCIDto_pcrecnoo').text();
        var pcgrpo = $('#PCIDto_pcgrpo').text();
        var pctypeo = $('#PCIDto_pctypeo').text();
        var pcmkto = $('#PCIDto_pcmkto').text();
        var pcdto = $('#PCIDto_pcdto').text();
        var pcadjdo = $('#PCIDto_pcadjdo').text();
        var pcfao = $('#PCIDto_pcfao').val();
        var pcfamao = $('#PCIDto_pcfamao').val();
        //var pcfapto = $('#PCIDto_pcfapto').val();
        var pcfanmo = $('#PCIDto_pcfanmo').val();
        var pcfapoto = $('#PCIDto_pcfapoto').val();
        var pcapo = $('#PCIDto_pcapo').val();
        var pcapmao = $('#PCIDto_pcapmao').val();
        //var pcappto = $('#PCIDto_pcappto').val();
        var pcapnmo = $('#PCIDto_pcapnmo').val();
        var pcappoto = $('#PCIDto_pcappoto').val();
        var pcrpo = $('#PCIDto_pcrpo').val();
        var pcrpmao = $('#PCIDto_pcrpmao').val();
        //var pcrppto = $('#PCIDto_pcrppto').val();
        var pcrpnmo = $('#PCIDto_pcrpnmo').val();
        var pcrppoto = $('#PCIDto_pcrppoto').val();
        var pcppo = $('#PCIDto_pcppo').val();
        var pcppmao = $('#PCIDto_pcppmao').val();
        //var pcpppto = $('#PCIDto_pcpppto').val();
        var pcppnmo = $('#PCIDto_pcppnmo').val();
        var pcpppoto = $('#PCIDto_pcpppoto').val();
        var pcado = $('#PCIDto_pcado').val();
        var pcadnmo = $('#PCIDto_pcadnmo').val();
        //var pcadpto = $('#PCIDto_pcadpto').val();
        var pcadnmo = $('#PCIDto_pcadnmo').val();
        var pcadpoto = $('#PCIDto_pcadpoto').val();
        var pc2oo = $('#PCIDto_pc2oo').val();
        var pc2omao = $('#PCIDto_pc2omao').val();
        //var pc2opto = $('#PCIDto_pc2opto').val();
        var pc2onmo = $('#PCIDto_pc2onmo').val();
        var pc2opoto = $('#PCIDto_pc2opoto').val();
        var pcdiag1o = $('#PCIDto_pcdiag1o').val();
        var pcproc1o = $('#PCIDto_pcproc1o').val();
        var pcdiago = $('#PCIDto_pcdiago').val();
        var pcexpdto = $('#PCIDto_pcexpdto').val();
        var pcdiag2o = $('#PCIDto_pcdiag2o').val();
        var pcproc2o = $('#PCIDto_pcproc2o').val();
        var pcreqdo = $('#PCIDto_pcreqdo').val();
        var pcappro = $('#PCIDto_pcappro').val();
        var pcdiag3o = $('#PCIDto_pcdiag3o').val();
        var pcproc3o = $('#PCIDto_pcproc3o').val();
        var pcparo = $('#PCIDto_pcparo').text();
        var pcappr2do = $('#PCIDto_pcappr2do').val();
        var pcverino = $('#PCIDto_pcverino').val();
        var pcproco = $('#PCIDto_pcproco').val();
        var pcadtdo = $('#PCIDto_pcadtdo').val();
        var pcmic1o = $('#PCIDto_pcmic1o').val();
        var pcmic2o = $('#PCIDto_pcmic2o').val();
        var pcmic3o = $('#PCIDto_pcmic3o').val();
        var pcmic4o = $('#PCIDto_pcmic4o').val();
        var pcmic5o = $('#PCIDto_pcmic5o').val();
        var pcmic6o = $('#PCIDto_pcmic6o').val();
        var pcmic7o = $('#PCIDto_pcmic7o').val();
        var pcmic8o = $('#PCIDto_pcmic8o').val();
        var pcmic9o = $('#PCIDto_pcmic9o').val();
        var pcmic10o = $('#PCIDto_pcmic10o').val();
        var pctxt1o = $('#PCIDto_pctxt1o').val();
        var pctxt2o = $('#PCIDto_pctxt2o').val();
        var pctxt3o = $('#PCIDto_pctxt3o').val();
        var pctxt4o = $('#PCIDto_pctxt4o').val();
        var pcadmao = $('#PCIDto_pcadmao').val();
        var Model =
            {
                //provider
                pcrecnoo: pcrecnoo,
                pcgrpo: pcgrpo,
                pctypeo: pctypeo,
                pcmkto: pcmkto,
                pcdto: pcdto,
                pcadjdo: pcadjdo,
                pcfao: pcfao,
                pcfamao: pcfamao,
                //pcfapto: pcfapto,
                pcfanmo: pcfanmo,
                pcfapoto: pcfapoto,
                pcapo: pcapo,
                pcapmao: pcapmao,
                //pcappto: pcappto,
                pcapnmo: pcapnmo,
                pcappoto: pcappoto,
                pcrpo: pcrpo,
                pcrpmao: pcrpmao,
                //pcrppto: pcrppto,
                pcrpnmo: pcrpnmo,
                pcrppoto: pcrppoto,
                pcppo: pcppo,
                pcppmao: pcppmao,
                //pcpppto: pcpppto,
                pcppnmo: pcppnmo,
                pcpppoto: pcpppoto,
                pcado: pcado,
                pcadnmo: pcadnmo,
                //pcadpto: pcadpto,
                pcadnmo: pcadnmo,
                pcadpoto: pcadpoto,
                pc2oo: pc2oo,
                pc2omao: pc2omao,
                //pc2opto: pc2opto,
                pc2onmo: pc2onmo,
                pc2opoto: pc2opoto,
                pcdiag1o: pcdiag1o,
                pcproc1o: pcproc1o,
                pcdiago: pcdiago,
                pcexpdto: pcexpdto,
                pcdiag2o: pcdiag2o,
                pcproc2o: pcproc2o,
                pcreqdo: pcreqdo,
                pcappro: pcappro,
                pcdiag3o: pcdiag3o,
                pcproc3o: pcproc3o,
                pcparo: pcparo,
                pcappr2do: pcappr2do,
                pcverino: pcverino,
                pcproco: pcproco,
                pcadtdo: pcadtdo,
                pcmic1o: pcmic1o,
                pcmic2o: pcmic2o,
                pcmic3o: pcmic3o,
                pcmic4o: pcmic4o,
                pcmic5o: pcmic5o,
                pcmic6o: pcmic6o,
                pcmic7o: pcmic7o,
                pcmic8o: pcmic8o,
                pcmic9o: pcmic9o,
                pcmic10o: pcmic10o,
                pctxt1o: pctxt1o,
                pctxt2o: pctxt2o,
                pctxt3o: pctxt3o,
                pctxt4o: pctxt4o,
                pcadmao: pcadmao,
                ControlLine: controlList,
                pcctllno: controlList
            };
        return Model;
    }

    $("#divPartialView").on("keydown", ".rdlSelectMSS", function (event) {

        if (event.which == 40) {
            var tabindex = parseInt($(event.target).attr('tabindex')) + 1;
            $(".rdlSelectMSS[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 38) {
            var tabindex = parseInt($(event.target).attr('tabindex')) - 1;
            $(".rdlSelectMSS[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 37 || event.which == 39) {
            event.preventDefault();
        }
        PageLoadCheck();
    });

    $("#divPartialView").on("keydown", ".rdlSelectCNI", function (event) {
        if (event.which == 40) {
            var tabindex = parseInt($(event.target).attr('tabindex')) + 1;
            $(".rdlSelectCNI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 38) {
            var tabindex = parseInt($(event.target).attr('tabindex')) - 1;
            $(".rdlSelectCNI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 37 || event.which == 39) {
            event.preventDefault();
        }
    });

    $("#divPartialView").on("keydown", ".rdlSelectCSI", function (event) {

        if (event.which == 40) {
            var tabindex = parseInt($(event.target).attr('tabindex')) + 1;
            $(".rdlSelectCSI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 38) {
            var tabindex = parseInt($(event.target).attr('tabindex')) - 1;
            $(".rdlSelectCSI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 37 || event.which == 39) {
            var tabindex = parseInt($(event.target).attr('tabindex'));
            $(".rdlSelectCSI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }

    });

    $("#divPartialView").on("keydown", ".rdlSelectXCI", function (event) {

        if (event.which == 40) {
            var tabindex = parseInt($(event.target).attr('tabindex')) + 1;
            $(".rdlSelectXCI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 38) {
            var tabindex = parseInt($(event.target).attr('tabindex')) - 1;
            $(".rdlSelectXCI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 37 || event.which == 39) {
            event.preventDefault();
        }

    });

    $("#divPartialView").on("keydown", ".rdlSelectESI", function (event) {


        if (event.which == 40) {
            var tabindex = parseInt($(event.target).attr('tabindex')) + 1;
            $(".rdlSelectESI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 38) {
            var tabindex = parseInt($(event.target).attr('tabindex')) - 1;
            $(".rdlSelectESI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 37 || event.which == 39) {
            event.preventDefault();
        }
    });

    $("#divPartialView").on("keydown", ".rdlSelectMAI", function (event) {
        if (event.which == 40 || ((event.which == 9 || event.key == "Tab") && !event.shiftKey)) {
            var tabindex = parseInt($(event.target).attr('tabindex')) + 1;
            var radioControls1 = $.find(".rdlSelectMAI[tabindex=" + (tabindex) + "]");
            if (radioControls1.length > 0 || event.which == 40) {
                $(".rdlSelectMAI[tabindex=" + (tabindex) + "]").focus();
                event.preventDefault();
            }
        }
        else if (event.which == 38 || ((event.which == 9 || event.key == "Tab") && event.shiftKey)) {
            var tabindex = parseInt($(event.target).attr('tabindex')) - 1;
            var radioControls2 = $.find(".rdlSelectMAI[tabindex=" + (tabindex) + "]");
            if (radioControls2.length > 0 || event.which == 38) {
                $(".rdlSelectMAI[tabindex=" + (tabindex) + "]").focus();
                event.preventDefault();
            }
        }

        else if (event.which == 37 || event.which == 39) {
            event.preventDefault();
        }

    });

    $("#divPartialView").on("keydown", ".rdlSelectMGI", function (event) {
        if (event.which == 40 || ((event.which == 9 || event.key == "Tab") && !event.shiftKey)) {
            var tabindex = parseInt($(event.target).attr('tabindex')) + 1;
            var radioControls1 = $.find(".rdlSelectMGI[tabindex=" + (tabindex) + "]");
            if (radioControls1.length > 0 || event.which == 40) {
                $(".rdlSelectMGI[tabindex=" + (tabindex) + "]").focus();
                event.preventDefault();
            }
        }
        else if (event.which == 38 || ((event.which == 9 || event.key == "Tab") && event.shiftKey)) {
            var tabindex = parseInt($(event.target).attr('tabindex')) - 1;
            var radioControls2 = $.find(".rdlSelectMGI[tabindex=" + (tabindex) + "]");
            if (radioControls2.length > 0 || event.which == 38) {
                $(".rdlSelectMGI[tabindex=" + (tabindex) + "]").focus();
                event.preventDefault();
            }
        }
        else if (event.which == 37 || event.which == 39) {
            event.preventDefault();
        }
    });

    $("#divPartialView").on("keydown", ".rdlSelectRSI", function (event) {
        if (event.which == 40) {
            var tabindex = parseInt($(event.target).attr('tabindex')) + 1;
            $(".rdlSelectRSI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 38) {
            var tabindex = parseInt($(event.target).attr('tabindex')) - 1;
            $(".rdlSelectRSI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 37 || event.which == 39) {
            event.preventDefault();
        }

    });

    $("#divPartialView ").on("keydown", ".rdlSelectMTI, .rdlSelectMHIAPI, .rdlSelectMDIGrid", function (event) {


        if (event.which == 40 || ((event.which == 9 || event.key == "Tab") && !event.shiftKey)) {
            var tabindex = -1;
            var classes = $(event.target).attr('class').split(" ");
            if (/tabableRadio/.test(classes[1])) {
                tabindex = parseInt(classes[1].replace("tabableRadio", "")) + 1;
            }
            var radioBtn1 = $(this).closest(".tabableContent").find(".tabableRadio" + tabindex + ":first");
            if (radioBtn1.length > 0 || event.which == 40) {
                $(this).closest(".tabableContent").find(".tabableRadio" + tabindex + ":first").focus();
                event.preventDefault();
            }
        }
        else if (event.which == 38 || ((event.which == 9 || event.key == "Tab") && event.shiftKey)) {
            var tabindex = -1;
            var classes = $(event.target).attr('class').split(" ");
            if (/tabableRadio/.test(classes[1])) {
                tabindex = parseInt(classes[1].replace("tabableRadio", "")) - 1;
            }
            var radioBtn2 = $(this).closest(".tabableContent").find(".tabableRadio" + tabindex + ":first");
            if (radioBtn2.length > 0 || event.which == 38) {
                $(this).closest(".tabableContent").find(".tabableRadio" + tabindex + ":first").focus();
                event.preventDefault();
            }
        }
        else if (event.which === 39 || event.which === 37) {
            event.preventDefault();
        }
    });

    function MSStoMHI(controlList) {
        //var MHIDataLine = $.trim($("#txtControlText").val().toUpperCase());
        var MHIDataLine = controlList;
        var controlLine = MHIDataLine.split(',');
        if ($("#hdnMHIcntLine").val() != null) {
            var prevcntline = $("#hdnMHIcntLine").val().split(',');
            if (controlLine[0] == "MHI") {
                if (prevcntline.length >= 4) {
                    for (var i = 1; i <= 4; i++) {
                        if (prevcntline[i] != controlLine[i])
                            isMSSRequired = "true";
                    }
                }

            }
        }
        var controlLineMHI = controlLine[0];
        if (MHISuffixVal.indexOf(",") == 0)
            MHISuffixVal = "";
        //commented below logic of replacing suffix value of
        //new control line with older one
        //UAT Defect#358520
        //controlLine[2] = controlLine[2].replace(controlLine[2], MHISuffixVal);

        if (MHISuffixVal != controlLine[2])
            isMSSRequired = "true";

        for (var i = 1; i < controlLine.length; i++) {
            controlLineMHI = controlLineMHI + "," + controlLine[i];
        }
         loadPartialViewMHI(controlLineMHI, false, isMSSRequired);
    }

    function RGMtoRGI() {

        var RGIDataLine = $.trim($("#txtControlText").val().toUpperCase());
        var clientnbr = $.trim($("#txtClient").val());
        var rulenbr = $.trim($("#txtRuleNbr").val());
        var businesscd = $.trim($("#txtBusinessCd").val());
        var consolmkt = $.trim($("#txtConsolMkt").val());
        var basemkt = $.trim($("#txtBaseMkt").val());
        var group = $.trim($("#txtGroup").val());
        var grouper = $.trim($("#txtGrouper").val());
        var pcpind = $.trim($("#txtPcpInd").val());
        var effdt = $.trim($("#txtEffDt").val());
        var controlLine = RGIDataLine.split(',');
        var controlLineRGI = controlLine[0];
        //if ((clientnbr != "" && clientnbr != "--") && (rulenbr != "" && rulenbr != "------"))
        //{
        //    $('#lblerrormsg').html("Please enter either Client Number or Rule Number");
        //}
        //else 
        if (clientnbr != "" && clientnbr != "--") {
            controlLine[1] = clientnbr;
        }
        else if (rulenbr != "" && rulenbr != "------") {
            controlLine[1] = rulenbr;
        }
        if (businesscd != "" && businesscd != "--") {
            controlLine[2] = businesscd;
        }
        if (consolmkt != "" && consolmkt != "-----") {
            controlLine[3] = consolmkt;
        }
        if (basemkt != "" && basemkt != "-----") {
            controlLine[4] = basemkt;
        }
        if (group != "" && group != "------") {
            controlLine[5] = group;
        }
        if (grouper != "" && grouper != "--------") {
            controlLine[6] = grouper;
        }
        if (pcpind != "" && pcpind != "---------") {
            controlLine[7] = pcpind;
        }
        if (effdt != "" && effdt != "--/--/----") {
            var Date_split = effdt.split('/');
            var mm = Date_split[0];
            var dd = Date_split[1];
            var yyyy = Date_split[2];
            controlLine[8] = yyyy + mm + dd;
        }
        for (var i = 1; i < controlLine.length; i++) {
            if (controlLine[i] === '' || controlLine[i] === null || typeof controlLine[i] === 'undefined') {
                controlLine[i] = "";
            }
            controlLineRGI = controlLineRGI + "," + controlLine[i];
        }
        if (controlLineRGI != "RGI," && controlLineRGI != "RGI") {
            if (controlLineRGI != "RGI,58" && controlLineRGI != "RGI,57" && controlLine[1].length >= 2) {
                if (controlLine[1].length == 6 && (/^[a-zA-Z0-9]*$/.test(controlLine[1])) === true) {
                    loadPartialViewRGMToRGI(controlLineRGI);
                }

                else if (controlLine[2] == '' && controlLine[3] == '' && controlLine[4] == '' && controlLine[5] == '' && controlLine[6] == '' && controlLine[7] == '' && controlLine[8] == '' && controlLine[9] == '' && controlLine.length == 10) {
                    loadPartialViewRGMToRGI(controlLineRGI);
                }
                else if (controlLine[2] == '' && controlLine[3] == '' && controlLine[4] == '' && controlLine[5] == '' && controlLine[6] == '' && controlLine[7] == '' && controlLine[8] == '' && controlLine.length == 9) {
                    loadPartialViewRGMToRGI(controlLineRGI);
                }
                else if (controlLine[2] == '' && controlLine[3] == '' && controlLine[4] == '' && controlLine[5] == '' && controlLine[6] == '' && controlLine[7] == '' && controlLine.length == 8) {
                    loadPartialViewRGMToRGI(controlLineRGI);
                }
                else if (controlLine[2] == '' && controlLine[3] == '' && controlLine[4] == '' && controlLine[5] == '' && controlLine[6] == '' && controlLine.length == 7) {
                    loadPartialViewRGMToRGI(controlLineRGI);
                }
                else if (controlLine[2] == '' && controlLine[3] == '' && controlLine[4] == '' && controlLine[5] == '' && controlLine.length == 6) {
                    loadPartialViewRGMToRGI(controlLineRGI);
                }
                else if (controlLine[2] == '' && controlLine[3] == '' && controlLine[4] == '' && controlLine.length == 5) {
                    loadPartialViewRGMToRGI(controlLineRGI);
                }
                else if (controlLine[2] == '' && controlLine[3] == '' && controlLine.length == 4) {
                    loadPartialViewRGMToRGI(controlLineRGI);
                }
                else if (controlLine[2] == '' && controlLine.length == 3) {
                    loadPartialViewRGMToRGI(controlLineRGI);
                }



                else {
                    loadPartialViewRGM(controlLineRGI);
                }
            }
            else {
                loadPartialViewRGMToRGI(controlLineRGI);
            }
        }
        else if (controlLineRGI == "RGI") {
            loadPartialView(controlLineRGI);
        }
        else {
            loadPartialViewRGM(controlLineRGI);
        }
    }

    function validateCPItoCPN(controlValue) {

        if (controlValue[0] == "CPI") {
            CPINo = controlValue;
        }
        if (controlValue[0] == "CPN") {
            if (CPINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (controlValue[i] != "") {
                        if (CPINo[i] != controlValue[i]) {
                            return false;
                        }
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;
    }

    function validateCNItoCNN(controlValue) {

        if (controlValue[0] == "CNI") {
            CNINo = controlValue;
        }
        if (controlValue[0] == "CNN" || controlValue[0] == "CNP") {
            if (CNINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (controlValue[i] != "") {
                        if (CNINo[i] != controlValue[i]) {
                            return false;
                        }
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;
    }

    function validateCSItoCSN(controlValue) {
        var IPIToCSI = $('#hdnIpiRedirectFlag').val();
        var ISIToCSI = $('#hdnIsiRedirectFlag').val();
        var PSIToCSI = $('#hdnPsiRedirectFlag').val();
        var Csiredirected = $("#hdnCsiRedirectFlag").val();
        if ((Csiredirected != undefined) && (Csiredirected === "true")) {
            controlValue[0] = "CSI";
        }

        if (controlValue[0] == "CSI") {
            CSINo = controlValue;
        }
        else if (IPIToCSI == "true" || ISIToCSI == "true" || PSIToCSI == "true") {
            CSINo = controlValue;
        }

        if ((controlValue[0] == "CSN" || controlValue[0] == "CNS") && IPIToCSI == "false") {
            if (CSINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (controlValue[i] != "") {
                        if (CSINo[i] != controlValue[i]) {
                            return false;
                        }
                    }
                }
            }
            else {
                return false;
            }
        }
        else if (IPIToCSI == "true" || ISIToCSI == "true") {

            return true;
        }
        return true;
    }

    function ValidateControlLineMSI(controlValue) {

        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                    if (dataLine[0] == "MSI" || dataLine[0] == "MSN") {
                        if (dataLine.length > 1) {
                            if (dataLine.length == 2 || (dataLine.length == 3 && dataLine[2] == "")) {
                                if (!/^H(\d{8})$/.test(dataLine[1])) {
                                    if (/^(\d{9})$/.test(dataLine[1]) === false) {
                                        $('#lblerrormsg').html(dataLine[0] + "  should be followed by UMID or a 9 digit numeric Member ID ");
                                        return false;
                                    }
                                    else
                                        $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "  should be followed by a 1 digit alphanumeric suffix ");
                                    return false;
                                }
                                else return true;
                            }
                            if ((/^H(\d{8})$/.test(dataLine[1]) || /^(\d{9})$/.test(dataLine[1]))) {
                                if (dataLine.length > 2 && ((dataLine[2].length == 1 && AlphaNumericRegExp(dataLine[2], false)) || dataLine[2] == "")){
                                    if (!(dataLine.length == 3 && dataLine[2] == "")) {
                                    if (dataLine.length > 3 && dataLine[3].length >= 1) {
                                        if (dataLine.length > 4 && dataLine[4].length == 2) {
                                            return true;
                                        }
                                        else {
                                            $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "," + "  should be followed by 2 character Relationship.");
                                            return false;
                                        }
                                    }
                                    else {
                                        $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + "  should be followed by First Name");
                                        return false;
                                    }
                                }
                                return true;
                                }
                                else {
                                    $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + "  should be followed by a 1 digit alphanumeric suffix");
                                    return false;
                                }
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by UMID or a 9 digit numeric Member ID ");
                                return false;
                            }
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should not be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    function ValidateControlLineMDI(controlValue) {

        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                    if (dataLine[0] == "MDI" || dataLine[0] == "MDN" || dataLine[0] == "MDP") {
                        if (dataLine.length > 1) {
                            if (dataLine.length == 2 || (dataLine.length == 3 && dataLine[2] == "")) {
                                if (!/^H(\d{8})$/.test(dataLine[1])) {
                                    if (/^(\d{9})$/.test(dataLine[1]) === false) {
                                        $('#lblerrormsg').html(dataLine[0] + "  should be followed by UMID or a 9 digit numeric Member ID ");
                                        return false;
                                    }
                                    else
                                    $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "  should be followed by First Name");
                                    return false;
                                }
                                else return true;
                            }
                            if (dataLine.length < 2 || (/^(\d{9})$/.test(dataLine[1]) === false)) {
                                if (!/^H(\d{8})$/.test(dataLine[1])) {
                                    $('#lblerrormsg').html(dataLine[0] + "  should be followed by UMID or a 9 digit numeric Member ID ");
                                    return false;
                                }
                            }
                            if ((dataLine.length < 3) || (dataLine[2] != null && (AlphaNumericRegExp(dataLine[2], false) === false))) {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "  should be followed by a 1 digit alphanumeric suffix ");
                                return false;
                            }
                            if ((dataLine.length < 4) || (dataLine[3] != null && (/^(\s)*$/).test(dataLine[3]) === true)) {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "  should be followed by First Name");
                                return false;
                            }
                            if ((dataLine.length < 5) || (dataLine[4] != null && (/^([A-Z]{2})$/).test(dataLine[4]) === false)) {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "  should be followed by 2 character Relationship.");
                                return false;
                            }
                            if ((dataLine.length <= 6 || (dataLine[5].length <= 15)) && typeof dataLine[5] != 'undefined') {
                                if (dataLine[5].length == 4 || dataLine[5].length == 9 || dataLine[5].length == 15) {
                                    if (dataLine[5].length == 4 && (dataLine[5] != null && (/^(\d{2}|1[0-2])(\d{2})$/).test(dataLine[5]) === false)) {
                                        $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "," + dataLine[4] + "  should be followed by a 4 digit MMYY");
                                        return false;
                                    }
                                    else if ((dataLine[5].length == 9 || dataLine[5].length == 15) && !(/^(\d{9})$/.test(dataLine[5]) || /^(\d{15})$/.test(dataLine[5]) || /^\d{9}\s{6}$/.test(dataLine[5]))) {
                                        $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "," + dataLine[4] + "  should be followed by a valid Claim Number");
                                        return false;
                                    }
                                }
                                else {
                                    $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "," + dataLine[4] + "  should be followed by a valid claim number or 4 digit MMYY");
                                    return false;
                                }
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "," + dataLine[4] + "  should be followed by a valid claim number or 4 digit MMYY");
                                return false;
                            }
                            if ((dataLine.length == 7) && dataLine[6].trim() != "" && dataLine[6] != "C") {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "," + dataLine[4] + "," + dataLine[5] + "  should be followed by C");
                                return false;
                            }
                            return true;
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Member ID ");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    function ValidateControlLineXCI(controlValue) {

        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                if (dataLine.length < 9 && dataLine.length > 5 && typeof dataLine[7] != 'undefined') {
                    if (dataLine[7].length == 0) {
                        $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "," + dataLine[4] + "  should be followed by a valid Claim Number");
                        return false;
                    }
                    else return true;
                }
                if (dataLine[0] == "XCI" || dataLine[0] == "XCN" || dataLine[0] == "XCP"
                    || dataLine[0] == "XHI" || dataLine[0] == "XHN" || dataLine[0] == "XHP"
                    || dataLine[0] == "XRI" || dataLine[0] == "XRN" || dataLine[0] == "XRP") {

                    if (dataLine.length > 1) {
                        return true;
                    }

                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    function ValidateControlRGIRGM(controlValue) {
        if (controlValue.length > 0) {
            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                    if (dataLine[0] == "RGI" || dataLine[0] == "RGN" || dataLine[0] == "RGA" || dataLine[0] == "RGU" || dataLine[0] == "RGP") {
                        if (dataLine.length > 1) {
                            if (dataLine[1].length == 0) {
                                return true;
                            }
                            if (/^[a-zA-Z0-9]*$/.test(dataLine[1]) == true) {
                                return true;
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a Valid Client / Rule Number");
                                return false;
                            }

                        }
                        else {
                            return true;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    function ValidateControlLineRFI(controlValue) {

        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                    if (dataLine[0] == "RFI" || dataLine[0] == "RFN" || dataLine[0] == "RFP" || dataLine[0] == "RFA" || dataLine[0] == "RFU") { //RFI changes
                        if (dataLine.length > 1) {
                            if (/^H(\d{8})$/.test(dataLine[1]) || /^(\d{9})$/.test(dataLine[1]) == true) {
                                return true;
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by UMID or a 9 digit numeric Member ID ");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by UMID or a 9 digit numeric Member ID ");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    function ValidateControlLineRSI(controlValue) {

        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                    if (dataLine[0] == "RSI" || dataLine[0] == "RSN" || dataLine[0] == "RSP") {
                        if (dataLine.length > 1) {
                            if (/^H(\d{8})$/.test(dataLine[1]) || /^(\d{9})$/.test(dataLine[1]) == true) {
                                return true;
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by UMID or a 9 digit numeric Member ID ");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Member ID ");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    function ValidateControlLinePRI(controlValue) {

        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                    if (dataLine[0] == "PRI" || dataLine[0] == "PRN" || dataLine[0] == "PRP" || dataLine[0] == "PRU") {
                        if (dataLine.length > 1) {
                            if ((/^H(\d{8})$/.test(dataLine[1]) || /^(\d{9})$/.test(dataLine[1])) == true) {
                                return true;
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by UMID or a 9 digit numeric Member ID ");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Member ID ");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    function ValidateControlLineMTI(controlValue) {

        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                    if (dataLine[0] == "MTI" || dataLine[0] == "MTN" || dataLine[0] == "MTP") {
                        if (dataLine.length > 1) {
                            if (dataLine.length < 2 || (/^(\d{9})$/.test(dataLine[1]) === false)) {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Member ID ");
                                return false;
                            }
                            if ((dataLine.length < 3) || (dataLine[2] != null && (AlphaNumericRegExp(dataLine[2],false)) === false)) {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "  should be followed by a 1 digit alphanumeric suffix ");
                                return false;
                            }
                            if ((dataLine.length < 4) || (dataLine[3] != null && (/^(\s)*$/).test(dataLine[3]) === true)) {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "  should be followed by First Name");
                                return false;
                            }
                            if ((dataLine.length < 5) || (dataLine[4] != null && (/^([A-Z]{2})$/).test(dataLine[4]) === false)) {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "  should be followed by 2 character Relationship.");
                                return false;
                            }
                            if ((dataLine.length < 6) || (dataLine[5] != null && (/^((0[0-9])|1[0-2])(\d{2})$/).test(dataLine[5]) === false)) {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "," + dataLine[4] + "  should be followed by a 4 digit MMYY");
                                return false;
                            }
                            return true;
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Member ID ");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    function ValidateControlLineMGI(controlValue) {

        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                    if (dataLine[0] == "MGI" || dataLine[0] == "MGN" || dataLine[0] == "MGP") {
                        if (dataLine.length > 1) {
                            if (dataLine.length < 2 || (/^(\d{9})$/.test(dataLine[1]) === false)) {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Member ID ");
                                return false;
                            }
                            if ((dataLine.length < 3) || (dataLine[2] != null && AlphaNumericRegExp(dataLine[2], false) === false)) {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "  should be followed by a 1 digit alphanumeric suffix ");
                                return false;
                            }
                            if ((dataLine.length < 4) || (dataLine[3] != null && (/^(\s)*$/).test(dataLine[3]) === true)) {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "  should be followed by First Name");
                                return false;
                            }
                            if ((dataLine.length < 5) || (dataLine[4] != null && (/^([A-Z]{2})$/).test(dataLine[4]) === false)) {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "  should be followed by 2 character Relationship.");
                                return false;
                            }
                            if ((dataLine.length < 6) || (dataLine[5] != null && (/^((0[0-9])|1[0-2])(\d{2})$/).test(dataLine[5]) === false)) {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "," + dataLine[4] + "  should be followed by a 4 digit MMYY");
                                return false;
                            }
                            return true;
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Member ID ");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    function ValidateControlLineMAI(controlValue) {

        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                    if (dataLine[0] == "MAI" || dataLine[0] == "MAN" || dataLine[0] == "MAP") {
                        if (dataLine.length > 1) {
                            if (dataLine.length < 2 || (/^(\d{9})$/.test(dataLine[1]) === false)) {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Member ID ");
                                return false;
                            }
                            if ((dataLine.length < 3) || (dataLine[2] != null && (AlphaNumericRegExp(dataLine[2],false) === false))) {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "  should be followed by a 1 digit alphanumeric suffix ");
                                return false;
                            }
                            if ((dataLine.length < 4) || (dataLine[3] != null && (/^(\s)*$/).test(dataLine[3]) === true)) {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "  should be followed by First Name");
                                return false;
                            }
                            if ((dataLine.length < 5) || (dataLine[4] != null && (/^([A-Z]{2})$/).test(dataLine[4]) === false)) {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "  should be followed by 2 character Relationship.");
                                return false;
                            }
                            if ((dataLine.length < 6) || (dataLine[5] != null && (/^((0[0-9])|1[0-2])(\d{2})$/).test(dataLine[5]) === false)) {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "," + dataLine[4] + "  should be followed by a 4 digit MMYY");
                                return false;
                            }
                            return true;
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Member ID ");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }
    function ValidateControlLineCMI(controlValue) {

        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                    if (dataLine[0] == "CMI" || dataLine[0] == "CMN" || dataLine[0] == "CMP") {
                        if (dataLine.length > 1 && ((/^H(\d{8})$/.test(dataLine[1]) || /^(\d{9})$/.test(dataLine[1])) == true)) {
                            if (dataLine.length > 2) {
                                if (!(dataLine.length == 3 && dataLine[2] == "")) {
                                    if ((dataLine[2].length == 1 && AlphaNumericRegExp(dataLine[2], false)) || dataLine[2] == "") {
                                        if (dataLine.length > 3 && dataLine[3].length >= 1) {
                                            if (dataLine.length > 4 && dataLine[4].length == 2) {
                                                return true;
                                            }
                                            else {
                                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "," + "  should be followed by 2 character Relationship.");
                                                return false;
                                            }
                                        }

                                        else {
                                            $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + "  should be followed by First Name");
                                            return false;
                                        }
                                    }
                                    else {
                                        $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + "  should be followed by a 1 digit alphanumeric suffix");
                                        return false;
                                    }
                                }
                                return true;
                            }
                            return true;
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by UMID or a 9 digit numeric Member ID ");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should not be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }
    function loadPartialViewMPC(controlList, strF6) {
        $('#hdnEnterKeyFlag').val("false");
        var F6 = $("#MPCPage").val();
        var MPCDetaildto = null;
        var MPCDto = null;
        var mpcControlLine = controlList.split(",");
        var cntlarrDirect = ["MPC", "MPF", "MPP", "MPB"];
        //UAT Defect#360408 Fix
        //Skip MSS page load for all payment first time control lines
        var mssSkip = ["MPI", "MXI", "MYI", "MZI", "MQI", "MJI", "MEI", "MKI"];
        if (mssSkip.indexOf(mpcControlLine[0]) >= 0)
            MssCheck(controlList);
        if ($('#MPCSFlag').val() != "false" && (mpcControlLine[0]).indexOf('MPCS') < 0)
            $('#MPCSFlag').val("false");

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();

        if ((controlList.indexOf('MPCS') >= 0 || cntlarrDirect.indexOf(mpcControlLine[0]) >= 0) && F6 == "1") {
            var rows = [];
            $('#TabMpcDetails tbody tr').each(function (i, n) {
                var $row = $(n);
                rows.push({

                    //Vibhav (20180105):changed column sequnce, becuase of new checkbox column added for copy paste functionality
                    mp1fdto: $row.find('td:eq(1) input[type=text]').val(),
                    mp1ldto: $row.find('td:eq(2) input[type=text]').val(),
                    mp1poto: $row.find('td:eq(3) input[type=text]').val(),
                    mp1typeo: $row.find('td:eq(4) input[type=text]').val(),
                    mp1type2o: $row.find('td:eq(5) input[type=text]').val(),
                    CHARGE: $row.find('td:eq(6) input[type=text]').val(),
                    NO: $row.find('td:eq(7) input[type=text]').val(),
                    mp1exo: $row.find('td:eq(8) input[type=text]').val(),
                    mp1pco: $row.find('td:eq(9) input[type=text]').val(),
                    BASIC: $row.find('td:eq(10) input[type=text]').val(),
                    MAJ_MED: $row.find('td:eq(11) input[type=text]').val(),
                    CR_RS: $row.find('td:eq(12) input[type=text]').val(),
                    mp1ovo: $row.find('td:eq(13) input[type=text]').val(),
                });

            });
            rows.shift();  // first row will be empty - so remove

            MPCDetaildto = encodeJson(rows);
            MPCDto = encodeJson(MPCUpdate(controlList));
        }
        else if ((controlList.indexOf('MPCS') >= 0 || cntlarrDirect.indexOf(mpcControlLine[0]) >= 0) && F6 == "2") {
            var rows = [];
            $('#TabMpcDetails tbody tr').each(function (i, n) {
                var $row = $(n);
                rows.push({

                    //Vibhav (20180105):changed column sequnce, becuase of new checkbox column added for copy paste functionality
                    mp1typ12o: $row.find('td:eq(1) input[type=text]').val(),
                    mp1typ22o: $row.find('td:eq(2) input[type=text]').val(),
                    Charge_P2: $row.find('td:eq(3) input[type=text]').val(),
                    NO_P2: $row.find('td:eq(4) input[type=text]').val(),
                    mp1ex2o: $row.find('td:eq(5) input[type=text]').val(),
                    mp1pc2o: $row.find('td:eq(6) input[type=text]').val(),
                    mp1cpt2o: $row.find('td:eq(7) input[type=text]').val(),
                    mp1cpt22o: $row.find('td:eq(8) input[type=text]').val(),
                    mp1cpt32o: $row.find('td:eq(9) input[type=text]').val(),
                    mp1cpt42o: $row.find('td:eq(10) input[type=text]').val(),
                    mp1dpo: $row.find('td:eq(11) input[type=text]').val(),
                    CR_RS_P2: $row.find('td:eq(12) input[type=text]').val(),
                    mp1ov2o: $row.find('td:eq(13) input[type=text]').val(),
                    mp1pn2o: $row.find('td:eq(14) input[type=text]').val(),
                    mp1mod2o: $row.find('td:eq(15) input[type=text]').val(),
                    mp1cfpy2o: $row.find('td:eq(16) input[type=text]').val(),
                    mp1flup2o: $row.find('td:eq(17) input[type=text]').val(),
                });

            });
            rows.shift();  // first row will be empty - so remove

            MPCDetaildto = encodeJson(rows);
            MPCDto = encodeJson(MPCUpdatePage2(controlList));
        }

        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewMPI',
            data: {
                controlValue: controlList,
                hotkey: strF6,
                strMPCDto: MPCDto,
                strMPCDetailDto: MPCDetaildto
            },
            cache: false,

            success: function (data) {              
                $('#divMainPage').removeClass("hide");                
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
                $('#hdnEnterKeyFlag').val("true");
                MHISuffixVal = null;
                HandleOnLoadEvent(); // control-line onload event fires to soon in some cases and this function needs executed again
            }
        });
    }

    function loadPartialViewJJI(controlList, strF6) {

        var JJIDto = null;
        JJIDto = encodeJson(JJIUpdate(controlList));
        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewJJI',
            data: {
                controlValue: controlList,
                hotkey: strF6,
                strJJIDto: JJIDto
            },
            cache: false,

            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });


    }

    function loadPartialViewLTI(controlList, strF6) {
        var LTIDto = null;
        var LTIDetaildto = null;
        var rows = [];
        $('#TabLtiDetails tbody tr').each(function (i, n) {
            var $row = $(n);
            rows.push({

                ltfrsto: $row.find('td:eq(0)').text(),
                ltlsto: $row.find('td:eq(1)').text(),
                ltpoto: $row.find('td:eq(2)').text(),
                lttypeo: $row.find('td:eq(3)').text(),
                ltmodo: $row.find('td:eq(4)').text(),
                Charge: $row.find('td:eq(5)').text().replace("$", ""),
                Number: $row.find('td:eq(6)').text(),
                ltexo: $row.find('td:eq(7)').text(),
                ltpayeo: $row.find('td:eq(8)').text(),
                ltovro: $row.find('td:eq(9) input[type=text]').val(),
                ltrefero: $row.find('td:eq(10) input[type=text]').val(),

            });

        });
        rows.shift();  // first row will be empty - so remove

        LTIDetaildto = encodeJson(rows);
        LTIDto = encodeJson(LTIUpdate(controlList));

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewLTI',
            data: {
                controlValue: controlList,
                hotkey: strF6,
                strLTIDto: LTIDto,
                strLTIDetaildto: LTIDetaildto
            },
            cache: false,

            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });


    }

    function removeDefaultFunction() {
        window.onhelp = function () { return false; }
    }

    function loadPartialViewEXC(controlList, strF12) {

        var RgeDetaildto = null;
        var RgeDto = null;
        var rows = [];
        $('#TabEXCDetails tr').each(function (i, n) {
            var $row = $(n);
            rows.push({

                rge_lobo: $row.find('td:eq(0) input[type=text]').val(),
                hdn_rge_lobo: $row.find('td:eq(0) input[type=hidden]').val(),
                rge_consolo: $row.find('td:eq(1) input[type=text]').val(),
                hdn_rge_consolo: $row.find('td:eq(1) input[type=hidden]').val(),
                rge_baseo: $row.find('td:eq(2) input[type=text]').val(),
                hdn_rge_baseo: $row.find('td:eq(2) input[type=hidden]').val(),
                rge_groupo: $row.find('td:eq(3) input[type=text]').val(),
                hdn_rge_groupo: $row.find('td:eq(3) input[type=hidden]').val(),
                rge_groupero: $row.find('td:eq(4) input[type=text]').val(),
                hdn_rge_groupero: $row.find('td:eq(4) input[type=hidden]').val(),
                rge_pcpo: $row.find('td:eq(5) input[type=text]').val(),
                hdn_rge_pcpo: $row.find('td:eq(5) input[type=hidden]').val(),
                rge_causeo: $row.find('td:eq(6) input[type=text]').val(),
                hdn_rge_causeo: $row.find('td:eq(6) input[type=hidden]').val(),
                rge_speco: $row.find('td:eq(7) input[type=text]').val(),
                hdn_rge_speco: $row.find('td:eq(7) input[type=hidden]').val(),
            });

        });
        rows.shift();  // first row will be empty - so remove
        RgeDetaildto = encodeJson(rows);
        RgeDto = encodeJson(EXCUpdate(controlList));

        //RgeDetaildto = JSON.stringify(rows);
        //RgeDto = EXCUpdate(controlList);

        removeDefaultFunction();
        //e.cancelable = true;
        //e.stopPropagation();
        //e.preventDefault();
        //e.returnValue = false;
        // PageHotkey = "F13";
        //alert(keyCode);
        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewEXC',
            data: {
                controlLine: controlList,//controlList
                Hotkey: "",
                StrRgeDetaildto: RgeDetaildto,
                StrRgeDto: RgeDto
            },
            cache: false,
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
                HandleOnLoadEvent(); // control-line onload event fires to soon in some cases and this function needs executed again
            }

        });
    }

    function EXCUpdate(controlList) {


        var rge_screen_ido = $('#RGEDto_rge_screen_ido').text();
        var rge_bus_nameo = $('#RGEDto_rge_bus_nameo').text();
        var rge_grper_nameo = $('#RGEDto_rge_grper_nameo').text();
        var rge_rule_typeo = $('#RGEDto_rge_rule_typeo').text();
        var rge_statuso = $('#RGEDto_rge_statuso').val();
        var rge_group_nameo = $('#RGEDto_rge_group_nameo').text();
        var rge_base_nameo = $('#RGEDto_rge_base_nameo').text();
        var rge_from_mmo = $('#RGEDto_rge_from_mmo').val();
        var rge_type_desco = $('#RGEDto_rge_type_desco').text();
        var rge_consol_nameo = $('#RGEDto_rge_consol_nameo').text();
        var rge_pcp_nameo = $('#RGEDto_rge_pcp_nameo').text();
        var rge_thru_mmo = $('#RGEDto_rge_thru_mmo').val();
        var rge_page_fwdo = $('#RGEDto_rge_page_fwdo').text();
        var rge_scr_add_byo = $('#RGEDto_rge_scr_add_byo').text();
        var rge_scr_upd_dto = $('#RGEDto_rge_scr_upd_dto').text();
        var rge_scr_upd_byo = $('#RGEDto_rge_scr_upd_byo').text();
        var rge_scr_add_dto = $('#RGEDto_rge_scr_add_dto').text();
        var rge_note_line_1o = $('#RGEDto_rge_note_line_1o').val();
        var rge_note_line_2o = $('#RGEDto_rge_note_line_2o').val();
        var rge_note_line_3o = $('#RGEDto_rge_note_line_3o').val();

        var Model =
            {
                rge_screen_ido: rge_screen_ido,
                rge_bus_nameo: rge_bus_nameo,
                rge_grper_nameo: rge_grper_nameo,
                rge_rule_typeo: rge_rule_typeo,
                rge_statuso: rge_statuso,
                rge_group_nameo: rge_group_nameo,
                rge_base_nameo: rge_base_nameo,
                rge_from_mmo: rge_from_mmo,
                rge_type_desco: rge_type_desco,
                rge_consol_nameo: rge_consol_nameo,
                rge_pcp_nameo: rge_pcp_nameo,
                rge_thru_mmo: rge_thru_mmo,
                rge_page_fwdo: rge_page_fwdo,
                rge_scr_add_byo: rge_scr_add_byo,
                rge_scr_upd_dto: rge_scr_upd_dto,
                rge_scr_upd_byo: rge_scr_upd_byo,
                rge_scr_add_dto: rge_scr_add_dto,
                rge_note_line_1o: rge_note_line_1o,
                rge_note_line_2o: rge_note_line_2o,
                rge_note_line_3o: rge_note_line_3o
            }

        return Model;


    }

    function loadPartialViewSDI(controlList, strF12) {

        var SDIDetaildto = null;
        var ControlLine = controlList.split(",");

        var rows = [];
        $('#TabSdiDetails tbody tr').each(function (i, n) {
            var $row = $(n);
            rows.push({

                dpexo: $row.find('td:eq(8) input[type=text]').val(),
                dppayeo: $row.find('td:eq(9) input[type=text]').val(),
                dpovro: $row.find('td:eq(10) input[type=text]').val(),
            });

        });
        rows.shift();  // first row will be empty - so remove

        SDIDetaildto = encodeJson(rows);

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewSDI',
            data: {
                controlValue: controlList,
                hotkey: strF12,
                strSDIDetaildto: SDIDetaildto
            },
            cache: false,

            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });


    }


    var GNITOGNP = "";
    function validateControlGNI(controlValue) {
        if (controlValue.length >= 0) {

            var dataLine = controlValue.split(",");

            if (dataLine.length > 0) {

                if (dataLine[0] == "GNI") {
                    GNITOGNP = dataLine[0];
                }
                if (dataLine[0] == "GNP" && GNITOGNP == "") {
                    $('#lblerrormsg').html("YOU ARE ON PAGE 1, YOU CAN NOT PAGE BACK ANY FUTHER");
                    $("#txtControlText").val($.trim($("#controlLine").val()));
                    e.preventDefault;
                    return false;

                }
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line")
                    return false;
                }
                else {
                    if (dataLine[0] == "GNI" || dataLine[0] == "GNN" || dataLine[0] == "GNP") {
                        if (/^(\d{4})$/.test(dataLine[1]) == true) {
                            return true;
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 4 digit numeric");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;

    }

    function MPCUpdate(controlList) {

        var mpclnoo = $('#MPCDto_mpclnoo').val();
        var TOTAL_CHARGE = $('#MPCDto_TOTAL_CHARGE').val();
        var mptobo = $('#MPCDto_mptobo').val();
        var mpdischo = $('#MPCDto_mpdischo').val();
        var mpptacto = $('#MPCDto_mpptacto').val();
        var ADDT = $('#MPCDto_ADDT').val();
        var AIRDT = $('#MPCDto_AIRDT').val();
        var mpaddxo = $('#MPCDto_mpaddxo').val();
        var mpprovo = $('#MPCDto_mpprovo').val();
        var mpadmhro = $('#MPCDto_mpadmhro').val();
        var mpdefo = $('#MPCDto_mpdefo').val();
        var mpmlifeo = $('#MPCDto_mpmlifeo').val();
        var mpadmtpo = $('#MPCDto_mpadmtpo').val();
        var mpapno = $('#MPCDto_mpapno').val();
        var mpchecko = $('#MPCDto_mpchecko').val();
        var mpadmsro = $('#MPCDto_mpadmsro').val();
        var mptrano = $('#MPCDto_mptrano').val();
        var DISDT = $('#MPCDto_DISDT').val();
        var mpdx1o = $('#MPCDto_mpdx1o').val();
        var mpdx2o = $('#MPCDto_mpdx2o').val();
        var mpdx3o = $('#MPCDto_mpdx3o').val();
        var mpdx4o = $('#MPCDto_mpdx4o').val();
        var mpdx5o = $('#MPCDto_mpdx5o').val();
        var mpdx6o = $('#MPCDto_mpdx6o').val();
        var mpdx7o = $('#MPCDto_mpdx7o').val();
        var mpdx8o = $('#MPCDto_mpdx8o').val();
        var mpdx9o = $('#MPCDto_mpdx9o').val();
        var mpproc1o = $('#MPCDto_mpproc1o').val();
        var mpproc2o = $('#MPCDto_mpproc2o').val();
        var mpproc3o = $('#MPCDto_mpproc3o').val();
        var mpproc4o = $('#MPCDto_mpproc4o').val();
        var mpproc5o = $('#MPCDto_mpproc5o').val();
        var mpproc6o = $('#MPCDto_mpproc6o').val();
        var DATE_1 = $('#MPCDto_DATE_1').val();
        var DATE_2 = $('#MPCDto_DATE_2').val();
        var DATE_3 = $('#MPCDto_DATE_3').val();
        var DATE_4 = $('#MPCDto_DATE_4').val();
        var DATE_5 = $('#MPCDto_DATE_5').val();
        var DATE_6 = $('#MPCDto_DATE_6').val();
        var mpcauseo = $('#MPCDto_mpcauseo').val();
        var mpautho = $('#MPCDto_mpautho').val();
        var mprefo = $('#MPCDto_mprefo').val();
        var mpoio = $('#MPCDto_mpoio').val();
        var mpwavo = $('#MPCDto_mpwavo').val();
        var mpreflmo = $('#MPCDto_mpreflmo').val();
        var mpadpyo = $('#MPCDto_mpadpyo').val();
        var mprecdto = $('#MPCDto_mprecdto').val();
        var mpn1nmo = $('#MPCDto_mpn1nmo').val();
        var mpn1addo = $('#MPCDto_mpn1addo').val();
        var mpn1cito = $('#MPCDto_mpn1cito').val();
        var mpn1sto = $('#MPCDto_mpn1sto').val();
        var mpn1dego = $('#MPCDto_mpn1dego').val();
        var mpn1spco = $('#MPCDto_mpn1spco').val();
        var mpn2nmo = $('#MPCDto_mpn2nmo').val();
        var mpn2addo = $('#MPCDto_mpn2addo').val();
        var mpn2cito = $('#MPCDto_mpn2cito').val();
        var mpn2sto = $('#MPCDto_mpn2sto').val();
        var mpn2dego = $('#MPCDto_mpn2dego').val();
        var mpn2spco = $('#MPCDto_mpn2spco').val();
        var mpprovo = $('#MPCDto_mpprovo').val();
        var mpprov1o = $('#MPCDto_mpprov1o').val();

        var mpn1zipo = $('#MPCDto_mpn1zipo').val();
        var mpn2zipo = $('#MPCDto_mpn2zipo').val();
        var mpn1paro = $('#MPCDto_mpn1paro').val();
        var mpn2paro = $('#MPCDto_mpn2paro').val();
        var mpn1pto = $('#MPCDto_mpn1pto').val();
        var mpn2pto = $('#MPCDto_mpn2pto').val();
        var mpicdo = $('#MPCDto_mpicdo').val();
        var mpfacilo = $('#MPCDto_mpfacilo').val();
        var AS_AMOUNT_P1 = $('#hdnAS_AMOUNTP1').val();
        var AS_AMOUNT_M1 = $('#hdnAS_AMOUNTM1').val();


        // Grid Header
        var mpappto = $('#MPCDto_mpappto').val();
        var mpappexo = $('#MPCDto_mpappexo').val();
        var mpapppo = $('#MPCDto_mpapppo').val();
        var mpappovo = $('#MPCDto_mpappovo').val();

        var hdnmpappto = $('#hdnmpappto').val();
        var hdnmpappexo = $('#hdnmpappexo').val();
        var hdnmpapppo = $('#hdnmpapppo').val();
        var hdnmpappovo = $('#hdnmpappovo').val();
        //////////////////////

        var Model =
            {
                mpclnoo: mpclnoo,
                TOTAL_CHARGE: TOTAL_CHARGE,
                mptobo: mptobo,
                mpdischo: mpdischo,
                mpptacto: mpptacto,
                ADDT: ADDT,
                AIRDT: AIRDT,
                mpaddxo: mpaddxo,
                mpprovo: mpprovo,
                mpadmhro: mpadmhro,
                mpdefo: mpdefo,
                mpmlifeo: mpmlifeo,
                mpadmtpo: mpadmtpo,
                mpapno: mpapno,
                mpchecko: mpchecko,
                mpadmsro: mpadmsro,
                mptrano: mptrano,
                DISDT: DISDT,
                mpdx1o: mpdx1o,
                mpdx2o: mpdx2o,
                mpdx3o: mpdx3o,
                mpdx4o: mpdx4o,
                mpdx5o: mpdx5o,
                mpdx6o: mpdx6o,
                mpdx7o: mpdx7o,
                mpdx8o: mpdx8o,
                mpdx9o: mpdx9o,
                mpproc1o: mpproc1o,
                mpproc2o: mpproc2o,
                mpproc3o: mpproc3o,
                mpproc4o: mpproc4o,
                mpproc5o: mpproc5o,
                mpproc6o: mpproc6o,
                DATE_1: DATE_1,
                DATE_2: DATE_2,
                DATE_3: DATE_3,
                DATE_4: DATE_4,
                DATE_5: DATE_5,
                DATE_6: DATE_6,
                mpcauseo: mpcauseo,
                mpautho: mpautho,
                mprefo: mprefo,
                mpoio: mpoio,
                mpwavo: mpwavo,
                mpreflmo: mpreflmo,
                mpadpyo: mpadpyo,
                mprecdto: mprecdto,
                mpn1nmo: mpn1nmo,
                mpn1addo: mpn1addo,
                mpn1cito: mpn1cito,
                mpn1sto: mpn1sto,
                mpn2nmo: mpn2nmo,
                mpn1dego: mpn1dego,
                mpn1spco: mpn1spco,
                mpn2addo: mpn2addo,
                mpn2cito: mpn2cito,
                mpn2sto: mpn2sto,
                mpn2dego: mpn2dego,
                mpn2spco: mpn2spco,
                mpprovo: mpprovo,
                mpprov1o: mpprov1o,

                mpn1zipo: mpn1zipo,
                mpn2zipo: mpn2zipo,
                mpn1paro: mpn1paro,
                mpn2paro: mpn2paro,
                mpn1pto: mpn1pto,
                mpn2pto: mpn2pto,
                mpicdo: mpicdo,
                mpfacilo: mpfacilo,
                AS_AMOUNT_P1: AS_AMOUNT_P1,
                AS_AMOUNT_M1: AS_AMOUNT_M1,
                // Grid Header
                mpappto: mpappto,
                mpappexo: mpappexo,
                mpapppo: mpapppo,
                mpappovo: mpappovo,

                hdnmpappto: hdnmpappto,
                hdnmpappexo: hdnmpappexo,
                hdnmpapppo: hdnmpapppo,
                hdnmpappovo: hdnmpappovo,
                //////////////////////
                ControlLine: controlList,
                mpctllno: controlList

            };
        return Model;
    }

    function MPCUpdatePage2(controlList) {

        /// Second Screen 
        var mpclno2o = $('#MPCDto_mpclno2o').val();
        var TOTAL_CHARGE_P2 = $('#MPCDto_TOTAL_CHARGE_P2').val();
        var mpmsg2o = $('#MPCDto_mpmsg2o').val();
        var mpft2o = $('#MPCDto_mpft2o').val();
        var mptl2o = $('#MPCDto_mptl2o').val();
        var mpoarea2o = $('#MPCDto_mpoarea2o').val();
        var mpgrp2o = $('#MPCDto_mpgrp2o').val();
        var mpcls2o = $('#MPCDto_mpcls2o').val();
        var mpefdtg2o = $('#MPCDto_mpefdtg2o').val();
        var mpplan2o = $('#MPCDto_mpplan2o').val();
        var mpdob2o = $('#MPCDto_mpdob2o').val();
        var mpeff2o = $('#MPCDto_mpeff2o').val();
        var mpcan2o = $('#MPCDto_mpcan2o').val();
        var mpoed2o = $('#MPCDto_mpoed2o').val();
        var mpcr2o = $('#MPCDto_mpcr2o').val();
        var mpyr2o = $('#MPCDto_mpyr2o').val();
        var mpcob2o = $('#MPCDto_mpcob2o').val();
        var mpinddd2o = $('#MPCDto_mpinddd2o').val();
        var mpfamdd2o = $('#MPCDto_mpfamdd2o').val();
        var mpmlife2o = $('#MPCDto_mpmlife2o').val();
        var AIRDT_P2 = $('#MPCDto_AIRDT_P2').val();
        var mpdd12o = $('#MPCDto_mpdd12o').val();
        var mpdd22o = $('#MPCDto_mpdd22o').val();
        var mplob2o = $('#MPCDto_mplob2o').val();
        var mpptact2o = $('#MPCDto_mpptact2o').val();
        var PROV_2 = $('#MPCDto_PROV_2').val();
        var mpfacil2o = $('#MPCDto_mpfacil2o').val();

        var INDT = $('#MPCDto_INDT').val();
        var mpacc2o = $('#MPCDto_mpacc2o').val();
        var mptob2o = $('#MPCDto_mptob2o').val();
        var ADDT_P2 = $('#MPCDto_ADDT_P2').val();
        var mpadmhr2o = $('#MPCDto_mpadmhr2o').val();
        var mpadmtp2o = $('#MPCDto_mpadmtp2o').val();
        var mpadmsr2o = $('#MPCDto_mpadmsr2o').val();
        var DISDT_P2 = $('#MPCDto_DISDT_P2').val();
        var mpdisch2o = $('#MPCDto_mpdisch2o').val();
        var mpaddx2o = $('#MPCDto_mpaddx2o').val();
        var mpdef2o = $('#MPCDto_mpdef2o').val();
        var mpdx12o = $('#MPCDto_mpdx12o').val();
        var mppoa12o = $('#MPCDto_mppoa12o').val();
        var mpdx22o = $('#MPCDto_mpdx22o').val();
        var mppoa22o = $('#MPCDto_mppoa22o').val();
        var mpdx32o = $('#MPCDto_mpdx32o').val();

        var mppoa32o = $('#MPCDto_mppoa32o').val();
        var mpdx42o = $('#MPCDto_mpdx42o').val();
        var mppoa42o = $('#MPCDto_mppoa42o').val();
        var mpdx52o = $('#MPCDto_mpdx52o').val();
        var mppoa52o = $('#MPCDto_mppoa52o').val();
        var mpdx62o = $('#MPCDto_mpdx62o').val();
        var mppoa62o = $('#MPCDto_mppoa62o').val();
        var mpdx72o = $('#MPCDto_mpdx72o').val();
        var mppoa72o = $('#MPCDto_mppoa72o').val();
        var mpdx82o = $('#MPCDto_mpdx82o').val();
        var mppoa82o = $('#MPCDto_mppoa82o').val();
        var mpdx92o = $('#MPCDto_mpdx92o').val();

        var mppoa92o = $('#MPCDto_mppoa92o').val();
        var mpicd2o = $('#MPCDto_mpicd2o').val();
        var mrefnpio = $('#MPCDto_mrefnpio').val();
        var mpdo = $('#MPCDto_mpdo').val();
        var mpdrgcd2o = $('#MPCDto_mpdrgcd2o').val();
        var mpsrce2o = $('#MPCDto_mpsrce2o').val();
        var mpcurr2o = $('#MPCDto_mpcurr2o').val();
        var mpcause1o = $('#MPCDto_mpcause1o').val();
        var mpcause2o = $('#MPCDto_mpcause2o').val();
        var mpcause3o = $('#MPCDto_mpcause3o').val();
        var mpcause4o = $('#MPCDto_mpcause4o').val();
        var mpcause5o = $('#MPCDto_mpcause5o').val();
        var mpcause6o = $('#MPCDto_mpcause6o').val();
        var mpcause7o = $('#MPCDto_mpcause7o').val();
        var mpcause8o = $('#MPCDto_mpcause8o').val();
        var mpdo = $('#MPCDto_mpdo').val();
        var mpcause9o = $('#MPCDto_mpcause9o').val();
        var mpauth2o = $('#MPCDto_mpauth2o').val();

        var mpref2o = $('#MPCDto_mpref2o').val();
        var mpoi2o = $('#MPCDto_mpoi2o').val();
        var mpwav2o = $('#MPCDto_mpwav2o').val();
        var mpreflm2o = $('#MPCDto_mpreflm2o').val();
        var mpadpy2o = $('#MPCDto_mpadpy2o').val();
        var mprecdt2o = $('#MPCDto_mprecdt2o').val();

        var mpn1nm2o = $('#MPCDto_mpn1nm2o').val();
        var mpn1add2o = $('#MPCDto_mpn1add2o').val();
        var mpn1asd2o = $('#MPCDto_mpn1asd2o').val();
        var mpn1asc2o = $('#MPCDto_mpn1asc2o').val();
        var mpn1cit2o = $('#MPCDto_mpn1cit2o').val();
        var mpn1st2o = $('#MPCDto_mpn1st2o').val();

        var mpn1zip2o = $('#MPCDto_mpn1zip2o').val();
        var mpn1par2o = $('#MPCDto_mpn1par2o').val();
        var mpn1pt2o = $('#MPCDto_mpn1pt2o').val();
        var mpn1deg2o = $('#MPCDto_mpn1deg2o').val();
        var mpn1spc2o = $('#MPCDto_mpn1spc2o').val();
        var mpn2nm2o = $('#MPCDto_mpn2nm2o').val();

        var mpn2add2o = $('#MPCDto_mpn2add2o').val();
        var mpn2asd2o = $('#MPCDto_mpn2asd2o').val();
        var mpn2asc2o = $('#MPCDto_mpn2asc2o').val();
        var mpn2cit2o = $('#MPCDto_mpn2cit2o').val();
        var mpn2st2o = $('#MPCDto_mpn2st2o').val();
        var mpn2zip2o = $('#MPCDto_mpn2zip2o').val();

        var mpn2par2o = $('#MPCDto_mpn2par2o').val();
        var mpn2pt2o = $('#MPCDto_mpn2pt2o').val();
        var mpn2deg2o = $('#MPCDto_mpn2deg2o').val();
        var mpn2spc2o = $('#MPCDto_mpn2spc2o').val();
        var mpdup12o = $('#MPCDto_mpdup12o').val();
        var mpprov2o = $('#MPCDto_mpprov2o').val();
        var mpprov12o = $('#MPCDto_mpprov12o').val();

        var AS_AMOUNT_P2 = $('#hdnAS_AMOUNTP2').val();
        var AS_AMOUNT_M2 = $('#hdnAS_AMOUNTM2').val();

        //// Grid Header
        var mpappex2o = $('#MPCDto_mpappex2o').val();
        var mpappp2o = $('#MPCDto_mpappp2o').val();
        var mpappov2o = $('#MPCDto_mpappov2o').val();
        var mpappn2o = $('#MPCDto_mpappn2o').val();
        var maapppi2o = $('#MPCDto_maapppi2o').val();

        var hdnmpappex2o = $('#hdnmpappex2o').val();
        var hdnmpappp2o = $('#hdnmpappp2o').val();
        var hdnmpappov2o = $('#hdnmpappov2o').val();
        var hdnmpappn2o = $('#hdnmpappn2o').val();
        var hdnmaapppi2o = $('#hdnmaapppi2o').val();

        /////////////////////////////////////////

        var Model =
            {
                mpclno2o: mpclno2o,
                TOTAL_CHARGE_P2: TOTAL_CHARGE_P2,
                mpmsg2o: mpmsg2o,
                mpft2o: mpft2o,
                mptl2o: mptl2o,
                mpoarea2o: mpoarea2o,
                mpgrp2o: mpgrp2o,
                mpcls2o: mpcls2o,
                mpefdtg2o: mpefdtg2o,
                mpplan2o: mpplan2o,
                mpdob2o: mpdob2o,
                mpeff2o: mpeff2o,
                mpcan2o: mpcan2o,
                mpoed2o: mpoed2o,
                mpcr2o: mpcr2o,
                mpyr2o: mpyr2o,
                mpcob2o: mpcob2o,
                mpinddd2o: mpinddd2o,
                mpfamdd2o: mpfamdd2o,
                mpmlife2o: mpmlife2o,
                AIRDT_P2: AIRDT_P2,
                mpdd12o: mpdd12o,
                mpdd22o: mpdd22o,
                mplob2o: mplob2o,
                mpptact2o: mpptact2o,
                PROV_2: PROV_2,
                mpfacil2o: mpfacil2o,
                INDT: INDT,
                mpacc2o: mpacc2o,
                mptob2o: mptob2o,
                ADDT_P2: ADDT_P2,
                mpadmhr2o: mpadmhr2o,
                mpadmtp2o: mpadmtp2o,
                mpadmsr2o: mpadmsr2o,
                DISDT_P2: DISDT_P2,
                mpdisch2o: mpdisch2o,
                mpaddx2o: mpaddx2o,
                mpdef2o: mpdef2o,
                mpdx12o: mpdx12o,
                mppoa12o: mppoa12o,
                mpdx22o: mpdx22o,
                mppoa22o: mppoa22o,
                mpdx32o: mpdx32o,
                mppoa32o: mppoa32o,
                mpdx42o: mpdx42o,
                mppoa42o: mppoa42o,
                mpdx52o: mpdx52o,
                mppoa52o: mppoa52o,
                mpdx62o: mpdx62o,
                mppoa62o: mppoa62o,
                mpdx72o: mpdx72o,
                mppoa72o: mppoa72o,
                mpdx82o: mpdx82o,
                mppoa82o: mppoa82o,
                mpdx92o: mpdx92o,

                mppoa92o: mppoa92o,
                mpicd2o: mpicd2o,
                mrefnpio: mrefnpio,
                mpdo: mpdo,
                mpcause1o: mpcause1o,
                mpcause2o: mpcause2o,
                mpcause3o: mpcause3o,
                mpcause4o: mpcause4o,
                mpcause5o: mpcause5o,
                mpcause6o: mpcause6o,
                mpcause7o: mpcause7o,
                mpcause8o: mpcause8o,
                mpcause9o: mpcause9o,
                mpauth2o: mpauth2o,
                mpref2o: mpref2o,
                mpoi2o: mpoi2o,
                mpwav2o: mpwav2o,
                mpreflm2o: mpreflm2o,
                mpadpy2o: mpadpy2o,
                mprecdt2o: mprecdt2o,
                mpn1nm2o: mpn1nm2o,
                mpn1add2o: mpn1add2o,
                mpn1asd2o: mpn1asd2o,
                mpn1asc2o: mpn1asc2o,
                mpn1cit2o: mpn1cit2o,
                mpn1st2o: mpn1st2o,
                mpn1zip2o: mpn1zip2o,
                mpn1par2o: mpn1par2o,
                mpn1pt2o: mpn1pt2o,
                mpn1deg2o: mpn1deg2o,
                mpn1spc2o: mpn1spc2o,
                mpn2nm2o: mpn2nm2o,
                mpn2add2o: mpn2add2o,

                mpn2asd2o: mpn2asd2o,
                mpn2asc2o: mpn2asc2o,
                mpn2cit2o: mpn2cit2o,

                mpn2st2o: mpn2st2o,
                mpn2zip2o: mpn2zip2o,
                mpn2par2o: mpn2par2o,

                mpn2pt2o: mpn2pt2o,
                mpn2deg2o: mpn2deg2o,
                mpn2spc2o: mpn2spc2o,

                mpdup12o: mpdup12o,
                mpprov2o: mpprov2o,
                mpprov12o: mpprov12o,

                AS_AMOUNT_P2: AS_AMOUNT_P2,
                AS_AMOUNT_M2: AS_AMOUNT_M2,

                // Grid Header
                mpappex2o: mpappex2o,
                mpappp2o: mpappp2o,
                mpappov2o: mpappov2o,
                mpappn2o: mpappn2o,
                maapppi2o: maapppi2o,

                hdnmpappex2o: hdnmpappex2o,
                hdnmpappp2o: hdnmpappp2o,
                hdnmpappov2o: hdnmpappov2o,
                hdnmpappn2o: hdnmpappn2o,
                hdnmaapppi2o: hdnmaapppi2o,
                //////////////////////
                ControlLine: controlList,
                mpctllno: controlList
            };
        return Model;
    }

    function ValidateControlLinePCI(controlValue) {

        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                    if (dataLine[0] == "PCI" || dataLine[0] == "PCN" || dataLine[0] == "PCA" || dataLine[0] == "PCU") {
                        if (dataLine.length > 1) {
                            if ((/^H(\d{8})$/.test(dataLine[1]) || /^(\d{9})$/.test(dataLine[1])) == true) {
                                return true;
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by UMID or a 9 digit numeric Member ID ");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Member ID ");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    function CWIUpdate(controlList) {
        var cwinfo = $('#CWIDto_cwinfo').text();
        var cwrecnoo = $('#CWIDto_cwrecnoo').text();
        var cwprvsfo = $('#CWIDto_cwprvsfo').val();
        var cwgroupo = $('#CWIDto_cwgroupo').val();
        var Exp_date = $('#CWIDto_Exp_date').val();

        var cwlmtdoo = $('#CWIDto_cwlmtdoo').val();
        var cwlmtcno = $('#CWIDto_cwlmtcno').val();
        var cwappdoo = $('#CWIDto_cwappdoo').val();
        var cwappcno = $('#CWIDto_cwappcno').val();

        var limit_Amt = $('#CWIDto_limit_Amt').val();
        var applied_Amt = $('#CWIDto_applied_Amt').val();
        //if (limit_Amt != undefined)
        //    limit_Amt = limit_Amt.replace("$", "");

        //var applied_Amt = $('#CWIDto_applied_Amt').val();
        //if (applied_Amt != undefined)
        //    applied_Amt = applied_Amt.replace("$", "");

        var cwinfoo = $('#CWIDto_cwinfoo').val();
        var cwpesco = $('#CWIDto_cwpesco').val();
        var cwphospco = $('#CWIDto_cwphospco').val();
        var cwprovo = $('#CWIDto_cwprovo').val();
        var cwlcdo = $('#CWIDto_cwlcdo').val();
        var cwpreexo = $('#CWIDto_cwpreexo').val();
        var cwwkcmpo = $('#CWIDto_cwwkcmpo').val();
        var cwlmrpido = $('#CWIDto_cwlmrpido').val();
        var cwpemmo = $('#CWIDto_cwpemmo').val();

        var Service_Dt = $('#CWIDto_Service_Dt').val();
        var cwicdindo = $('#CWIDto_cwicdindo').val();
        var cwruleo = $('#CWIDto_cwruleo').val();
        var cwlcdsto = $('#CWIDto_cwlcdsto').val();

        var Thru = $('#CWIDto_Thru').val();
        var cwftxt1o = $('#CWIDto_cwftxt1o').val();
        var cwftxt2o = $('#CWIDto_cwftxt2o').val();
        var cwftxt3o = $('#CWIDto_cwftxt3o').val();
        var cwftxt4o = $('#CWIDto_cwftxt4o').val();
        var cwftxt5o = $('#CWIDto_cwftxt5o').val();
        var cwftxt6o = $('#CWIDto_cwftxt6o').val();
        var cwftxt7o = $('#CWIDto_cwftxt7o').val();
        var cwftxt8o = $('#CWIDto_cwftxt8o').val();
        var cwadjido = $('#CWIDto_cwadjido').val();

        var cwdgpy1o = $('#CWIDto_cwdgpy1o').val();
        var cwdgpy2o = $('#CWIDto_cwdgpy2o').val();
        var cwdgpy3o = $('#CWIDto_cwdgpy3o').val();
        var cwdgpy4o = $('#CWIDto_cwdgpy4o').val();
        var cwdgpy5o = $('#CWIDto_cwdgpy5o').val();
        var cwdgpy6o = $('#CWIDto_cwdgpy6o').val();
        var cwdgpy7o = $('#CWIDto_cwdgpy7o').val();
        var cwdgpy8o = $('#CWIDto_cwdgpy8o').val();

        var cwdiag1o = $('#CWIDto_cwdiag1o').val();
        var cwdiag2o = $('#CWIDto_cwdiag2o').val();
        var cwdiag3o = $('#CWIDto_cwdiag3o').val();
        var cwdiag4o = $('#CWIDto_cwdiag4o').val();
        var cwdiag5o = $('#CWIDto_cwdiag5o').val();
        var cwdiag6o = $('#CWIDto_cwdiag6o').val();
        var cwdiag7o = $('#CWIDto_cwdiag7o').val();
        var cwdiag8o = $('#CWIDto_cwdiag8o').val();

        var Model =
        {
            cwinfo: cwinfo,
            cwrecnoo: cwrecnoo,
            cwprvsfo: cwprvsfo,
            cwgroupo: cwgroupo,
            Exp_date: Exp_date,
            cwlmtdoo: cwlmtdoo,
            cwlmtcno: cwlmtcno,
            cwappcno: cwappcno,
            cwappdoo: cwappdoo,
            limit_Amt: limit_Amt,
            applied_Amt: applied_Amt,
            cwinfoo: cwinfoo,
            cwpesco: cwpesco,
            cwphospco: cwphospco,
            cwprovo: cwprovo,
            cwlcdo: cwlcdo,
            cwpreexo: cwpreexo,
            cwwkcmpo: cwwkcmpo,
            cwlmrpido: cwlmrpido,
            cwpemmo: cwpemmo,
            Service_Dt: Service_Dt,
            cwicdindo: cwicdindo,
            cwruleo: cwruleo,
            cwlcdsto: cwlcdsto,
            Thru: Thru,
            cwftxt1o: cwftxt1o,
            cwftxt2o: cwftxt2o,
            cwftxt3o: cwftxt3o,
            cwftxt4o: cwftxt4o,
            cwftxt5o: cwftxt5o,
            cwftxt6o: cwftxt6o,
            cwftxt7o: cwftxt7o,
            cwftxt8o: cwftxt8o,
            cwadjido: cwadjido,
            cwdgpy1o: cwdgpy1o,
            cwdgpy2o: cwdgpy2o,
            cwdgpy3o: cwdgpy3o,
            cwdgpy4o: cwdgpy4o,
            cwdgpy5o: cwdgpy5o,
            cwdgpy6o: cwdgpy6o,
            cwdgpy7o: cwdgpy7o,
            cwdgpy8o: cwdgpy8o,
            cwdiag1o: cwdiag1o,
            cwdiag2o: cwdiag2o,
            cwdiag3o: cwdiag3o,
            cwdiag4o: cwdiag4o,
            cwdiag5o: cwdiag5o,
            cwdiag6o: cwdiag6o,
            cwdiag7o: cwdiag7o,
            cwdiag8o: cwdiag8o,
            ControlLine: controlList
        };
        return Model;
    }

    function loadPartialViewCWI(controlList) {
        var dataLine = controlList.split(",");
        var data = encodeJson(CWIUpdate(controlList));

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewUpdate_CWI',
            data: {
                controlLine: controlList,
                strcwiDTO: data
            },
            cache: false,
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
                //$('#divMainPage').removeClass("hide");
                //$('.CWIMain').hide();
            },
            error: function (jqXHR, exception) {
            }
        });
    }

    function validateASItoASN(controlValue) {

        if (controlValue[0] == "ASI") {
            ASINo = controlValue;
        }
        if (controlValue[0] == "ASN") {
            if (ASINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (controlValue[i] != "") {
                        if (ASINo[i] != controlValue[i]) {
                            return false;
                        }
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;
    }

    //function validateControlZIPI(controlVal) {
    //    var controlValue = controlVal.split(",");
    //    if (controlValue[0] == "ZIPI" || controlValue[0] == "ZIPU") {
    //        if ($.isNumeric(controlValue[1]) || controlValue[1] == "") {
    //        return true;
    //    }
    //        return false;
    //    }

    //    return false;
    //}

    function validateControlZIPI(controlValue) {
        if ($('#hdnBCOP').val() == "true" || $('#Zipiflag').length > 0) {
            if (controlValue.length > 0) {
                var dataLine = controlValue.split(",");
                if (dataLine.length > 0) {
                    if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                        $('#lblerrormsg').html("Invalid Control Line");
                        return false;
                    }
                    else {
                        if (dataLine[0] == "ZIPI") {
                            return true;
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                            return false;
                        }
                    }
                }
                else
                    $('#lblerrormsg').html("Invalid Control Type");
                return false;

            }
            else
                $('#lblerrormsg').html("Invalid Control Type");
            return false;
        }
        else {
            $('#lblerrormsg').html("Invalid Control Type");
            return false;
        }
    }

    function validatePAItoPAN(controlValue) {

        if (controlValue[0] == "PAI") {
            PAINo = controlValue;
        }
        if (controlValue[0] == "PAN") {
            if (PAINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (controlValue[i] != "") {
                        if (PAINo[i] != controlValue[i]) {
                            return true;
                        }
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;
    }

    function validateMDItoMDN(controlValue) {

        if (controlValue[0] == "MDI") {
            MDINo = controlValue;
        }
        if (controlValue[0] == "MDN" || controlValue[0] == "MDP") {
            if (MDINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (controlValue[i] != "") {
                        if (MDINo[i] != controlValue[i]) {
                            return true;
                        }
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;
    }

    function validateMAItoMAN(controlValue) {

        if (controlValue[0] == "MAI") {
            MAINo = controlValue;
        }
        if (controlValue[0] == "MAN" || controlValue[0] == "MAP") {
            if (MAINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (controlValue[i] != "") {
                        if (MAINo[i] != controlValue[i]) {
                            return true;
                        }
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;
    }
    function validateMTItoMTN(controlValue) {

        if (controlValue[0] == "MTI") {
            MTINo = controlValue;
        }
        if (controlValue[0] == "MTN" || controlValue[0] == "MTP") {
            if (MTINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (controlValue[i] != "") {
                        if (MGINo[i] != controlValue[i]) {
                            return true;
                        }
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;
    }

    function validateMSItoMSN(controlValue) {

        if (controlValue[0] == "MSI") {
            MSINo = controlValue;
        }
        if (controlValue[0] == "MSN") {
            MSINo = controlValue;
            if (MSINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (controlValue[i] != "") {
                        if (MSINo[i] != controlValue[i]) {
                            return true;
                        }
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;
    }

    function validateMGItoMGN(controlValue) {

        if (controlValue[0] == "MGI") {
            MGINo = controlValue;
        }
        if (controlValue[0] == "MGN" || controlValue[0] == "MGP") {
            if (MGINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (controlValue[i] != "") {
                        if (MGINo[i] != controlValue[i]) {
                            return true;
                        }
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;
    }
    function validateISItoISN(controlValue) {
        var ISINoMPC = $('#hdnIsiRedirectFlag').val();
        if (controlValue[0] == "ISI") {
            ISINo = controlValue;
        }
        else if (ISINoMPC == "true") {
            ISINo = controlValue;
        }


        if ((controlValue[0] == "ISN" || controlValue[0] == "ISP") && ISINoMPC == "false") {
            if (ISINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (controlValue[i] != "") {
                        if (ISINo[i] != controlValue[i]) {
                            return false;
                        }
                    }
                }
            }
            else {
                return false;
            }
        }
        else if (ISINoMPC == "true") {

            return true;
        }
        return true;
    }

    function JJIUpdate(controlList) {

        var mjdeco = $('#JJIDto_mjdeco').val();
        var PEND_DATE = $('#JJIDto_PEND_DATE').val();
        var mjreaso = $('#JJIDto_mjreaso').val();
        var AIR_DATE = $('#JJIDto_AIR_DATE').val();
        var mjcato = $('#JJIDto_mjcato').val();
        var mjcomm1o = $('#JJIDto_mjcomm1o').val();
        var mjcomm2o = $('#JJIDto_mjcomm2o').val();
        var mjcomm3o = $('#JJIDto_mjcomm3o').val();

        var Model =
    {
        mjdeco: mjdeco,
        PEND_DATE: PEND_DATE,
        mjreaso: mjreaso,
        AIR_DATE: AIR_DATE,
        mjcato: mjcato,
        mjcomm1o: mjcomm1o,
        mjcomm2o: mjcomm2o,
        mjcomm3o: mjcomm3o,
        ControlLine: controlList
    };
        return Model;
    }

    function LTIUpdate(controlList) {

        var ltprovo = $('#hdnProv').val();
        var ltprsfo = $('#hdnSuf').val();

        var Model =
            {
                ltprovo: ltprovo,
                ltprsfo: ltprsfo,
                ControlLine: controlList
            };
        return Model;
    }

    function ClearCache() {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/ClearCache',
            data: {

            },
            dataType: 'html',
            cache: false,
            async: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });


    }

    function ClearCachePDI() {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/ClearCachePDI',
            data: {

            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });


    }

    function loadPartialViewEBI(controlList, strF6) {

        var EBIDetaildto = null;
        //var EBIDto = null;
        var ControlLine = controlList.split(",");

        var rows = [];
        $('#TabEbiDetails tbody tr').each(function (i, n) {
            var $row = $(n);
            rows.push({
                edlit1o: $row.find('td:eq(0) input[type=hidden]').val(),
                edsel1o: $row.find('td:eq(1) input[type=text]').val(),
                edlit2o: $row.find('td:eq(2) input[type=hidden]').val(),
                edsel2o: $row.find('td:eq(3) input[type=text]').val(),
            });

        });
        rows.shift();  // first row will be empty - so remove

        EBIDetaildto = JSON.stringify(rows);
        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewEBI',
            data: {
                controlValue: controlList,
                strEBIDetaildto: EBIDetaildto,
                hotkey: strF6
            },
            cache: false,

            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });


    }

    function loadPartialViewRDI(controlList, strkey) {

        var data = encodeJson(RDIUpdate(controlList));

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewUpdateRDI',
            data: {
                controlValue: controlList,
                hotKey: strkey,
                strRDIDto: data,
            },
            cache: false,
            success: function (data) {

                $('#divMainPage').removeClass("hide");
                $('#divProcess').hide();// ;addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('#divMainPage').removeClass("hide");
            },
            error: function (jqXHR, exception) {

            }

        });

    }

    function RDIUpdate(controlList) {
        var rfuseo = $('#RDIDto_rfuseo').val();
        var rfnomtho = $('#RDIDto_rfnomtho').val();
        var rfprovo = $('#hdnProv').val();
        var Model =
                {

                    rfuseo: rfuseo,
                    rfnomtho: rfnomtho,
                    rfprovo: rfprovo,
                    ControlLine: controlList
                };
        return Model;
    }

    function OCIUpdate(controlList) {
        var cwrecnoo = $('#OCIDto_cwrecnoo').val();
        var OCI_DATE = $('#OCIDto_OCI_DATE').val();
        var OCI_datesplit = $('#OCIDto_OCI_DATE').val().split('/');
        var ocsimmo = OCI_datesplit[0];
        var ocsiddo = OCI_datesplit[1];
        var ocsiyyo = OCI_datesplit[2];

        var Model =
        {
            cwrecnoo: cwrecnoo,
            OCI_DATE: OCI_DATE,
            ocsimmo: ocsimmo,
            ocsiyyo: ocsiyyo,
            ControlLine: controlList
        };
        return Model;
    }

    function loadPartialViewOCI(controlList) {
        var dataLine = controlList.split(",");
        var OCIDetaildto = null;
        var rows = [];
        $('#TabOCIDetails tbody tr').each(function (i, n) {
            var $row = $(n);
            rows.push({

                occlt1o: $row.find('td:eq(0) input[type=text]').val(),
                ocssn1o: $row.find('td:eq(1) input[type=text]').val(),
                ocsfx1o: $row.find('td:eq(2) input[type=text]').val(),
                ocfnm1o: $row.find('td:eq(3) input[type=text]').val(),
                ocrel1o: $row.find('td:eq(4) input[type=text]').val(),
                ocemm1o: $row.find('td:eq(5) input[type=text]').val(),
                occmm1o: $row.find('td:eq(6) input[type=text]').val()
            });

        });
        rows.shift();  // first row will be empty - so remove

        OCIDetaildto = encodeJson(rows);
        var data = encodeJson(OCIUpdate(controlList));

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewUpdate_OCI',
            data: {
                controlLine: controlList,
                strociDto: data,
                strociDetailDto: OCIDetaildto
            },
            cache: false,
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').hide();// ;addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('#divMainPage').removeClass("hide");
                $('.CWIMain').hide();
            },
            error: function (jqXHR, exception) {
            }
        });
    }

    function loadPartialViewMSSOCI(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewOCI',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.CWIMain').hide();
            }
        });
    }

    function ValidateControlLineMPC(controlValue) {

        var MPPCheck = ["MPP", "MPF", "MPB", "MPC"];
        if (controlValue.length > 0) {
            var controlValuehdn = $.trim($("#controlLine").val())
            var cntrlCheck = controlValuehdn.split(",");
            var dataLine = controlValue.split(",");
            // MPP Validation Check               
            if ($('#hdnMPPError').length > 0) {
                var Msg = $('#hdnMPPError').val();
                if (Msg.toUpperCase().indexOf("ALL FILES UPDATED") >= 0 && controlValuehdn.toUpperCase().indexOf("MPP") >= 0 && MPPCheck.indexOf(dataLine[0]) >= 0) {
                    $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL.");
                    return false;
                }
            }
            var cntlarr = ["MPI", "MXI", "MYI", "MZI", "MQI", "MJI", "MPC", "MPB", "MPF", "MPP", "MPCR", "MPCS", "MEI", "MKI"];
            var cntarr2 = ["MYI", "MZI", "MQI", "MJI", "MXI", "MPI", "MEI", "MKI"];
            var cntlarr1 = ["MPC", "MPB", "MPF", "MPP"];
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined' || dataLine[0] == "MPCR") {

                    if (dataLine[0] == "MPCR") {
                        return true;
                    }
                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                    if (cntlarr1.indexOf(dataLine[0]) >= 0) {
                        var precontrl = controlValuehdn.substr(3, controlValuehdn.length - 4).replace(/,/g, '');
                        var contrl = controlValue.substr(3, controlValue.length - 4).replace(/,/g, '');
                        if (precontrl !== contrl || cntlarr1.indexOf(cntrlCheck[0]) < 0) {
                            $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL.");
                            $('#divMainPage').addClass("hide");
                            return false;
                        }
                        else {
                            return true;
                        }
                    }

                    if (cntlarr.indexOf(dataLine[0]) >= 0) {
                        if (dataLine.length > 1) {
                            if ((/^(\d{9})$/.test(dataLine[1]) == true) || (/^H(\d{8})$/.test(dataLine[1]) == true)) {
                                if (dataLine.length == 2 && (/^H(\d{8})$/.test(dataLine[1]) == true))
                                {
                                    return true;
                                }
                                if ((/^H(\d{8})$/.test(dataLine[1]) == true) && dataLine.length == 3 && dataLine[2] == "") {

                                    return true;
                                }
                                if (dataLine.length >= 3 && (AlphaNumericRegExp(dataLine[2], false))) {
                                    if (dataLine[2].length >1) {
                                        $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "  should be followed by 1 digit alphanumeric Suffix.");
                                        return false;
                                    }
                                    if (dataLine.length >= 4 && dataLine[3].length >= 1) {
                                        if (dataLine.length >= 5 && dataLine[4].length == 2) {
                                            if (dataLine[0] == "MPCS" || dataLine[0] == "MPCR") {
                                                return true;
                                            }                                           
                                            if (dataLine.length >= 6 && ((/^\d{9}$/.test(dataLine[5]) || /^\d{15}$/.test(dataLine[5]) || /^\d{9}\s{6}$/.test(dataLine[5])))) {
                                                return true;
                                            }
                                            else {
                                                if (/^H(\d{8})$/.test(dataLine[1])) {
                                                    return true;
                                                } else {
                                                    $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "," + dataLine[4] + " should be followed by a valid claim number.");
                                                    return false;
                                                }
                                            }
                                        }
                                        else {
                                            $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "  should be followed by Relationship Code.");
                                            return false;
                                        }
                                    }
                                    else {
                                        $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "  should be followed by Name.");
                                        return false;
                                    }
                                }
                                else {
                                    $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "  should be followed by 1 digit alphanumeric Suffix.");
                                    return false;
                                }
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + ", should be followed by UMID or a 9 digit Member ID No.");
                                return false;
                            }
                        }
                    }
                    else {
                        $('#lblerrormsg').html("Invalid Control Line");
                        return false;
                    }                   
                }

            }
        }
    }

    function loadPartialViewRGI(controlList) {
        var dataLine = controlList.split(",");
        var data = encodeJson(RGIUpdate(controlList));
        $('#hdnEnterKeyFlag').val("false");
        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewUpdate_RGI',
            data: {
                controlLine: controlList,
                Hotkey: "",
                strrgiDTO: data
            },
            cache: false,
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').hide();// ;addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('#divMainPage').removeClass("hide");
                $('.CWIMain').hide();
                $('#hdnEnterKeyFlag').val("true");
            },
            error: function (jqXHR, exception) {
            }
        });
    }

    function loadPartialViewMSSRGI(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewRGI',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.CWIMain').hide();
            }
        });
    }

    function loadPartialViewRGMToRGI(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewRGI',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.CWIMain').hide();
            }
        });
    }

    function RGMUpdate(controlList) {

        var rgi_rule_numbero = $('#txtRuleNbr').val();
        var rgi_cliento = $('#txtClient').val();
        var rgi_business_cdo = $('#txtBusinessCd').val();
        var rgi_consol_mkto = $('#txtConsolMkt').val();
        var rgi_base_mkto = $('#txtBaseMkt').val();
        var rgi_groupo = $('#txtGroup').val();
        var rgi_groupero = $('#txtGrouper').val();
        var rgi_pcpo = $('#txtPcpInd').val();
        var rgi_eff_mmo = $('#txtEffDt').val();
        var Model =
        {
            rgi_rule_numbero: rgi_rule_numbero,
            rgi_cliento: rgi_cliento,
            rgi_business_cdo: rgi_business_cdo,
            rgi_consol_mkto: rgi_consol_mkto,
            rgi_base_mkto: rgi_base_mkto,
            rgi_groupo: rgi_groupo,
            rgi_groupero: rgi_groupero,
            rgi_pcpo: rgi_pcpo,
            rgi_eff_mmo: rgi_eff_mmo,
            ControlLine: controlList
        };
        return Model;
    }

    function loadPartialViewRGMUpdate(controlList) {
        var data = encodeJson(RGMUpdate(controlList));

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewUpdate_RGM',
            data: {
                controlLine: controlList,
                strrgmDTO: data
            },
            cache: false,
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').hide();// ;addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('#divMainPage').removeClass("hide");
                $('.CWIMain').hide();
            },
            error: function (jqXHR, exception) {
            }
        });
    }

    function loadPartialViewRGM(controlList) {

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewRGM',
            data: {
                controlValue: controlList
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.CWIMain').hide();
            }
        });
    }

    function RGIUpdate(controlList) {

        var rgi_screen_ido = $('#RGIDto_rgi_screen_ido').text();
        var rgi_page_fwdo = $('#RGIDto_rgi_page_fwdo').text();
        var rgi_cont_prioro = $('#RGIDto_rgi_cont_prioro').text();
        var rgi_bus_nameo = $('#RGIDto_rgi_bus_nameo').text();
        var rgi_consol_nameo = $('#RGIDto_rgi_consol_nameo').text();
        var rgi_base_nameo = $('#RGIDto_rgi_base_nameo').text();
        var rgi_group_nameo = $('#RGIDto_rgi_group_nameo').text();
        var rgi_grper_nameo = $('#RGIDto_rgi_grper_nameo').text();
        var rgi_pcp_nameo = $('#RGIDto_rgi_pcp_nameo').text();
        var rgi_exc_indo = $('#RGIDto_rgi_exc_indo').text();
        var rgi_type_desco = $('#RGIDto_rgi_type_desco').text();
        var rgi_spcl_desco = $('#RGIDto_rgi_spcl_desco').text();
        var rgi_scr_add_byo = $('#RGIDto_rgi_scr_add_byo').text();
        var rgi_scr_add_dto = $('#RGIDto_rgi_scr_add_dto').text();
        var rgi_scr_upd_byo = $('#RGIDto_rgi_scr_upd_byo').text();
        var rgi_scr_upd_dto = $('#RGIDto_rgi_scr_upd_dto').text();
        var rgi_rule_typeo = $('#RGIDto_rgi_rule_typeo').val();
        var rgi_statuso = $('#RGIDto_rgi_statuso').val();
        var rgi_pal_indo = $('#RGIDto_rgi_pal_indo').val();
        var rgi_spcl_cdo = $('#RGIDto_rgi_spcl_cdo').val();
        var rgi_from_mmo = $('#RGIDto_rgi_from_mmo').val();
        var rgi_thru_mmo = $('#RGIDto_rgi_thru_mmo').val();
        var rgi_pot_1o = $('#RGIDto_rgi_pot_1o').val();
        var rgi_pot_2o = $('#RGIDto_rgi_pot_2o').val();
        var rgi_pot_3o = $('#RGIDto_rgi_pot_3o').val();
        var rgi_pot_4o = $('#RGIDto_rgi_pot_4o').val();
        var rgi_pot_5o = $('#RGIDto_rgi_pot_5o').val();
        var rgi_pot_6o = $('#RGIDto_rgi_pot_6o').val();
        var rgi_pot_7o = $('#RGIDto_rgi_pot_7o').val();
        var rgi_pot_8o = $('#RGIDto_rgi_pot_8o').val();
        var rgi_from_type_1o = $('#RGIDto_rgi_from_type_1o').val();
        var rgi_from_type_2o = $('#RGIDto_rgi_from_type_2o').val();
        var rgi_from_type_3o = $('#RGIDto_rgi_from_type_3o').val();
        var rgi_from_type_4o = $('#RGIDto_rgi_from_type_4o').val();
        var rgi_from_type_5o = $('#RGIDto_rgi_from_type_5o').val();
        var rgi_from_type_6o = $('#RGIDto_rgi_from_type_6o').val();
        var rgi_from_type_7o = $('#RGIDto_rgi_from_type_7o').val();
        var rgi_from_type_8o = $('#RGIDto_rgi_from_type_8o').val();
        var rgi_thru_type_1o = $('#RGIDto_rgi_thru_type_1o').val();
        var rgi_thru_type_2o = $('#RGIDto_rgi_thru_type_2o').val();
        var rgi_thru_type_3o = $('#RGIDto_rgi_thru_type_3o').val();
        var rgi_thru_type_4o = $('#RGIDto_rgi_thru_type_4o').val();
        var rgi_thru_type_5o = $('#RGIDto_rgi_thru_type_5o').val();
        var rgi_thru_type_6o = $('#RGIDto_rgi_thru_type_6o').val();
        var rgi_thru_type_7o = $('#RGIDto_rgi_thru_type_7o').val();
        var rgi_thru_type_8o = $('#RGIDto_rgi_thru_type_8o').val();
        var rgi_cpt4_suf_1o = $('#RGIDto_rgi_cpt4_suf_1o').val();
        var rgi_cpt4_suf_2o = $('#RGIDto_rgi_cpt4_suf_2o').val();
        var rgi_cpt4_suf_3o = $('#RGIDto_rgi_cpt4_suf_3o').val();
        var rgi_cpt4_suf_4o = $('#RGIDto_rgi_cpt4_suf_4o').val();
        var rgi_cpt4_suf_5o = $('#RGIDto_rgi_cpt4_suf_5o').val();
        var rgi_cpt4_suf_6o = $('#RGIDto_rgi_cpt4_suf_6o').val();
        var rgi_cpt4_suf_7o = $('#RGIDto_rgi_cpt4_suf_7o').val();
        var rgi_cpt4_suf_8o = $('#RGIDto_rgi_cpt4_suf_8o').val();
        var rgi_icd_ind_1o = $('#RGIDto_rgi_icd_ind_1o').val();
        var rgi_icd_ind_2o = $('#RGIDto_rgi_icd_ind_2o').val();
        var rgi_icd_ind_3o = $('#RGIDto_rgi_icd_ind_3o').val();
        var rgi_icd_ind_4o = $('#RGIDto_rgi_icd_ind_4o').val();
        var rgi_icd_ind_5o = $('#RGIDto_rgi_icd_ind_5o').val();
        var rgi_icd_ind_6o = $('#RGIDto_rgi_icd_ind_6o').val();
        var rgi_icd_ind_7o = $('#RGIDto_rgi_icd_ind_7o').val();
        var rgi_icd_ind_8o = $('#RGIDto_rgi_icd_ind_8o').val();
        var rgi_from_diag_1o = $('#RGIDto_rgi_from_diag_1o').val();
        var rgi_from_diag_2o = $('#RGIDto_rgi_from_diag_2o').val();
        var rgi_from_diag_3o = $('#RGIDto_rgi_from_diag_3o').val();
        var rgi_from_diag_4o = $('#RGIDto_rgi_from_diag_4o').val();
        var rgi_from_diag_5o = $('#RGIDto_rgi_from_diag_5o').val();
        var rgi_from_diag_6o = $('#RGIDto_rgi_from_diag_6o').val();
        var rgi_from_diag_7o = $('#RGIDto_rgi_from_diag_7o').val();
        var rgi_from_diag_8o = $('#RGIDto_rgi_from_diag_8o').val();
        var rgi_thru_diag_1o = $('#RGIDto_rgi_thru_diag_1o').val();
        var rgi_thru_diag_2o = $('#RGIDto_rgi_thru_diag_2o').val();
        var rgi_thru_diag_3o = $('#RGIDto_rgi_thru_diag_3o').val();
        var rgi_thru_diag_4o = $('#RGIDto_rgi_thru_diag_4o').val();
        var rgi_thru_diag_5o = $('#RGIDto_rgi_thru_diag_5o').val();
        var rgi_thru_diag_6o = $('#RGIDto_rgi_thru_diag_6o').val();
        var rgi_thru_diag_7o = $('#RGIDto_rgi_thru_diag_7o').val();
        var rgi_thru_diag_8o = $('#RGIDto_rgi_thru_diag_8o').val();
        var rgi_bill_prov_1o = $('#RGIDto_rgi_bill_prov_1o').val();
        var rgi_bill_prov_2o = $('#RGIDto_rgi_bill_prov_2o').val();
        var rgi_bill_prov_3o = $('#RGIDto_rgi_bill_prov_3o').val();
        var rgi_bill_prov_4o = $('#RGIDto_rgi_bill_prov_4o').val();
        var rgi_bill_prov_5o = $('#RGIDto_rgi_bill_prov_5o').val();
        var rgi_bill_prov_6o = $('#RGIDto_rgi_bill_prov_6o').val();
        var rgi_bill_prov_7o = $('#RGIDto_rgi_bill_prov_7o').val();
        var rgi_bill_prov_8o = $('#RGIDto_rgi_bill_prov_8o').val();
        var rgi_prov_suf_1o = $('#RGIDto_rgi_prov_suf_1o').val();
        var rgi_prov_suf_2o = $('#RGIDto_rgi_prov_suf_2o').val();
        var rgi_prov_suf_3o = $('#RGIDto_rgi_prov_suf_3o').val();
        var rgi_prov_suf_4o = $('#RGIDto_rgi_prov_suf_4o').val();
        var rgi_prov_suf_5o = $('#RGIDto_rgi_prov_suf_5o').val();
        var rgi_prov_suf_6o = $('#RGIDto_rgi_prov_suf_6o').val();
        var rgi_prov_suf_7o = $('#RGIDto_rgi_prov_suf_7o').val();
        var rgi_prov_suf_8o = $('#RGIDto_rgi_prov_suf_8o').val();
        var rgi_doc_hos_1o = $('#RGIDto_rgi_doc_hos_1o').val();
        var rgi_doc_hos_2o = $('#RGIDto_rgi_doc_hos_2o').val();
        var rgi_doc_hos_3o = $('#RGIDto_rgi_doc_hos_3o').val();
        var rgi_doc_hos_4o = $('#RGIDto_rgi_doc_hos_4o').val();
        var rgi_doc_hos_5o = $('#RGIDto_rgi_doc_hos_5o').val();
        var rgi_doc_hos_6o = $('#RGIDto_rgi_doc_hos_6o').val();
        var rgi_doc_hos_7o = $('#RGIDto_rgi_doc_hos_7o').val();
        var rgi_doc_hos_8o = $('#RGIDto_rgi_doc_hos_8o').val();
        var rgi_par_prov_1o = $('#RGIDto_rgi_par_prov_1o').val();
        var rgi_par_prov_2o = $('#RGIDto_rgi_par_prov_2o').val();
        var rgi_par_prov_3o = $('#RGIDto_rgi_par_prov_3o').val();
        var rgi_par_prov_4o = $('#RGIDto_rgi_par_prov_4o').val();
        var rgi_par_prov_5o = $('#RGIDto_rgi_par_prov_5o').val();
        var rgi_par_prov_6o = $('#RGIDto_rgi_par_prov_6o').val();
        var rgi_par_prov_7o = $('#RGIDto_rgi_par_prov_7o').val();
        var rgi_par_prov_8o = $('#RGIDto_rgi_par_prov_8o').val();
        var rgi_thousands_1o = $('#RGIDto_rgi_thousands_1o').val();
        var rgi_thousands_2o = $('#RGIDto_rgi_thousands_2o').val();
        var rgi_thousands_3o = $('#RGIDto_rgi_thousands_3o').val();
        var rgi_thousands_4o = $('#RGIDto_rgi_thousands_4o').val();
        var rgi_thousands_5o = $('#RGIDto_rgi_thousands_5o').val();
        var rgi_thousands_6o = $('#RGIDto_rgi_thousands_6o').val();
        var rgi_thousands_7o = $('#RGIDto_rgi_thousands_7o').val();
        var rgi_thousands_8o = $('#RGIDto_rgi_thousands_8o').val();
        var rgi_note_line_1o = $('#RGIDto_rgi_note_line_1o').val();
        var rgi_note_line_2o = $('#RGIDto_rgi_note_line_2o').val();
        var rgi_note_line_3o = $('#RGIDto_rgi_note_line_3o').val();

        var Model =
        {
            rgi_screen_ido: rgi_screen_ido,
            rgi_page_fwdo: rgi_page_fwdo,
            rgi_cont_prioro: rgi_cont_prioro,
            rgi_bus_nameo: rgi_bus_nameo,
            rgi_consol_nameo: rgi_consol_nameo,
            rgi_base_nameo: rgi_base_nameo,
            rgi_group_nameo: rgi_group_nameo,
            rgi_grper_nameo: rgi_grper_nameo,
            rgi_pcp_nameo: rgi_pcp_nameo,
            rgi_exc_indo: rgi_exc_indo,
            rgi_scr_add_byo: rgi_scr_add_byo,
            rgi_scr_add_dto: rgi_scr_add_dto,
            rgi_scr_upd_byo: rgi_scr_upd_byo,
            rgi_scr_upd_dto: rgi_scr_upd_dto,
            rgi_rule_typeo: rgi_rule_typeo,
            rgi_type_desco: rgi_type_desco,
            rgi_statuso: rgi_statuso,
            rgi_pal_indo: rgi_pal_indo,
            rgi_spcl_cdo: rgi_spcl_cdo,
            rgi_spcl_desco: rgi_spcl_desco,
            rgi_from_mmo: rgi_from_mmo,
            rgi_thru_mmo: rgi_thru_mmo,
            rgi_pot_1o: rgi_pot_1o,
            rgi_pot_2o: rgi_pot_2o,
            rgi_pot_3o: rgi_pot_3o,
            rgi_pot_4o: rgi_pot_4o,
            rgi_pot_5o: rgi_pot_5o,
            rgi_pot_6o: rgi_pot_6o,
            rgi_pot_7o: rgi_pot_7o,
            rgi_pot_8o: rgi_pot_8o,
            rgi_from_type_1o: rgi_from_type_1o,
            rgi_from_type_2o: rgi_from_type_2o,
            rgi_from_type_3o: rgi_from_type_3o,
            rgi_from_type_4o: rgi_from_type_4o,
            rgi_from_type_5o: rgi_from_type_5o,
            rgi_from_type_6o: rgi_from_type_6o,
            rgi_from_type_7o: rgi_from_type_7o,
            rgi_from_type_8o: rgi_from_type_8o,
            rgi_thru_type_1o: rgi_thru_type_1o,
            rgi_thru_type_2o: rgi_thru_type_2o,
            rgi_thru_type_3o: rgi_thru_type_3o,
            rgi_thru_type_4o: rgi_thru_type_4o,
            rgi_thru_type_5o: rgi_thru_type_5o,
            rgi_thru_type_6o: rgi_thru_type_6o,
            rgi_thru_type_7o: rgi_thru_type_7o,
            rgi_thru_type_8o: rgi_thru_type_8o,
            rgi_cpt4_suf_1o: rgi_cpt4_suf_1o,
            rgi_cpt4_suf_2o: rgi_cpt4_suf_2o,
            rgi_cpt4_suf_3o: rgi_cpt4_suf_3o,
            rgi_cpt4_suf_4o: rgi_cpt4_suf_4o,
            rgi_cpt4_suf_5o: rgi_cpt4_suf_5o,
            rgi_cpt4_suf_6o: rgi_cpt4_suf_6o,
            rgi_cpt4_suf_7o: rgi_cpt4_suf_7o,
            rgi_cpt4_suf_8o: rgi_cpt4_suf_8o,
            rgi_icd_ind_1o: rgi_icd_ind_1o,
            rgi_icd_ind_2o: rgi_icd_ind_2o,
            rgi_icd_ind_3o: rgi_icd_ind_3o,
            rgi_icd_ind_4o: rgi_icd_ind_4o,
            rgi_icd_ind_5o: rgi_icd_ind_5o,
            rgi_icd_ind_6o: rgi_icd_ind_6o,
            rgi_icd_ind_7o: rgi_icd_ind_7o,
            rgi_icd_ind_8o: rgi_icd_ind_8o,
            rgi_from_diag_1o: rgi_from_diag_1o,
            rgi_from_diag_2o: rgi_from_diag_2o,
            rgi_from_diag_3o: rgi_from_diag_3o,
            rgi_from_diag_4o: rgi_from_diag_4o,
            rgi_from_diag_5o: rgi_from_diag_5o,
            rgi_from_diag_6o: rgi_from_diag_6o,
            rgi_from_diag_7o: rgi_from_diag_7o,
            rgi_from_diag_8o: rgi_from_diag_8o,
            rgi_thru_diag_1o: rgi_thru_diag_1o,
            rgi_thru_diag_2o: rgi_thru_diag_2o,
            rgi_thru_diag_3o: rgi_thru_diag_3o,
            rgi_thru_diag_4o: rgi_thru_diag_4o,
            rgi_thru_diag_5o: rgi_thru_diag_5o,
            rgi_thru_diag_6o: rgi_thru_diag_6o,
            rgi_thru_diag_7o: rgi_thru_diag_7o,
            rgi_thru_diag_8o: rgi_thru_diag_8o,
            rgi_bill_prov_1o: rgi_bill_prov_1o,
            rgi_bill_prov_2o: rgi_bill_prov_2o,
            rgi_bill_prov_3o: rgi_bill_prov_3o,
            rgi_bill_prov_4o: rgi_bill_prov_4o,
            rgi_bill_prov_5o: rgi_bill_prov_5o,
            rgi_bill_prov_6o: rgi_bill_prov_6o,
            rgi_bill_prov_7o: rgi_bill_prov_7o,
            rgi_bill_prov_8o: rgi_bill_prov_8o,
            rgi_prov_suf_1o: rgi_prov_suf_1o,
            rgi_prov_suf_2o: rgi_prov_suf_2o,
            rgi_prov_suf_3o: rgi_prov_suf_3o,
            rgi_prov_suf_4o: rgi_prov_suf_4o,
            rgi_prov_suf_5o: rgi_prov_suf_5o,
            rgi_prov_suf_6o: rgi_prov_suf_6o,
            rgi_prov_suf_7o: rgi_prov_suf_7o,
            rgi_prov_suf_8o: rgi_prov_suf_8o,
            rgi_doc_hos_1o: rgi_doc_hos_1o,
            rgi_doc_hos_2o: rgi_doc_hos_2o,
            rgi_doc_hos_3o: rgi_doc_hos_3o,
            rgi_doc_hos_4o: rgi_doc_hos_4o,
            rgi_doc_hos_5o: rgi_doc_hos_5o,
            rgi_doc_hos_6o: rgi_doc_hos_6o,
            rgi_doc_hos_7o: rgi_doc_hos_7o,
            rgi_doc_hos_8o: rgi_doc_hos_8o,
            rgi_par_prov_1o: rgi_par_prov_1o,
            rgi_par_prov_2o: rgi_par_prov_2o,
            rgi_par_prov_3o: rgi_par_prov_3o,
            rgi_par_prov_4o: rgi_par_prov_4o,
            rgi_par_prov_5o: rgi_par_prov_5o,
            rgi_par_prov_6o: rgi_par_prov_6o,
            rgi_par_prov_7o: rgi_par_prov_7o,
            rgi_par_prov_8o: rgi_par_prov_8o,
            rgi_thousands_1o: rgi_thousands_1o,
            rgi_thousands_2o: rgi_thousands_2o,
            rgi_thousands_3o: rgi_thousands_3o,
            rgi_thousands_4o: rgi_thousands_4o,
            rgi_thousands_5o: rgi_thousands_5o,
            rgi_thousands_6o: rgi_thousands_6o,
            rgi_thousands_7o: rgi_thousands_7o,
            rgi_thousands_8o: rgi_thousands_8o,
            rgi_note_line_1o: rgi_note_line_1o,
            rgi_note_line_2o: rgi_note_line_2o,
            rgi_note_line_3o: rgi_note_line_3o,
            ControlLine: controlList
        };
        return Model;
    }

    function ValidateControlEXC(controlValue) {
        if (controlValue.length > 0) {
            var dataLine = controlValue.split(",");
            if (dataLine[0] == "EXC" && $('#txtControlText').attr('disabled') == 'disabled') {
                return true;
            }
            else {
                $('#lblerrormsg').html("Invalid Control Line");
                return false;
            }
        }
    }

    function ValidateControlPMFI(controlValue) {

        if (controlValue.length > 0) {
            var dataLine = controlValue.split(",");
            var controlarr = ["PMFI", "PMFN", "PMF3", "PMF4"];

            if (($('#hdnBCOP').val() == "true" && dataLine[0] == "PMFI") || ($('#controlLine').length > 0 && controlarr.indexOf(dataLine[0] > 0))) {
                if (dataLine.length > 0) {
                    if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                        $('#lblerrormsg').html("Invalid Control Line");
                        return false;
                    }
                    else {
                        if (dataLine[0] == "PMFI" || controlarr.indexOf(dataLine[0] > 0)) {
                            if ((dataLine.length > 1 && dataLine[1].length == 6) || (controlarr.indexOf(dataLine[0] > 0) && dataLine[0] != "PMFI")) {
                                if ((dataLine.length >= 3 && dataLine[2].length == 2) || (controlarr.indexOf(dataLine[0] > 0) && dataLine[0] != "PMFI")) {
                                    return true;
                                }
                                else {
                                    $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "  should be followed by 2 digit sub group ID");
                                    return false;
                                }
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 6 character group ID");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                            return false;
                        }
                    }
                }
                else
                    $('#lblerrormsg').html("Invalid Control Line");
                return false;

            }
            else
                $('#lblerrormsg').html("Invalid Control Type");
            return false;
        }
        else {
            $('#lblerrormsg').html("Invalid Control Type");
            return false;
        }
    }

    function ValidateControlPMDI(controlValue) {

        if (controlValue.length > 0) {
            var dataLine = controlValue.split(",");
            var controlarr = ["PMDI", "PMDN", "PMD3", "PMD4"];

            if (($('#hdnBCOP').val() == "true" && dataLine[0] == "PMDI") || ($('#controlLine').length > 0 && controlarr.indexOf(dataLine[0] > 0))) {
                if (dataLine.length > 0) {
                    if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                        $('#lblerrormsg').html("Invalid Control Line");
                        return false;
                    }
                    else {
                        if (dataLine[0] == "PMDI" || controlarr.indexOf(dataLine[0] > 0)) {
                            if ((dataLine.length > 1 && dataLine[1].length == 6) || controlarr.indexOf(dataLine[0] > 0) && dataLine[0] != "PMDI") {

                                if ((dataLine.length >= 3 && dataLine[2].length == 2) || controlarr.indexOf(dataLine[0] > 0) && dataLine[0] != "PMDI") {
                                    return true;
                                }
                                else {
                                    $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "  should be followed by 2 digit sub group ID");
                                    return false;
                                }
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 6 character group ID ");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                            return false;
                        }
                    }
                }
                else
                    $('#lblerrormsg').html("Invalid Control Line");
                return false;
            }
            else
                $('#lblerrormsg').html("Invalid Control Type");
            return false;
        }
        else {
            $('#lblerrormsg').html("Invalid Control Type");
            return false;
        }
    }

    function ValidateControlPMCI(controlValue) {
        if (controlValue.length > 0) {
            var dataLine = controlValue.split(",");
            var controlarr = ["PMCI", "PMCN", "PMC3", "PMC4"];
            if (($('#hdnBCOP').val() == "true" && dataLine[0] == "PMCI") || ($('#controlLine').length > 0 && controlarr.indexOf(dataLine[0] > 0))) {
                if (dataLine.length > 0) {
                    if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                        $('#lblerrormsg').html("Invalid Control Line");
                        return false;
                    }
                    else {
                        if (dataLine[0] == "PMCI" || controlarr.indexOf(dataLine[0] > 0)) {
                            if ((dataLine.length > 1 && dataLine[1].length == 6) || controlarr.indexOf(dataLine[0] > 0) && dataLine[0] != "PMCI") {

                                if ((dataLine.length >= 3 && dataLine[2].length == 2) || controlarr.indexOf(dataLine[0] > 0) && dataLine[0] != "PMCI") {
                                    return true;
                                }
                                else {
                                    $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "  should be followed by 2 digit sub group ID");
                                    return false;
                                }
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 6 character group ID ");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                            return false;
                        }
                    }
                }
                else
                    $('#lblerrormsg').html("Invalid Control Line");
                return false;
            }
            else
                $('#lblerrormsg').html("Invalid Control Type");
            return false;
        }
        else {
            $('#lblerrormsg').html("Invalid Control Type");
            return false;
        }
    }

    function ValidateControlPMEI(controlValue) {
        if ($('#hdnBCOP').val() == "true" || $('#pmeiflag').length > 0) {
            if (controlValue.length > 0) {
                var dataLine = controlValue.split(",");
                var controlarr = ["PMEI", "PMEN", "PME3", "PME4"];
                if (dataLine.length > 0) {
                    if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                        $('#lblerrormsg').html("Invalid Control Line");
                        return false;
                    }
                    else {
                        if (dataLine[0] == "PMEI" || controlarr.indexOf(dataLine[0] > 0)) {
                            if ((dataLine.length > 1 && dataLine[1].length == 6) || (controlarr.indexOf(dataLine[0] > 0) && dataLine[0] != "PMEI")) {
                                if ((dataLine.length >= 3 && dataLine[2].length == 2) || (controlarr.indexOf(dataLine[0] > 0) && dataLine[0] != "PMEI")) {
                                    return true;
                                }
                                else {
                                    $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "  should be followed by 2 digit sub group ID");
                                    return false;
                                }
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 6 character group ID ");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                            return false;
                        }
                    }
                }
                else
                    $('#lblerrormsg').html("Invalid Control Line");
                return false;

            }
            else
                $('#lblerrormsg').html("Enter Control Line");
            return false;
        }
        else {
            $('#lblerrormsg').html("Invalid Control Type");
            return false;
        }
    }

    function ValidateControlUF6I(controlValue) {
        if ($('#hdnBCOP').val() == "true" || $('#UF6Iflag').length > 0) {
            if (controlValue.length > 0) {
                var dataLine = controlValue.split(",");
                if (dataLine.length > 0) {
                    if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                        $('#lblerrormsg').html("Invalid Control Line");
                        return false;
                    }
                    else {
                        if (dataLine[0] == "UF6I") {
                            if (dataLine.length > 1) {
                                return true;

                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 0+ 5 digit group ID ");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                            return false;
                        }
                    }
                }
                else
                    $('#lblerrormsg').html("Invalid Control Line");
                return false;

            }
            else
                $('#lblerrormsg').html("Enter Control Line");
            return false;
        }
        else {
            $('#lblerrormsg').html("Invalid Control Type");
            return false;
        }
    }

    function ValidateControlS5PI(controlValue) {
        if ($('#hdnBCOP').val() == "true" || $('#S5piflag').length > 0) {
            if (controlValue.length > 0) {
                var dataLine = controlValue.split(",");
                if (dataLine.length > 0) {
                    if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                        $('#lblerrormsg').html("Invalid Control Line");
                        return false;
                    }
                    else {
                        if (dataLine[0] == "S5PI") {
                            return true;
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                            return false;
                        }
                    }
                }
                else
                    $('#lblerrormsg').html("Invalid Control Type");
                return false;

            }
            else
                $('#lblerrormsg').html("Enter Control Line");
            return false;
        }
        else {
            $('#lblerrormsg').html("Invalid Control Type");
            return false;
        }
    }

    function ValidateControlS6PI(controlValue) {
        if ($('#hdnBCOP').val() == "true" || $('#S6piflag').length > 0) {
            if (controlValue.length > 0) {
                var dataLine = controlValue.split(",");
                if (dataLine.length > 0) {
                    if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                        $('#lblerrormsg').html("Invalid Control Line");
                        return false;
                    }
                    else {
                        if (dataLine[0] == "S6PI") {
                            return true;
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                            return false;
                        }
                    }
                }
                else
                    $('#lblerrormsg').html("Invalid Control Type");
                return false;

            }
            else
                $('#lblerrormsg').html("Invalid Control Type");
            return false;
        }
        else {
            $('#lblerrormsg').html("Invalid Control Type");
            return false;
        }
    }


    $("#fr_window").click(function (e) {
        var controlList = $.trim($("#txtControlText").val().toUpperCase());

        loadPartialViewLoadFR(controlList);
    });


    function loadPartialViewLoadFR(controlList) {



        var controlLineVals = controlList.split(",");

        var clmNbr = controlLineVals[5];
        var rel = controlLineVals[4];
        var fNam = controlLineVals[3];
        var sfx = controlLineVals[2];
        var mbrId = controlLineVals[1];
        var digFrDto = {
            MemberId: mbrId,
            Suffix: sfx,
            FirstName: fNam,
            Relationship: rel,
            ClaimNumber: clmNbr
        }


        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewLoadFR',
            data: {
                frDto: digFrDto
            },
            cache: false,
            success: function (data) {
                window.open(data);

            },
            error: function (jqXHR, exception) {
            }
        });
    }

    $("#baag_window").click(function (e) {
        var controlList = $.trim($("#txtControlText").val().toUpperCase());

        loadPartialViewLoadBaag(controlList);
    });

    function loadPartialViewLoadBaag(controlList) {

        var MhiCntrlLines = ["MHI", "MHP", "MHN"];
        var MriCntrlLines = ["MRI", "MRU"];

        var controlLineVals = controlList.split(",");

        if (MhiCntrlLines.indexOf(controlLineVals[0]) > -1) {
            var groupNbr = $("#hdnGrpNbr").val();
            var classCd = $("#hdnClassCd").val();
        }
        else if (MriCntrlLines.indexOf(controlLineVals[0]) > -1) {
            var groupNbr = $("#MRIDto_Grp").val();
            var classCd = $("#MRIDto_Cl").val();
        }

        var rel = controlLineVals[4];
        var fNam = controlLineVals[3];
        var sfx = controlLineVals[2];
        var mbrId = controlLineVals[1];
        var digBaagDto = {
            MemberId: mbrId,
            Suffix: sfx,
            FirstName: fNam,
            Relationship: rel,
            CustomerNumber: groupNbr,
            CustomerNumberSfx: classCd
        }

        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewLoadBAAG',
            data: {
                baagDto: digBaagDto
            },
            cache: false,
            success: function (data) {
                window.open(data);

            },
            error: function (jqXHR, exception) {
            }
        });
    }

    function APIUpdate(controlList) {

        var hscisido = $('#APIMPCDto_hscisido').val();
        var hscclmo = $('#APIMPCDto_hscclmo').val();
        var hstobo = $('#APIMPCDto_hstobo').val();
        var hsadmdxo = $('#APIMPCDto_hsadmdxo').val();
        var hsdrgo = $('#APIMPCDto_hsdrgo').val();
        var hsdiago = $('#APIMPCDto_hsdiago').val();
        var hssexo = $('#APIMPCDto_hssexo').val();
        var hsageo = $('#APIMPCDto_hsageo').val();
        var hserrtypo = $('#APIMPCDto_hserrtypo').val();
        var hsdiag2o = $('#APIMPCDto_hsdiag2o').val();
        var hsdiag3o = $('#APIMPCDto_hsdiag3o').val();
        var hsdiag4o = $('#APIMPCDto_hsdiag4o').val();
        //var hserrtypo = $('#APIMPDto_hserrtypo').val();
        var Model =
            {
                hscisido: hscisido,
                hscclmo: hscclmo,
                hstobo: hstobo,
                hsadmdxo: hsadmdxo,
                hsdrgo: hsdrgo,
                hsdiago: hsdiago,
                hssexo: hssexo,
                hsageo: hsageo,
                hserrtypo: hserrtypo,
                hsdiag2o: hsdiag2o,
                hsdiag3o: hsdiag3o,
                hsdiag4o: hsdiag4o,
                ControlLine: controlList
            };
        return Model;
    }

    function loadPartialViewAPI(controlList, strF6) {
        var APIDto = null;
        var APIDetaildto = null;
        var rows = [];
        $('#TabApiDetails tbody tr').each(function (i, n) {
            var $row = $(n);
            rows.push({

                hslineo: $row.find('td:eq(0) input[type=text]').val(),
                hshcpcso: $row.find('td:eq(1) input[type=text]').val(),
                hsmodo: $row.find('td:eq(2) input[type=text]').val(),
                hsdateo: $row.find('td:eq(3) input[type=text]').val(),
                hschargeo: $row.find('td:eq(4) input[type=text]').val(),
                hsrevo: $row.find('td:eq(5) input[type=text]').val(),
                hserroro: $row.find('td:eq(6) input[type=text]').val(),
                hstableo: $row.find('td:eq(7) input[type=text]').val(),
                hserdesco: $row.find('td:eq(8) input[type=text]').val(),


            });

        });
        rows.shift();  // first row will be empty - so remove

        APIDetaildto = encodeJson(rows);
        APIDto = encodeJson(APIUpdate(controlList));

        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewAPI',
            data: {
                controlValue: controlList,
                hotkey: strF6,
                strAPIDto: APIDto,
                strAPIDetaildto: APIDetaildto
            },
            cache: false,

            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });
    }

    $("#divPartialView").on("click", ".rdlSelectRDI", function (event) {

        var rdoselVal = $("input[type='radio']:checked").val();
        var controlLine = $.trim($("#controlLine").val().toUpperCase());
        var selid = $("input[type='radio']:checked").prop("id").replace("RDI", "");
        var rfuseo = $.trim($('#RDIDto_rfuseo').val());
        var selhdnvalue = $("#hdnrf05m1o_rfi_ctl" + selid).val();
        if (typeof (rfuseo) == "undefined" || rfuseo === "") {

            loadPartialView(selhdnvalue);
        }
        else {
            loadPartialViewRDI(controlLine, rdoselVal);
        }
    })

    $("#divPartialView").on("keydown", ".rdlSelectRDI", function (event) {

        if (event.which == 40) {
            var tabindex = parseInt($(event.target).attr('tabindex')) + 1;
            $(".rdlSelectRDI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 38) {
            var tabindex = parseInt($(event.target).attr('tabindex')) - 1;
            $(".rdlSelectRDI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 37 || event.which == 39) {
            event.preventDefault();
        }

    });

    function ValidateControlUF7I(controlValue) {
        if ($('#hdnBCOP').val() == "true" || $('#UF7Iflag').length > 0) {
            if (controlValue.length > 0) {
                var dataLine = controlValue.split(",");
                if (dataLine.length > 0) {
                    if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                        $('#lblerrormsg').html("Invalid Control Line");
                        return false;
                    }
                    else {
                        if (dataLine[0] == "UF7I") {
                            if (dataLine.length > 1) {
                                if ($('#controlLine').length > 0 && $('#controlLine').val().indexOf("UF7U") == 0) {
                                    $('#lblerrormsg').html("INVALID CONTROL LINE");
                                    return false;
                                }

                                return true;

                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 0+ 5 digit group ID ");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                            return false;
                        }
                    }
                }
                else
                    $('#lblerrormsg').html("Invalid Control Line");
                return false;

            }
            else
                $('#lblerrormsg').html("Enter Control Line");
            return false;
        }
        else {
            $('#lblerrormsg').html("Invalid Control Type");
            return false;
        }
    }





    function loadPartialViewS5PI_Update(controlList, rdoselVal) {

        var data = S5PIdata(controlList);
        if (data != false) {
            $('#S5PIDto_pifunco').val("")

            $('#divMainPage').addClass("hide");
            $('#divProcess').removeClass("hide");
            $('#divModifier').show();
            $('#divModifierName').show();

            $.ajax({
                type: 'POST',
                url: '../ControlLine/LoadPartialViewS5PI',
                data: {
                    controlLine: controlList,
                    S5piDto: data
                },
                cache: false,
                success: function (data) {
                    $('#divMainPage').removeClass("hide");
                    $('#divProcess').hide();// ;addClass("hide");
                    $('#divMainPage').addClass("page-layout");
                    $('#divPartialView').html(data);
                    $('#divMainPage').removeClass("hide");
                },
                error: function (jqXHR, exception) {

                }

            });
        }


        else {

            if ($('#S5PIDto_pifunco').val() == "--") {
                $('#S5PIDto_pifunco').attr("Class", "first-data");
                $('#lblerrormsg').html("NEITHER SELECT OR PAGING WAS CHOSEN");
                $('#S5PIDto_pifunco').val("--");
                $('#S5PIDto_pifunco').focus();
                $('#divMainPage').removeClass("hide");
                $('#top_panel').show();
                $('#divMainPage').addClass("page-layout");
            }
            else {

                $('#S5PIDto_pifunco').attr("Class", "errorcls");
                $('#lblerrormsg').html("INVALID PAGE OPTION");
                $('#S5PIDto_pifunco').val("--")
            }

            return false;
        }

    }


    function S5PIdata(controlList) {
        var PIFUNCO = $('#S5PIDto_pifunco').length > 0 ? $('#S5PIDto_pifunco').val().toUpperCase() : "";


        //var pifuncoValues =["PF", "PS", "PB", "", "--"];
        var pifuncoValues = ["PF", "PS", "PB"];
        //if (pifuncoValues.indexOf(PIFUNCO) >= 0) {
        if (($.inArray(PIFUNCO, pifuncoValues) > -1) || (controlList != $('#controlLine').val())) {
            var Model =
                         {
                             pifunco: PIFUNCO,
                             ControlLine: controlList
                         };
            return Model;

        }
        else {
            return false;

        }
    }

    function loadPartialViewS6PI_Update(controlList, rdoselVal) {

        var data = S6PIdata(controlList);
        if (data != false) {
            $('#S6PIDto_pifunco').val("")

            $('#divMainPage').addClass("hide");
            $('#divProcess').removeClass("hide");
            $('#divModifier').show();
            $('#divModifierName').show();

            $.ajax({
                type: 'POST',
                url: '../ControlLine/LoadPartialViewS6PI',
                data: {
                    controlLine: controlList,
                    S6piDto: data
                },
                cache: false,
                success: function (data) {
                    $('#divMainPage').removeClass("hide");
                    $('#divProcess').hide();// ;addClass("hide");
                    $('#divMainPage').addClass("page-layout");
                    $('#divPartialView').html(data);
                    $('#divMainPage').removeClass("hide");

                },
                error: function (jqXHR, exception) {
                }

            });
        }
        else {

            if ($('#S6PIDto_pifunco').val() == "--") {
                $('#S6PIDto_pifunco').attr("Class", "first-data");
                $('#lblerrormsg').html("NEITHER SELECT OR PAGING WAS CHOSEN");
                $('#S6PIDto_pifunco').val("--");
                $('#S6PIDto_pifunco').focus();
                $('#divMainPage').removeClass("hide");
                $('#top_panel').show();
                $('#divMainPage').addClass("page-layout");

            }
            else {
                $('#S6PIDto_pifunco').attr("Class", "errorcls");
                $('#lblerrormsg').html("INVALID PAGE OPTION");
                $('#S6PIDto_pifunco').val("--")
            }

            return false;
        }

    }

    function S6PIdata(controlList) {
        // var PIFUNCO = $('#S6PIDto_pifunco').val().toUpperCase();
        var PIFUNCO = $('#S6PIDto_pifunco').length > 0 ? $('#S6PIDto_pifunco').val().toUpperCase() : "";
        var pifuncoValues = ["PF", "PS", "PB"];
        if ($('#hdnS6piTable').length == 0)
            pifuncoValues = ["PF", "PS", "PB", "--"];

        if (($.inArray(PIFUNCO, pifuncoValues) > -1) || (controlList != $('#controlLine').val())) {
            var Model =
                {
                    pifunco: PIFUNCO,
                    ControlLine: controlList
                };
            return Model;
        }
        else {
            return false;

        }
    }

    function MssCheck(controlLine) {
        $.ajax({
            type: 'POST',
            url: '../ControlLine/MssCheck',
            data: {
                controlValue: controlLine
            },
            cache: false,
            async:false,
            success: function (data) {
            }
        });
    }

    function loadPartialViewAHI(controlList, strF6) {

        var AHIDto = null;
        AHIDto = encodeJson(AHIUpdate(controlList));
        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();
        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewAHI',
            data: {
                controlValue: controlList,
                hotkey: strF6,
                strAHIDto: AHIDto
            },
            cache: false,

            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
            }

        });
    }

    function AHIUpdate(controlList) {
        var ahmcdo = $('#AHIDto_ahmcdo').val();

        var Model =
    {
        ahmcdo: ahmcdo,

    };
        return Model;
    }

    function ValidateControlLineOSI(controlValue) {

        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line");
                    return false;
                }
                else {
                    if (dataLine[0] == "OSI") {
                        if (dataLine.length > 1 && (/^(\d{9})$/.test(dataLine[1]) == true)) {
                            if (dataLine.length > 2 && ((dataLine[2].length == 1 && AlphaNumericRegExp(dataLine[2],false)) || dataLine[2] == "")) {
                                if (dataLine.length > 3 && dataLine[3].length >= 1) {
                                    if (dataLine.length > 4 && dataLine[4].length == 2) {
                                        return true;
                                    }
                                    else {
                                        $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + dataLine[3] + "," + "  should be followed by 2 character Relationship.");
                                        return false;
                                    }
                                }
                                else {
                                    $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + dataLine[2] + "," + "  should be followed by First Name");
                                    return false;
                                }
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "," + dataLine[1] + "," + "  should be followed by a 1 digit alphanumeric suffix");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric Member ID ");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should not be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;
    }

    function validateMCI(controlValue) {
        if (controlValue.length > 0) {

            var dataLine = controlValue.split(",");
            if (dataLine.length > 0) {
                if (dataLine[0] === '' || dataLine[0] === null || typeof dataLine[0] === 'undefined') {

                    $('#lblerrormsg').html("Invalid Control Line")
                    return false;
                }
                else {
                    if (dataLine[0] == "MCI" || dataLine[0] == "MCN" || dataLine[0] == "MCP" || dataLine[0] == "MCU") {
                        if (dataLine.length > 1) {
                            if (/^(\d{9})$/.test(dataLine[1]) == true) {
                                if (dataLine.length > 2) {
                                    if (dataLine[2] == "H" || dataLine[2] == "D") {
                                        if (dataLine.length > 3) {
                                            if ((dataLine[3] == '') || ((AlphaNumericRegExp(dataLine[3], false) == true) && (dataLine[3].length == 1)) || CheckCFC(dataLine) > -1) {
                                                if (dataLine.length > 4) {
                                                    if (dataLine[4].length > 0 && dataLine[4].length>12) {
                                                        $('#lblerrormsg').html("INVALID MEDICAID ID")
                                                        return false;
                                                    }
                                                }
                                                if (!MCItoMCUtoMCN(dataLine)) {
                                                    $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL.");
                                                    return false;
                                                }
                                                return true;
                                            }
                                            else {
                                                $('#lblerrormsg').html(dataLine[0] + " ,TIN,Indicator should be followed by 1 digit alphanumeric Provider Suffix")
                                                return false;
                                            }
                                        }
                                        else {
                                            if (!MCItoMCUtoMCN(dataLine)) {
                                                $('#lblerrormsg').html("CONTROL LINE CHANGED SINCE INITIAL.");
                                                return false;
                                            }
                                            return true;
                                        }
                                    }
                                    else {
                                        $('#lblerrormsg').html(dataLine[0] + " ,TIN should be followed by 1 alphabet Indicator (D or H)")
                                        return false;
                                    }
                                }
                                else {
                                    $('#lblerrormsg').html(dataLine[0] + " ,TIN should be followed by 1 alphabet Indicator (D or H)");
                                    return false;
                                }
                            }
                            else {
                                $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric TIN");
                                return false;
                            }
                        }
                        else {
                            $('#lblerrormsg').html(dataLine[0] + "  should be followed by a 9 digit numeric TIN");
                            return false;
                        }
                    }
                    else {
                        $('#lblerrormsg').html(dataLine[0] + "  should be the start value");
                        return false;
                    }
                }
            }
            else
                $('#lblerrormsg').html("Invalid Control Line");
            return false;

        }
        else
            $('#lblerrormsg').html("Enter Control Line");
        return false;

    }

    function MCItoMCUtoMCN(controlValue) {
        if (controlValue[0] == "MCI") {
            MCIClaimNo = controlValue;
        }
        if ((controlValue[0] == "MCU" || controlValue[0] == "MCN" || controlValue[0] == "MCP")) {

            if (MCIClaimNo != "") {
                for (var i = 1; i < 3; i++) {
                    if (MCIClaimNo[i] != controlValue[i]) {
                        return false;
                    }
                }
            }
            else {
                return false;
            }
        }

        return true;

    }

    function validateCMItoCMN(controlValue) {

        if (controlValue[0] == "CMI") {
            CMINo = controlValue;
        }
        if (controlValue[0] == "CMN" || controlValue[0] == "CMP") {
            if (CMINo != "") {
                for (var i = 1; i < controlValue.length; i++) {
                    if (controlValue[i] != "") {
                        if (CMINo[i] != controlValue[i]) {
                            return true;
                        }
                    }
                }
            }
            else {
                return false;
            }
        }
        return true;
    }

    function MHITabEnterKey(tabvalue) {
        var selectedModifier = tabvalue;
        var NewcotrlLine = "";
        var controlLine = $("#txtControlText").val();
        var controlList = (controlLine).split(',');

        for (var jj = 0; jj < controlList.length; jj++) {
            if (jj == 0) {
                NewcotrlLine = controlList[jj];

                if (NewcotrlLine == "MHN" || NewcotrlLine == "MHP")
                    NewcotrlLine = "MHI";

            }
            else if (jj <= 4) {
                NewcotrlLine = NewcotrlLine + "," + controlList[jj];
            }
            else if (jj == 5 && $.isNumeric(controlList[jj])) {
                NewcotrlLine = NewcotrlLine + "," + controlList[jj];
            }
        }
        NewcotrlLine = NewcotrlLine + "," + selectedModifier;

        $("#txtControlText").val(NewcotrlLine);
        $("#txtControlText").focus();
        return NewcotrlLine
    }

    function CurrentClaimLink(linkvalue) {
        DisplayFrAndBaagBtn("");
        var claim = linkvalue;
        var NewcotrlLine = "";
        var controlLine = $("#txtControlText").val();

        var controlList = (controlLine).split(',');
        for (var jj = 0; jj < controlList.length; jj++) {

            if (jj == 0) {
                NewcotrlLine = "MHI";
            }
            else if (jj <= 4) {
                NewcotrlLine = NewcotrlLine + "," + controlList[jj];
            }
            else if (jj == 5 && !$.isNumeric(controlList[jj])) {
                claim = $.trim(claim);
                if ($.isNumeric(claim)) {

                    NewcotrlLine = NewcotrlLine + "," + claim + "," + controlList[jj];
                }
            }
            else if (jj >= 5) {
                NewcotrlLine = NewcotrlLine + "," + controlList[jj];
            }
        }

        $("hdnMHIRedirectFlag").val(true);
        return NewcotrlLine;

    }

    function NextPrevious() {
        var popupModList = ["API", "APF", "APB", "CMI", "CMN", "CMP"];
        var lineval = $('#selvalue').val();
        var controlList = $("#txtControlText").val().toUpperCase();
        var controlListNP = $("#txtCISHAPIText").val().toUpperCase();
        var strModName = $("#hdnPP3Flag").val();
        var dataLineNP = controlListNP.split(",");
        if (controlListNP == "" || popupModList.indexOf(dataLineNP[0]) < 0) {
            $('#lblAPIerrormsg').html("INVALID CONTROL TYPE");
            $('.popup-data').hide();
            return false;
        }
        loadPartialViewMHIAPIPB(controlListNP, lineval, strModName)
    }
    function loadPartialViewMHIAPIPB(controlList, lineval, strModName) {
        // alert(controlList + "- " + lineval);
        if (strModName) {
            var strModifier = "CMI";
        }
        else {
            var strModifier = "API";
        }
        var header = '<div class="row">' +
                       '<div class="col-md-3">' +
                       '<h4 class="modal-title">' + strModifier + '</h4>' +
                       '</div>' +
                       '<div class="col-md-9">' +
                                             '<ul class="ControllSetAPI" tabindex="1">' +
                                                 '<li><label style="font-weight:normal;padding-top:4px;color:#fff;margin-right:4px">Enter Control Line</label></li>' +
                                                 '<li><input type="text" id="txtControlText" autofocus></li>' +

                            '<li>' +
                           '<input type="button" class="button-1" id="btnAPIControlLine" value="Submit" tabindex="3" onclick="NextPrevious();" />' +
                          '<input type="button" class="button-1" id="btnAPIRefresh" value="Refresh" tabindex="4" style="margin-left:12px;" onclick="RefreshControls();" />' +
                         '</li>' +
                         '</ul>' +
                       '</div>' +
                       '</div>';
        header = "";

        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewMHIAPI',
            data: {
                controlValue: controlList,
                lineval: lineval
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $(".modal-internal-content").html(data);
                showMessageDialog(header);

            },
            error: function () {
                alert("Some error occured. Please try again control line");
            }
        });
    }

    function loadPartialViewDefault(controlLine, validationMsg) {


        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $.ajax({
            type: 'GET',
            url: '../ControlLine/loadPartialViewDefault',
            data: {
                controlValue: controlLine,
                validationMsg: validationMsg
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);

            }
        });
    }

    function PageLoadCheck() {
        $("div#divProcess").on("DOMAttrModified", function () {
            if ($(this).is(":visible")) {
                $(".rdlSelectMSS").attr('disabled', 'disabled');
                $('#hdnEnterKeyFlag').val("false");

            }
            else {
                $(".rdlSelectMSS").removeAttr('disabled');
                $('#hdnEnterKeyFlag').val("true");
            }
        });
    }
    $("#divPartialView").on("keydown", ".rdlSelectCMI", function (event) {
        // 37,38,39,40 are keycodes
        if (event.which == 40) {
            var tabindex = parseInt($(event.target).attr('tabindex')) + 1;
            $(".rdlSelectCMI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 38) {
            var tabindex = parseInt($(event.target).attr('tabindex')) - 1;
            $(".rdlSelectCMI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }
        else if (event.which == 37 || event.which == 39) {
            var tabindex = parseInt($(event.target).attr('tabindex'));
            $(".rdlSelectCMI[tabindex=" + (tabindex) + "]").focus();
            event.preventDefault();
        }

    });

    $("#divPartialView").on("click", ".rdlSelectCMI", function (event) {

        var controlLineCMI = $("#txtControlText").val().toUpperCase();
        var rdoselVal = $("input[type='radio']:checked").val();
        loadPartialViewCMI(controlLineCMI, rdoselVal - 1);

    })
    // function MHNCheck() {

    //var isMHI=$.ajax(
    //     {
    //         type: 'POST',
    //         url: '../ControlLine/MHNCheck',
    //         data: {},
    //         async: false,
    //         success: function (data) {                
    //         }
    //     });

    //     return isMHI.responseText;        
    // }




    function loadPartialViewOver() {

        var strModifier = "Over";
        var header = '<div class="row">' +
                       '<div class="col-md-3">' +
                       '<h4 class="modal-title">' + strModifier + '</h4>' +
                       '</div></div>';
        var lineval = "";
        var controlList = $.trim($("#txtControlText").val().toUpperCase());

        $.ajax({
            type: 'GET',
            url: '../ControlLine/LoadPartialViewMHIAPI',
            data: {
                controlValue: controlList,
                lineval: lineval
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $(".modal-internal-content").html(data);
                showMessageDialog(header);
            },
            error: function () {
                alert("Some error occured. Please try again with new user id");
            }
        });
    }

    function OverrideIdEnter() {

        var newUserId = $.trim($('#txtIDText').val());
        var ChildDirectory = $("#hdnHomeRedirectURL").val();
        
        if (newUserId.length < 7) {
            $('#lblOvererrormsg').html("Please Enter Valid User Id. ");
            return false;
        }
        $('#hdnPageUnload').val("YES"); //VXP-added this to prevent RemoveSession call. In case of Over Byby is handled by Over function already
        $.ajax({
            type: 'GET',
            url: '../ControlLine/OverUserId',
            data: {
                newUserId: newUserId
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                if (dialog != null && dialog.dialog != "undefined") {
                    dialog.dialog("close");
                    $("#txtControlText").val("");
                    var newurl = "";
                    if (window.location.host != "" && window.location.host.indexOf("localhost") < 0) {
                        newurl = window.location.protocol + "//" + window.location.host;
                        if (ChildDirectory != "")
                            newurl += ChildDirectory;                     

                        window.location.href = newurl + "?userId=" + newUserId;
                    }
                    else {
                        newurl = window.location.protocol + "//" + window.location.host;
                        window.location.href = newurl + "?userId=" + newUserId;
                    }
                    //closetabBrowserEnter("BYCL"); //VXP-commented this to prevent ByBy call. In case of Over Byby is handled by Over function already
                }
            },
            error: function () {
                alert("Some error occured. Please try again with new user id");
            }
        });
    }

    function closetabBrowserEnter(byby) {
        $.ajax({
            type: 'GET',
            url: '../ControlLine/closetabBrowser',
            data: {
                controlValue: byby,
                iscallbybyimediate: true
            },
            dataType: 'html',
            cache: false,
            contentType: 'application/html; charset=utf-8',
            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
            }
        });
    }
    /// code is for closing the tab End
    function CheckForMPC() {
        var hiddencontrollinearr = $("#controlLine").val().split(",");
        //var txtcontrollinearr = $("#txtControlText").val().split(",");


        var MPCDataLine = $.trim($("#txtControlText").val().toUpperCase());
        var MPCarrList = MPCDataLine.split(",");
        var validecaseArr = ["MPF", "MPB"];
        if (MPCarrList[0].length == 0 || MPCarrList[0].length > 3) {

            if (MPCDataLine.indexOf("MPCR") == 0 || MPCDataLine.indexOf("MPCS") == 0) {
                return true;
            }

            $('#lblerrormsg').html("Invalid Control Line");
            $('#divMainPage').addClass("hide");
            $("#txtControlText").focus();           
            //ClearCache(); //Commented to fix 378468.0001 - Issue #2
            return false;
        }
        else if (hiddencontrollinearr[0] == "MPC" || hiddencontrollinearr[0] == "MPF" || hiddencontrollinearr[0] == "MPB" && (hiddencontrollinearr[0] != MPCarrList[0] || validecaseArr.indexOf(MPCarrList[0]) < 0)) {

            var returnvalue = "";
            var arrValidateMPC = ["ADI", "ADF", "ADP", "CMI", "CMN", "CMP", "APB",
                                   "APF", "API", "CRA", "CRD", "CRI", "CRN", "CRU",
                                   "CWA", "CWI", "CWN", "CWU", "CWP", "DCI", "DCU",
                                   "DDI", "DDN", "DHI", "DHN", "DMI", "DMN", "DMU",
                                   "DPI", "DPC", "DPP", "DQI", "DXI", "DZI", "DRI",
                                   "DRN", "DRU", "DSI", "DSN", "DTI", "DTN", "DTU",
                                   "EBI", "HSI", "HSN", "HSU", "LCB", "LCF", "LCI",
                                   "MDI", "MDN", "MEI", "MHI", "MHN", "MHP", "MPB",
                                   "MPC", "MPF", "MPI", "MPP", "MPZ", "MQI", "MXI",
                                   "MYI", "MZI", "MJI", "MKI", "MRI", "MRN", "MRU",
                                   "MSI", "MSN", "MTI", "MTN", "MTU", "NDB", "NDF",
                                   "NDI", "OCA", "OCI", "OCN", "OCU", "OPA", "OPI",
                                   "OPN", "OPU", "PCA", "PCI", "PCN", "PCU", "PRA",
                                   "PRI", "PRN", "PRP", "PRU", "RDB", "RDF", "RDI",
                                   "RDN", "RDP", "RFA", "RFI", "RFN", "RFP", "RFU",
                                   "RSA", "RSI", "RSN", "RSP", "RSU", "SDB", "SDF",
                                   "LTB", "LTF", "LTI", "SDI", "SDN", "SDP", "TAA",
                                   "TAI", "TAN", "TAU", "BCOP"];
            if (arrValidateMPC.indexOf(MPCarrList[0]) >= 0 || $('#hdnMPCSCheck').val() == "true" || $('#hdnMPPError').val().indexOf("NO LINE ITEMS FOR THAT CLAIM OR PROVIDER") == 0) {
                returnvalue = "";
                $('#hdnMPCSCheck').val("false");
            }

            else {
                returnvalue = "false";
                DisplayMPCError();
            }
            return returnvalue;
        }

    }

    function DisplayMPCError() {
        oldCntrlLine = $("#controlLine").val();
        $("#txtControlText").val(oldCntrlLine);
        $('#lblerrormsg').html("TO CONTINUE USE MPF/MPB/MPC")
        $('#divMainPage').show();
        $("#txtControlText").focus();
    }
    $(window).on('beforeunload', (function (event) {
        if ($('#hdnPageUnload').val() != "YES") {
            return removeSession($('#hdnPageUnload').val());
        }

    }));

    var prevkey = "";
    $(document).keydown(function (e) {
        if (e.key == "F5") {
            //window.onbeforeunload = ConfirmLeave;
        }
        else if (e.key = "W" && prevkey == "CONTROL") {
            window.onbeforeunload = removeSession;
        }
        else if (e.key = "R" && prevkey == "CONTROL") {
            window.onbeforeunload = removeSession;
        }
        else if (e.key = "F4" && (prevkey == "ALT" || prevkey == "CONTROL")) {
            window.onbeforeunload = removeSession;
        }
        prevkey = e.key;
    });

    function loadPartialViewCBI(controlList, strF9, indicator) {
        var CBIDetaildto = null;
        //var CBIDto = null;
        var ControlLine = controlList.split(",");

        var rows = [];
        if (indicator == "G") {
            $('#TabCbiDetails tbody tr').each(function (i, n) {
                var $row = $(n);
                rows.push({
                    cbppdio: $row.find('td:eq(9) input[type=text]').val(),
                    OIPAID: $row.find('td:eq(10) input[type=text]').val(),
                    OIALLOWED: $row.find('td:eq(11) input[type=text]').val(),
                });
            });
        }
        else {
            $('#TabCbiDetails tbody tr').each(function (i, n) {
                var $row = $(n);
                rows.push({
                    cbfoio: $row.find('td:eq(0) input[type=text]').val(),
                    OIPAID: $row.find('td:eq(1) input[type=text]').val(),
                    OIALLOWED: $row.find('td:eq(2) input[type=text]').val(),
                });
            });
        }
        rows.shift();  // first row will be empty - so remove

        CBIDetaildto = encodeJson(rows);
        $('#divMainPage').addClass("hide");
        $('#divProcess').removeClass("hide");
        $('#divModifier').show();
        $('#divModifierName').show();

        $.ajax({
            type: 'POST',
            url: '../ControlLine/LoadPartialViewCBI',
            data: {
                controlValue: controlList,
                strCBIDetaildto: CBIDetaildto,
                hotkey: strF9,
                indc: indicator
            },
            cache: false,

            success: function (data) {
                $('#divMainPage').removeClass("hide");
                $('#divProcess').addClass("hide");
                $('#divMainPage').addClass("page-layout");
                $('#divPartialView').html(data);
                $('.First').hide();
                $('#hdnEnterKeyFlag').val("true");
            }
        });
    }

});

function DisplayFrAndBaagBtn(control) {
    var hostScreenInd = ["MHI", "MRI", "MHN", "MHP", "MRU"];
    var controVal = control && control !== "" ? control.split(",") : "";
    var screenInd = (controVal && controVal.length > 0) ? controVal[0] : "";
    $("#fr_window").hide();

    $("#baag_window").hide();
    $("#hdnfr_window").val("false");
    $("#hdnbaag_window").val("false");
    if (hostScreenInd.indexOf(screenInd) === -1) {
        return;
    }

    var hostFrAndBaagBtn = $("#hdnFrAndBaagBtnHost").val();
    var clmNbrSelected = $("#clmFlag").val();
    if (hostFrAndBaagBtn != undefined && hostFrAndBaagBtn === "true") {
        $("#fr_window").show();
        $("#baag_window").show();
        $("#hdnfr_window").val("true");
        $("#hdnbaag_window").val("true");
        if (clmNbrSelected != undefined && clmNbrSelected == "1") {
            $("#fr_window").css('visibility', 'visible');
            $("#hdnfr_window").val("true");
        }
        else {
            $("#fr_window").css('visibility', 'hidden');
            $("#hdnfr_window").val("false");
        }
        $("#baag_window").css('visibility', 'visible')
    }
}
function removeSession(controlval) {
    $.ajax({
        type: 'GET',
        url: '../ControlLine/RemoveSession',
        data: {
            controlval: controlval
        },
        dataType: 'html',
        cache: false,
        async: false,
        contentType: 'application/html; charset=utf-8',
        success: function (data) {
            $('#hdnPageUnload').val("NO")
        }
    });
}

function onStorageEvent(storageEvent) {  
    var clientNumber;
    var userId;
    var userClientToken;
    var qs = window.location.search.split("&");

    // get UserId and ClientNumber from query string
    if (qs.length == 2) {        
        if (qs[0].toUpperCase().indexOf("?CLIENTNUMBER=") >= 0) {
            clientNumber = qs[0].toUpperCase().replace("CLIENTNUMBER=", "");
            userId = qs[1].toUpperCase().replace("USERID=", "");
        }
        else
        {
            userId = qs[0].toUpperCase().replace("?USERID=", "");
            clientNumber = qs[1].toUpperCase().replace("CLIENTNUMBER=", "");
        }
        // create a variable name like "ClientXX-UserXXXXXXX"
        userClientToken = "Client"+clientNumber+"-"+"User"+userId;
    }
    
    if (typeof (userClientToken) != "undefined")
    {
        // see if the value user-client token value changed to "false"
        if (storageEvent.key == userClientToken && storageEvent.newValue == "false")
            {                
                // trigger the Logoff button click event
                $("#disabletab1").trigger("click");
            }
    }
          
}

// Needed for Sesssion Managment feature
window.addEventListener('storage', onStorageEvent, false);

function CheckPrevControlLine(controlValue) {
    var returnval = "";
    var isOnMSS = false;
    if ($('#hdnMSS').length > 0) {
        isOnMSS = true;
    }

    $.ajax({
        type: 'GET',
        url: '../ControlLine/CheckPrevControlLine',
        data: {
            controlValue: controlValue,
            isOnMSS: isOnMSS
        },
        cache: false,
        async: false,
        success: function (result) {
            if (result == "YES") {
                returnval = result;
            }
            else {
                returnval = result;
            }

        }
    });
    return returnval;
}

function encodeJson(data) {
    return data = encodeURIComponent(JSON.stringify(data));
}

function AlphaNumericRegExp(value, isSuffixReq) {
    if (isSuffixReq === true) {
        return /^([a-zA-Z0-9 ]{1})$/.test(value);
    }
    else {
        return /^([a-zA-Z0-9 ]{1})?$/.test(value);
    }
}
function CheckMpcOrNot() {
    var check = "";
    $.ajax({
        type: 'GET',
        url: '../ControlLine/CheckFromMpcOrNot',
        data: {},
        cache: false,
        async: false,
        success: function (data) {
            if (data == "NO") {
                check = data;
            }
        }
    });
    return check;
}
